import { faBell } from "@fortawesome/free-regular-svg-icons";
import { faBars } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import Container from "ui/Container";
import IconButton from "ui/IconButton";
import Link from "ui/Link";
import Navbar from "ui/Navbar";
import PillButton from "ui/PillButton";
import { useNavbar } from "ui/hooks/UseNavbar";
import { useAuthContext } from "../hooks/UseAuth";
import { client, resetToken } from "../main";
import { handleTRPCError } from "../utils/handle-trpc-error";
export const TopNavbar = () => {
  // TODO: Fix the invalid selector error for the id generated by useNavbar hook
  const value = useNavbar();

  const auth = useAuthContext();

  const logout = async () => {
    try {
      await client.user.signOut.mutate();
      resetToken();
      auth.dispatcher({ type: "reset-user" });
    } catch (error) {
      handleTRPCError(error, auth);
    }
  };

  return (
    <>
      <Navbar
        {...{ id: "top-navbar" }}
        expanded="lg"
        position="sticky-top"
        className="border-bottom"
      >
        <Container maxWidth="fluid">
          <Navbar.Brand color="primary">
            {/* <Typography as="h3" color="primary">
              HRMS
            </Typography> */}
          </Navbar.Brand>

          <Navbar.Toggler>
            <FontAwesomeIcon icon={faBars} />
          </Navbar.Toggler>

          <Navbar.Collapse>
            <Navbar.Links className="gap-3 ms-auto align-items-center">
              {/* <Navbar.LinkItem> */}
              {/* <Navbar.Link color="primary" component={IconButton}>
                  <FontAwesomeIcon icon={faQuestionCircle} /> */}
              {/* </Navbar.Link>
              </Navbar.LinkItem> */}

              <Navbar.LinkItem>
                <Navbar.Link color="primary" component={IconButton}>
                  <FontAwesomeIcon icon={faBell} />
                </Navbar.Link>
              </Navbar.LinkItem>

              <Navbar.LinkItem className="dropdown">
                <Navbar.Link
                  component={PillButton}
                  avatar={<Avatar />}
                  role="button"
                  data-bs-toggle="dropdown"
                  aria-expanded="false"
                />

                <ul className="dropdown-menu dropdown-menu-end">
                  <li>
                    <Link onClick={logout} className="dropdown-item">
                      Logout
                    </Link>
                  </li>
                </ul>
              </Navbar.LinkItem>
            </Navbar.Links>
          </Navbar.Collapse>
        </Container>
      </Navbar>
    </>
  );
};

const Avatar = () => {
  return <PillButton.Avatar src="/images/users.png" />;
};

export default TopNavbar;
