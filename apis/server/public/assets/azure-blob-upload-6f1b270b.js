function Et(r){return r.toLowerCase()}function Ns(r){if(r&&typeof r=="object"){const e=r;if(typeof e.rawHeaders=="function"&&typeof e.clone=="function"&&typeof e.get=="function"&&typeof e.set=="function"&&typeof e.contains=="function"&&typeof e.remove=="function"&&typeof e.headersArray=="function"&&typeof e.headerValues=="function"&&typeof e.headerNames=="function"&&typeof e.toJson=="function")return!0}return!1}class Ge{constructor(e){if(this._headersMap={},e)for(const t in e)this.set(t,e[t])}set(e,t){this._headersMap[Et(e)]={name:e,value:t.toString()}}get(e){const t=this._headersMap[Et(e)];return t?t.value:void 0}contains(e){return!!this._headersMap[Et(e)]}remove(e){const t=this.contains(e);return delete this._headersMap[Et(e)],t}rawHeaders(){return this.toJson({preserveCase:!0})}headersArray(){const e=[];for(const t in this._headersMap)e.push(this._headersMap[t]);return e}headerNames(){const e=[],t=this.headersArray();for(let a=0;a<t.length;++a)e.push(t[a].name);return e}headerValues(){const e=[],t=this.headersArray();for(let a=0;a<t.length;++a)e.push(t[a].value);return e}toJson(e={}){const t={};if(e.preserveCase)for(const a in this._headersMap){const s=this._headersMap[a];t[s.name]=s.value}else for(const a in this._headersMap){const s=this._headersMap[a];t[Et(s.name)]=s.value}return t}toString(){return JSON.stringify(this.toJson({preserveCase:!0}))}clone(){const e={};for(const t in this._headersMap){const a=this._headersMap[t];e[a.name]=a.value}return new Ge(e)}}function bs(r){let e="";for(let t=0;t<r.length;t++)e+=String.fromCharCode(r[t]);return btoa(e)}function Cs(r){const e=atob(r),t=new Uint8Array(e.length);for(let a=0;a<e.length;a++)t[a]=e.charCodeAt(a);return t}const Kt={coreHttpVersion:"3.0.2",HTTP:"http:",HTTPS:"https:",HTTP_PROXY:"HTTP_PROXY",HTTPS_PROXY:"HTTPS_PROXY",NO_PROXY:"NO_PROXY",ALL_PROXY:"ALL_PROXY",HttpConstants:{HttpVerbs:{PUT:"PUT",GET:"GET",DELETE:"DELETE",POST:"POST",MERGE:"MERGE",HEAD:"HEAD",PATCH:"PATCH"},StatusCodes:{TooManyRequests:429,ServiceUnavailable:503}},HeaderConstants:{AUTHORIZATION:"authorization",AUTHORIZATION_SCHEME:"Bearer",RETRY_AFTER:"Retry-After",USER_AGENT:"User-Agent"}},U="$",Te="_";var Yt,Qm=new Uint8Array(16);function Wm(){if(!Yt&&(Yt=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto<"u"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!Yt))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Yt(Qm)}const Ym=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function Jm(r){return typeof r=="string"&&Ym.test(r)}var J=[];for(var Tr=0;Tr<256;++Tr)J.push((Tr+256).toString(16).substr(1));function Zm(r){var e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,t=(J[r[e+0]]+J[r[e+1]]+J[r[e+2]]+J[r[e+3]]+"-"+J[r[e+4]]+J[r[e+5]]+"-"+J[r[e+6]]+J[r[e+7]]+"-"+J[r[e+8]]+J[r[e+9]]+"-"+J[r[e+10]]+J[r[e+11]]+J[r[e+12]]+J[r[e+13]]+J[r[e+14]]+J[r[e+15]]).toLowerCase();if(!Jm(t))throw TypeError("Stringified UUID is invalid");return t}function Vm(r,e,t){r=r||{};var a=r.random||(r.rng||Wm)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,e){t=t||0;for(var s=0;s<16;++s)e[t+s]=a[s];return e}return Zm(a)}const el=/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;function tl(r){return el.test(r)}function $e(){return Vm()}function rl(r,e,t,a){if(Array.isArray(r)||(r=[r]),!t||!a)return{[e]:r};const s={[e]:r};return s[U]={[t]:a},s}const al=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function sl(r){return al.test(r)}function wt(r,e,t){return!r||!e?r:r.split(e).join(t||"")}function nl(r){return typeof r!="object"&&typeof r!="function"||r===null}function il(r){return typeof r=="object"&&r!==null&&!Array.isArray(r)&&!(r instanceof RegExp)&&!(r instanceof Date)}class ge{constructor(e={},t){this.modelMappers=e,this.isXML=t}validateConstraints(e,t,a){const s=(n,i)=>{throw new Error(`"${a}" with value "${t}" should satisfy the constraint "${n}": ${i}.`)};if(e.constraints&&t!=null){const n=t,{ExclusiveMaximum:i,ExclusiveMinimum:o,InclusiveMaximum:m,InclusiveMinimum:l,MaxItems:c,MaxLength:p,MinItems:d,MinLength:y,MultipleOf:C,Pattern:f,UniqueItems:S}=e.constraints;i!=null&&n>=i&&s("ExclusiveMaximum",i),o!=null&&n<=o&&s("ExclusiveMinimum",o),m!=null&&n>m&&s("InclusiveMaximum",m),l!=null&&n<l&&s("InclusiveMinimum",l);const O=t;if(c!=null&&O.length>c&&s("MaxItems",c),p!=null&&O.length>p&&s("MaxLength",p),d!=null&&O.length<d&&s("MinItems",d),y!=null&&O.length<y&&s("MinLength",y),C!=null&&n%C!==0&&s("MultipleOf",C),f){const A=typeof f=="string"?new RegExp(f):f;(typeof t!="string"||t.match(A)===null)&&s("Pattern",f)}S&&O.some((A,de,k)=>k.indexOf(A)!==de)&&s("UniqueItems",S)}}serialize(e,t,a,s={}){var n,i,o;const m={rootName:(n=s.rootName)!==null&&n!==void 0?n:"",includeRoot:(i=s.includeRoot)!==null&&i!==void 0?i:!1,xmlCharKey:(o=s.xmlCharKey)!==null&&o!==void 0?o:Te};let l={};const c=e.type.name;a||(a=e.serializedName),c.match(/^Sequence$/i)!==null&&(l=[]),e.isConstant&&(t=e.defaultValue);const{required:p,nullable:d}=e;if(p&&d&&t===void 0)throw new Error(`${a} cannot be undefined.`);if(p&&!d&&t==null)throw new Error(`${a} cannot be null or undefined.`);if(!p&&d===!1&&t===null)throw new Error(`${a} cannot be null.`);return t==null||c.match(/^any$/i)!==null?l=t:c.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i)!==null?l=pl(c,a,t):c.match(/^Enum$/i)!==null?l=ul(a,e.type.allowedValues,t):c.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i)!==null?l=gl(c,t,a):c.match(/^ByteArray$/i)!==null?l=yl(a,t):c.match(/^Base64Url$/i)!==null?l=fl(a,t):c.match(/^Sequence$/i)!==null?l=hl(this,e,t,a,!!this.isXML,m):c.match(/^Dictionary$/i)!==null?l=xl(this,e,t,a,!!this.isXML,m):c.match(/^Composite$/i)!==null&&(l=bl(this,e,t,a,!!this.isXML,m)),l}deserialize(e,t,a,s={}){var n,i,o;const m={rootName:(n=s.rootName)!==null&&n!==void 0?n:"",includeRoot:(i=s.includeRoot)!==null&&i!==void 0?i:!1,xmlCharKey:(o=s.xmlCharKey)!==null&&o!==void 0?o:Te};if(t==null)return this.isXML&&e.type.name==="Sequence"&&!e.xmlIsWrapped&&(t=[]),e.defaultValue!==void 0&&(t=e.defaultValue),t;let l;const c=e.type.name;if(a||(a=e.serializedName),c.match(/^Composite$/i)!==null)l=Pl(this,e,t,a,m);else{if(this.isXML){const p=m.xmlCharKey,d=t;d[U]!=null&&d[p]!=null&&(t=d[p])}c.match(/^Number$/i)!==null?(l=parseFloat(t),isNaN(l)&&(l=t)):c.match(/^Boolean$/i)!==null?t==="true"?l=!0:t==="false"?l=!1:l=t:c.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i)!==null?l=t:c.match(/^(Date|DateTime|DateTimeRfc1123)$/i)!==null?l=new Date(t):c.match(/^UnixTime$/i)!==null?l=dl(t):c.match(/^ByteArray$/i)!==null?l=Cs(t):c.match(/^Base64Url$/i)!==null?l=ll(t):c.match(/^Sequence$/i)!==null?l=Rl(this,e,t,a,m):c.match(/^Dictionary$/i)!==null&&(l=vl(this,e,t,a,m))}return e.isConstant&&(l=e.defaultValue),l}}function ol(r,e){let t=r.length;for(;t-1>=0&&r[t-1]===e;)--t;return r.substr(0,t)}function ml(r){if(!r)return;if(!(r instanceof Uint8Array))throw new Error("Please provide an input of type Uint8Array for converting to Base64Url.");const e=bs(r);return ol(e,"=").replace(/\+/g,"-").replace(/\//g,"_")}function ll(r){if(r){if(r&&typeof r.valueOf()!="string")throw new Error("Please provide an input of type string for converting to Uint8Array");return r=r.replace(/-/g,"+").replace(/_/g,"/"),Cs(r)}}function jr(r){const e=[];let t="";if(r){const a=r.split(".");for(const s of a)s.charAt(s.length-1)==="\\"?t+=s.substr(0,s.length-1)+".":(t+=s,e.push(t),t="")}return e}function cl(r){if(r)return typeof r.valueOf()=="string"&&(r=new Date(r)),Math.floor(r.getTime()/1e3)}function dl(r){if(r)return new Date(r*1e3)}function pl(r,e,t){if(t!=null){if(r.match(/^Number$/i)!==null){if(typeof t!="number")throw new Error(`${e} with value ${t} must be of type number.`)}else if(r.match(/^String$/i)!==null){if(typeof t.valueOf()!="string")throw new Error(`${e} with value "${t}" must be of type string.`)}else if(r.match(/^Uuid$/i)!==null){if(!(typeof t.valueOf()=="string"&&tl(t)))throw new Error(`${e} with value "${t}" must be of type string and a valid uuid.`)}else if(r.match(/^Boolean$/i)!==null){if(typeof t!="boolean")throw new Error(`${e} with value ${t} must be of type boolean.`)}else if(r.match(/^Stream$/i)!==null){const a=typeof t;if(a!=="string"&&a!=="function"&&!(t instanceof ArrayBuffer)&&!ArrayBuffer.isView(t)&&!((typeof Blob=="function"||typeof Blob=="object")&&t instanceof Blob))throw new Error(`${e} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`)}}return t}function ul(r,e,t){if(!e)throw new Error(`Please provide a set of allowedValues to validate ${r} as an Enum Type.`);if(!e.some(s=>typeof s.valueOf()=="string"?s.toLowerCase()===t.toLowerCase():s===t))throw new Error(`${t} is not a valid value for ${r}. The valid values are: ${JSON.stringify(e)}.`);return t}function yl(r,e){let t="";if(e!=null){if(!(e instanceof Uint8Array))throw new Error(`${r} must be of type Uint8Array.`);t=bs(e)}return t}function fl(r,e){let t="";if(e!=null){if(!(e instanceof Uint8Array))throw new Error(`${r} must be of type Uint8Array.`);t=ml(e)||""}return t}function gl(r,e,t){if(e!=null){if(r.match(/^Date$/i)!==null){if(!(e instanceof Date||typeof e.valueOf()=="string"&&!isNaN(Date.parse(e))))throw new Error(`${t} must be an instanceof Date or a string in ISO8601 format.`);e=e instanceof Date?e.toISOString().substring(0,10):new Date(e).toISOString().substring(0,10)}else if(r.match(/^DateTime$/i)!==null){if(!(e instanceof Date||typeof e.valueOf()=="string"&&!isNaN(Date.parse(e))))throw new Error(`${t} must be an instanceof Date or a string in ISO8601 format.`);e=e instanceof Date?e.toISOString():new Date(e).toISOString()}else if(r.match(/^DateTimeRfc1123$/i)!==null){if(!(e instanceof Date||typeof e.valueOf()=="string"&&!isNaN(Date.parse(e))))throw new Error(`${t} must be an instanceof Date or a string in RFC-1123 format.`);e=e instanceof Date?e.toUTCString():new Date(e).toUTCString()}else if(r.match(/^UnixTime$/i)!==null){if(!(e instanceof Date||typeof e.valueOf()=="string"&&!isNaN(Date.parse(e))))throw new Error(`${t} must be an instanceof Date or a string in RFC-1123/ISO8601 format for it to be serialized in UnixTime/Epoch format.`);e=cl(e)}else if(r.match(/^TimeSpan$/i)!==null&&!sl(e))throw new Error(`${t} must be a string in ISO 8601 format. Instead was "${e}".`)}return e}function hl(r,e,t,a,s,n){if(!Array.isArray(t))throw new Error(`${a} must be of type Array.`);const i=e.type.element;if(!i||typeof i!="object")throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${a}.`);const o=[];for(let m=0;m<t.length;m++){const l=r.serialize(i,t[m],a,n);if(s&&i.xmlNamespace){const c=i.xmlNamespacePrefix?`xmlns:${i.xmlNamespacePrefix}`:"xmlns";i.type.name==="Composite"?(o[m]=Object.assign({},l),o[m][U]={[c]:i.xmlNamespace}):(o[m]={},o[m][n.xmlCharKey]=l,o[m][U]={[c]:i.xmlNamespace})}else o[m]=l}return o}function xl(r,e,t,a,s,n){if(typeof t!="object")throw new Error(`${a} must be of type object.`);const i=e.type.value;if(!i||typeof i!="object")throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${a}.`);const o={};for(const m of Object.keys(t)){const l=r.serialize(i,t[m],a,n);o[m]=Rs(i,l,s,n)}if(s&&e.xmlNamespace){const m=e.xmlNamespacePrefix?`xmlns:${e.xmlNamespacePrefix}`:"xmlns",l=o;return l[U]={[m]:e.xmlNamespace},l}return o}function Nl(r,e,t){const a=e.type.additionalProperties;if(!a&&e.type.className){const s=Ps(r,e,t);return s==null?void 0:s.type.additionalProperties}return a}function Ps(r,e,t){const a=e.type.className;if(!a)throw new Error(`Class name for model "${t}" is not provided in the mapper "${JSON.stringify(e,void 0,2)}".`);return r.modelMappers[a]}function vs(r,e,t){let a=e.type.modelProperties;if(!a){const s=Ps(r,e,t);if(!s)throw new Error(`mapper() cannot be null or undefined for model "${e.type.className}".`);if(a=s==null?void 0:s.type.modelProperties,!a)throw new Error(`modelProperties cannot be null or undefined in the mapper "${JSON.stringify(s)}" of type "${e.type.className}" for object "${t}".`)}return a}function bl(r,e,t,a,s,n){if(sr(r,e)&&(e=Ss(r,e,t,"clientName")),t!=null){const i={},o=vs(r,e,a);for(const l of Object.keys(o)){const c=o[l];if(c.readOnly)continue;let p,d=i;if(r.isXML)c.xmlIsWrapped?p=c.xmlName:p=c.xmlElementName||c.xmlName;else{const y=jr(c.serializedName);p=y.pop();for(const C of y)d[C]==null&&(t[l]!=null||c.defaultValue!==void 0)&&(d[C]={}),d=d[C]}if(d!=null){if(s&&e.xmlNamespace){const O=e.xmlNamespacePrefix?`xmlns:${e.xmlNamespacePrefix}`:"xmlns";d[U]=Object.assign(Object.assign({},d[U]),{[O]:e.xmlNamespace})}const y=c.serializedName!==""?a+"."+c.serializedName:a;let C=t[l];const f=sr(r,e);f&&f.clientName===l&&C==null&&(C=e.serializedName);const S=r.serialize(c,C,y,n);if(S!==void 0&&p!=null){const O=Rs(c,S,s,n);s&&c.xmlIsAttribute?(d[U]=d[U]||{},d[U][p]=S):s&&c.xmlIsWrapped?d[p]={[c.xmlElementName]:O}:d[p]=O}}}const m=Nl(r,e,a);if(m){const l=Object.keys(o);for(const c in t)l.every(d=>d!==c)&&(i[c]=r.serialize(m,t[c],a+'["'+c+'"]',n))}return i}return t}function Rs(r,e,t,a){if(!t||!r.xmlNamespace)return e;const n={[r.xmlNamespacePrefix?`xmlns:${r.xmlNamespacePrefix}`:"xmlns"]:r.xmlNamespace};if(["Composite"].includes(r.type.name)){if(e[U])return e;{const o=Object.assign({},e);return o[U]=n,o}}const i={};return i[a.xmlCharKey]=e,i[U]=n,i}function Cl(r,e){return[U,e.xmlCharKey].includes(r)}function Pl(r,e,t,a,s){var n,i;const o=(n=s.xmlCharKey)!==null&&n!==void 0?n:Te;sr(r,e)&&(e=Ss(r,e,t,"serializedName"));const m=vs(r,e,a);let l={};const c=[];for(const d of Object.keys(m)){const y=m[d],C=jr(m[d].serializedName);c.push(C[0]);const{serializedName:f,xmlName:S,xmlElementName:O}=y;let A=a;f!==""&&f!==void 0&&(A=a+"."+f);const de=y.headerCollectionPrefix;if(de){const k={};for(const $ of Object.keys(t))$.startsWith(de)&&(k[$.substring(de.length)]=r.deserialize(y.type.value,t[$],A,s)),c.push($);l[d]=k}else if(r.isXML)if(y.xmlIsAttribute&&t[U])l[d]=r.deserialize(y,t[U][S],A,s);else if(y.xmlIsMsText)t[o]!==void 0?l[d]=t[o]:typeof t=="string"&&(l[d]=t);else{const k=O||S||f;if(y.xmlIsWrapped){const $=t[S],Le=(i=$==null?void 0:$[O])!==null&&i!==void 0?i:[];l[d]=r.deserialize(y,Le,A,s),c.push(S)}else{const $=t[k];l[d]=r.deserialize(y,$,A,s),c.push(k)}}else{let k,$=t;for(const ze of C){if(!$)break;$=$[ze]}k=$;const Le=e.type.polymorphicDiscriminator;Le&&d===Le.clientName&&k==null&&(k=e.serializedName);let zt;if(Array.isArray(t[d])&&m[d].serializedName===""){k=t[d];const ze=r.deserialize(y,k,A,s);for(const[ka,Xm]of Object.entries(l))Object.prototype.hasOwnProperty.call(ze,ka)||(ze[ka]=Xm);l=ze}else(k!==void 0||y.defaultValue!==void 0)&&(zt=r.deserialize(y,k,A,s),l[d]=zt)}}const p=e.type.additionalProperties;if(p){const d=y=>{for(const C in m)if(jr(m[C].serializedName)[0]===y)return!1;return!0};for(const y in t)d(y)&&(l[y]=r.deserialize(p,t[y],a+'["'+y+'"]',s))}else if(t)for(const d of Object.keys(t))l[d]===void 0&&!c.includes(d)&&!Cl(d,s)&&(l[d]=t[d]);return l}function vl(r,e,t,a,s){const n=e.type.value;if(!n||typeof n!="object")throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${a}`);if(t){const i={};for(const o of Object.keys(t))i[o]=r.deserialize(n,t[o],a,s);return i}return t}function Rl(r,e,t,a,s){const n=e.type.element;if(!n||typeof n!="object")throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${a}`);if(t){Array.isArray(t)||(t=[t]);const i=[];for(let o=0;o<t.length;o++)i[o]=r.deserialize(n,t[o],`${a}[${o}]`,s);return i}return t}function Ss(r,e,t,a){const s=sr(r,e);if(s){const n=s[a];if(n!=null){const i=t[n];if(i!=null){const o=e.type.uberParent||e.type.className,m=i===o?i:o+"."+i,l=r.modelMappers.discriminators[m];l&&(e=l)}}}return e}function sr(r,e){return e.type.polymorphicDiscriminator||Ua(r,e.type.uberParent)||Ua(r,e.type.className)}function Ua(r,e){return e&&r.modelMappers[e]&&r.modelMappers[e].type.polymorphicDiscriminator}function Sl(r){const e={};for(const t of r)e[t]=t;return e}const at=Sl(["Base64Url","Boolean","ByteArray","Composite","Date","DateTime","DateTimeRfc1123","Dictionary","Enum","Number","Object","Sequence","String","Stream","TimeSpan","UnixTime"]);function zl(r){if(r&&typeof r=="object"){const e=r;if(typeof e.url=="string"&&typeof e.method=="string"&&typeof e.headers=="object"&&Ns(e.headers)&&typeof e.validateRequestProperties=="function"&&typeof e.prepare=="function"&&typeof e.clone=="function")return!0}return!1}class Ht{constructor(e,t,a,s,n,i,o,m,l,c,p,d,y,C,f){this.streamResponseBody=i,this.streamResponseStatusCodes=f,this.url=e||"",this.method=t||"GET",this.headers=Ns(n)?n:new Ge(n),this.body=a,this.query=s,this.formData=void 0,this.withCredentials=o||!1,this.abortSignal=m,this.timeout=l||0,this.onUploadProgress=c,this.onDownloadProgress=p,this.proxySettings=d,this.keepAlive=y,this.decompressResponse=C,this.requestId=this.headers.get("x-ms-client-request-id")||$e()}validateRequestProperties(){if(!this.method)throw new Error("WebResource.method is required.");if(!this.url)throw new Error("WebResource.url is required.")}prepare(e){if(!e)throw new Error("options object is required");if(e.method===void 0||e.method===null||typeof e.method.valueOf()!="string")throw new Error("options.method must be a string.");if(e.url&&e.pathTemplate)throw new Error("options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.");if((e.pathTemplate===void 0||e.pathTemplate===null||typeof e.pathTemplate.valueOf()!="string")&&(e.url===void 0||e.url===null||typeof e.url.valueOf()!="string"))throw new Error("Please provide exactly one of options.pathTemplate or options.url.");if(e.url){if(typeof e.url!="string")throw new Error('options.url must be of type "string".');this.url=e.url}if(e.method){const t=["GET","PUT","HEAD","DELETE","OPTIONS","POST","PATCH","TRACE"];if(t.indexOf(e.method.toUpperCase())===-1)throw new Error('The provided method "'+e.method+'" is invalid. Supported HTTP methods are: '+JSON.stringify(t))}if(this.method=e.method.toUpperCase(),e.pathTemplate){const{pathTemplate:t,pathParameters:a}=e;if(typeof t!="string")throw new Error('options.pathTemplate must be of type "string".');e.baseUrl||(e.baseUrl="https://management.azure.com");const s=e.baseUrl;let n=s+(s.endsWith("/")?"":"/")+(t.startsWith("/")?t.slice(1):t);const i=n.match(/({[\w-]*\s*[\w-]*})/gi);if(i&&i.length){if(!a)throw new Error(`pathTemplate: ${t} has been provided. Hence, options.pathParameters must also be provided.`);i.forEach(function(o){const m=o.slice(1,-1),l=a[m];if(l==null||!(typeof l=="string"||typeof l=="object")){const c=JSON.stringify(a,void 0,2);throw new Error(`pathTemplate: ${t} contains the path parameter ${m} however, it is not present in parameters: ${c}.The value of the path parameter can either be a "string" of the form { ${m}: "some sample value" } or it can be an "object" of the form { "${m}": { value: "some sample value", skipUrlEncoding: true } }.`)}if(typeof l.valueOf()=="string"&&(n=n.replace(o,encodeURIComponent(l))),typeof l.valueOf()=="object"){if(!l.value)throw new Error(`options.pathParameters[${m}] is of type "object" but it does not contain a "value" property.`);l.skipUrlEncoding?n=n.replace(o,l.value):n=n.replace(o,encodeURIComponent(l.value))}})}this.url=n}if(e.queryParameters){const t=e.queryParameters;if(typeof t!="object")throw new Error('options.queryParameters must be of type object. It should be a JSON object of "query-parameter-name" as the key and the "query-parameter-value" as the value. The "query-parameter-value" may be fo type "string" or an "object" of the form { value: "query-parameter-value", skipUrlEncoding: true }.');this.url&&this.url.indexOf("?")===-1&&(this.url+="?");const a=[];this.query={};for(const s in t){const n=t[s];if(n){if(typeof n=="string")a.push(s+"="+encodeURIComponent(n)),this.query[s]=encodeURIComponent(n);else if(typeof n=="object"){if(!n.value)throw new Error(`options.queryParameters[${s}] is of type "object" but it does not contain a "value" property.`);n.skipUrlEncoding?(a.push(s+"="+n.value),this.query[s]=n.value):(a.push(s+"="+encodeURIComponent(n.value)),this.query[s]=encodeURIComponent(n.value))}}}this.url+=a.join("&")}if(e.headers){const t=e.headers;for(const a of Object.keys(e.headers))this.headers.set(a,t[a])}return this.headers.get("accept-language")||this.headers.set("accept-language","en-US"),!this.headers.get("x-ms-client-request-id")&&!e.disableClientRequestId&&this.headers.set("x-ms-client-request-id",this.requestId),this.headers.get("Content-Type")||this.headers.set("Content-Type","application/json; charset=utf-8"),this.body=e.body,e.body!==void 0&&e.body!==null&&(e.bodyIsStream?(this.headers.get("Transfer-Encoding")||this.headers.set("Transfer-Encoding","chunked"),this.headers.get("Content-Type")!=="application/octet-stream"&&this.headers.set("Content-Type","application/octet-stream")):(e.serializationMapper&&(this.body=new ge(e.mappers).serialize(e.serializationMapper,e.body,"requestBody")),e.disableJsonStringifyOnBody||(this.body=JSON.stringify(e.body)))),e.spanOptions&&(this.spanOptions=e.spanOptions),e.tracingContext&&(this.tracingContext=e.tracingContext),this.abortSignal=e.abortSignal,this.onDownloadProgress=e.onDownloadProgress,this.onUploadProgress=e.onUploadProgress,this}clone(){const e=new Ht(this.url,this.method,this.body,this.query,this.headers&&this.headers.clone(),this.streamResponseBody,this.withCredentials,this.abortSignal,this.timeout,this.onUploadProgress,this.onDownloadProgress,this.proxySettings,this.keepAlive,this.decompressResponse,this.streamResponseStatusCodes);return this.formData&&(e.formData=this.formData),this.operationSpec&&(e.operationSpec=this.operationSpec),this.shouldDeserialize&&(e.shouldDeserialize=this.shouldDeserialize),this.operationResponseGetter&&(e.operationResponseGetter=this.operationResponseGetter),e}}class Gt extends Error{constructor(e){super(e),this.name="AbortError"}}class st{constructor(){this._rawQuery={}}any(){return Object.keys(this._rawQuery).length>0}keys(){return Object.keys(this._rawQuery)}set(e,t){const a=t;if(e)if(a!=null){const s=Array.isArray(a)?a:a.toString();this._rawQuery[e]=s}else delete this._rawQuery[e]}get(e){return e?this._rawQuery[e]:void 0}toString(){let e="";for(const t in this._rawQuery){e&&(e+="&");const a=this._rawQuery[t];if(Array.isArray(a)){const s=[];for(const n of a)s.push(`${t}=${n}`);e+=s.join("&")}else e+=`${t}=${a}`}return e}static parse(e){const t=new st;if(e){e.startsWith("?")&&(e=e.substring(1));let a="ParameterName",s="",n="";for(let i=0;i<e.length;++i){const o=e[i];switch(a){case"ParameterName":switch(o){case"=":a="ParameterValue";break;case"&":s="",n="";break;default:s+=o;break}break;case"ParameterValue":switch(o){case"&":t.set(s,n),s="",n="",a="ParameterName";break;default:n+=o;break}break;default:throw new Error("Unrecognized URLQuery parse state: "+a)}}a==="ParameterValue"&&t.set(s,n)}return t}}class G{setScheme(e){e?this.set(e,"SCHEME"):this._scheme=void 0}getScheme(){return this._scheme}setHost(e){e?this.set(e,"SCHEME_OR_HOST"):this._host=void 0}getHost(){return this._host}setPort(e){e==null||e===""?this._port=void 0:this.set(e.toString(),"PORT")}getPort(){return this._port}setPath(e){if(!e)this._path=void 0;else{const t=e.indexOf("://");if(t!==-1){const a=e.lastIndexOf("/",t);this.set(a===-1?e:e.substr(a+1),"SCHEME")}else this.set(e,"PATH")}}appendPath(e){if(e){let t=this.getPath();t&&(t.endsWith("/")||(t+="/"),e.startsWith("/")&&(e=e.substring(1)),e=t+e),this.set(e,"PATH")}}getPath(){return this._path}setQuery(e){e?this._query=st.parse(e):this._query=void 0}setQueryParameter(e,t){e&&(this._query||(this._query=new st),this._query.set(e,t))}getQueryParameterValue(e){return this._query?this._query.get(e):void 0}getQuery(){return this._query?this._query.toString():void 0}set(e,t){const a=new wl(e,t);for(;a.next();){const s=a.current();let n;if(s)switch(s.type){case"SCHEME":this._scheme=s.text||void 0;break;case"HOST":this._host=s.text||void 0;break;case"PORT":this._port=s.text||void 0;break;case"PATH":n=s.text||void 0,(!this._path||this._path==="/"||n!=="/")&&(this._path=n);break;case"QUERY":this._query=st.parse(s.text);break;default:throw new Error(`Unrecognized URLTokenType: ${s.type}`)}}}toString(){let e="";return this._scheme&&(e+=`${this._scheme}://`),this._host&&(e+=this._host),this._port&&(e+=`:${this._port}`),this._path&&(this._path.startsWith("/")||(e+="/"),e+=this._path),this._query&&this._query.any()&&(e+=`?${this._query.toString()}`),e}replaceAll(e,t){e&&(this.setScheme(wt(this.getScheme(),e,t)),this.setHost(wt(this.getHost(),e,t)),this.setPort(wt(this.getPort(),e,t)),this.setPath(wt(this.getPath(),e,t)),this.setQuery(wt(this.getQuery(),e,t)))}static parse(e){const t=new G;return t.set(e,"SCHEME_OR_HOST"),t}}class ee{constructor(e,t){this.text=e,this.type=t}static scheme(e){return new ee(e,"SCHEME")}static host(e){return new ee(e,"HOST")}static port(e){return new ee(e,"PORT")}static path(e){return new ee(e,"PATH")}static query(e){return new ee(e,"QUERY")}}function El(r){const e=r.charCodeAt(0);return 48<=e&&e<=57||65<=e&&e<=90||97<=e&&e<=122}class wl{constructor(e,t){this._text=e,this._textLength=e?e.length:0,this._currentState=t??"SCHEME_OR_HOST",this._currentIndex=0}current(){return this._currentToken}next(){if(!Be(this))this._currentToken=void 0;else switch(this._currentState){case"SCHEME":Bl(this);break;case"SCHEME_OR_HOST":ql(this);break;case"HOST":Il(this);break;case"PORT":Ml(this);break;case"PATH":_l(this);break;case"QUERY":Hl(this);break;default:throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`)}return!!this._currentToken}}function Tl(r){let e="";return r._currentIndex<r._textLength&&(e=r._text.substring(r._currentIndex),r._currentIndex=r._textLength),e}function Be(r){return r._currentIndex<r._textLength}function Oe(r){return r._text[r._currentIndex]}function yr(r,e){Be(r)&&(e||(e=1),r._currentIndex+=e)}function zs(r,e){let t=r._currentIndex+e;return r._textLength<t&&(t=r._textLength),r._text.substring(r._currentIndex,t)}function Es(r,e){let t="";for(;Be(r);){const a=Oe(r);if(e(a))t+=a,yr(r);else break}return t}function Ol(r){return Es(r,e=>El(e))}function fr(r,...e){return Es(r,t=>e.indexOf(t)===-1)}function Bl(r){const e=Ol(r);r._currentToken=ee.scheme(e),Be(r)?r._currentState="HOST":r._currentState="DONE"}function ql(r){const e=fr(r,":","/","?");Be(r)?Oe(r)===":"?zs(r,3)==="://"?(r._currentToken=ee.scheme(e),r._currentState="HOST"):(r._currentToken=ee.host(e),r._currentState="PORT"):(r._currentToken=ee.host(e),Oe(r)==="/"?r._currentState="PATH":r._currentState="QUERY"):(r._currentToken=ee.host(e),r._currentState="DONE")}function Il(r){zs(r,3)==="://"&&yr(r,3);const e=fr(r,":","/","?");r._currentToken=ee.host(e),Be(r)?Oe(r)===":"?r._currentState="PORT":Oe(r)==="/"?r._currentState="PATH":r._currentState="QUERY":r._currentState="DONE"}function Ml(r){Oe(r)===":"&&yr(r);const e=fr(r,"/","?");r._currentToken=ee.port(e),Be(r)?Oe(r)==="/"?r._currentState="PATH":r._currentState="QUERY":r._currentState="DONE"}function _l(r){const e=fr(r,"?");r._currentToken=ee.path(e),Be(r)?r._currentState="QUERY":r._currentState="DONE"}function Hl(r){Oe(r)==="?"&&yr(r);const e=Tl(r);r._currentToken=ee.query(e),r._currentState="DONE"}const ja="REDACTED",Fa=["x-ms-client-request-id","x-ms-return-client-request-id","x-ms-useragent","x-ms-correlation-request-id","x-ms-request-id","client-request-id","ms-cv","return-client-request-id","traceparent","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Origin","Accept","Accept-Encoding","Cache-Control","Connection","Content-Length","Content-Type","Date","ETag","Expires","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Last-Modified","Pragma","Request-Id","Retry-After","Server","Transfer-Encoding","User-Agent","WWW-Authenticate"],$a=["api-version"];class ws{constructor({allowedHeaderNames:e=[],allowedQueryParameters:t=[]}={}){e=Array.isArray(e)?Fa.concat(e):Fa,t=Array.isArray(t)?$a.concat(t):$a,this.allowedHeaderNames=new Set(e.map(a=>a.toLowerCase())),this.allowedQueryParameters=new Set(t.map(a=>a.toLowerCase()))}sanitize(e){const t=new Set;return JSON.stringify(e,(a,s)=>{if(s instanceof Error)return Object.assign(Object.assign({},s),{name:s.name,message:s.message});if(a==="_headersMap")return this.sanitizeHeaders(s);if(a==="url")return this.sanitizeUrl(s);if(a==="query")return this.sanitizeQuery(s);if(a==="body")return;if(a==="response")return;if(a==="operationSpec")return;if(Array.isArray(s)||il(s)){if(t.has(s))return"[Circular]";t.add(s)}return s},2)}sanitizeHeaders(e){return this.sanitizeObject(e,this.allowedHeaderNames,(t,a)=>t[a].value)}sanitizeQuery(e){return this.sanitizeObject(e,this.allowedQueryParameters,(t,a)=>t[a])}sanitizeObject(e,t,a){if(typeof e!="object"||e===null)return e;const s={};for(const n of Object.keys(e))t.has(n.toLowerCase())?s[n]=a(e,n):s[n]=ja;return s}sanitizeUrl(e){if(typeof e!="string"||e===null)return e;const t=G.parse(e),a=t.getQuery();if(!a)return e;const s=st.parse(a);for(const n of s.keys())this.allowedQueryParameters.has(n.toLowerCase())||s.set(n,ja);return t.setQuery(s.toString()),t.toString()}}const Dl={},Ll=new ws;class oe extends Error{constructor(e,t,a,s,n){super(e),this.name="RestError",this.code=t,this.statusCode=a,this.request=s,this.response=n,Object.setPrototypeOf(this,oe.prototype)}[Dl](){return`RestError: ${this.message} 
 ${Ll.sanitize(this)}`}}oe.REQUEST_SEND_ERROR="REQUEST_SEND_ERROR";oe.PARSE_ERROR="PARSE_ERROR";class Ts{sendRequest(e){var t;const a=new XMLHttpRequest;if(e.proxySettings)throw new Error("HTTP proxy is not supported in browser environment");const s=e.abortSignal;if(s){if(s.aborted)return Promise.reject(new Gt("The operation was aborted."));const n=()=>{a.abort()};s.addEventListener("abort",n),a.addEventListener("readystatechange",()=>{a.readyState===XMLHttpRequest.DONE&&s.removeEventListener("abort",n)})}if(Ka(a.upload,e.onUploadProgress),Ka(a,e.onDownloadProgress),e.formData){const n=e.formData,i=new FormData,o=(l,c)=>{c&&Object.prototype.hasOwnProperty.call(c,"value")&&Object.prototype.hasOwnProperty.call(c,"options")?i.append(l,c.value,c.options):i.append(l,c)};for(const l of Object.keys(n)){const c=n[l];if(Array.isArray(c))for(let p=0;p<c.length;p++)o(l,c[p]);else o(l,c)}e.body=i,e.formData=void 0;const m=e.headers.get("Content-Type");m&&m.indexOf("multipart/form-data")!==-1&&e.headers.remove("Content-Type")}a.open(e.method,e.url),a.timeout=e.timeout,a.withCredentials=e.withCredentials;for(const n of e.headers.headersArray())a.setRequestHeader(n.name,n.value);return a.responseType=!((t=e.streamResponseStatusCodes)===null||t===void 0)&&t.size||e.streamResponseBody?"blob":"text",a.send(e.body===void 0?null:e.body),a.responseType==="blob"?new Promise((n,i)=>{Al(a,e,n,i),Fr(e,a,i)}):new Promise(function(n,i){a.addEventListener("load",()=>n({request:e,status:a.status,headers:rr(a),bodyAsText:a.responseText})),Fr(e,a,i)})}}function Al(r,e,t,a){r.addEventListener("readystatechange",()=>{var s;if(r.readyState===XMLHttpRequest.HEADERS_RECEIVED)if(e.streamResponseBody||!((s=e.streamResponseStatusCodes)===null||s===void 0)&&s.has(r.status)){const n=new Promise((i,o)=>{r.addEventListener("load",()=>{i(r.response)}),Fr(e,r,o)});t({request:e,status:r.status,headers:rr(r),blobBody:n})}else r.addEventListener("load",()=>{if(r.response){const n=new FileReader;n.onload=function(i){var o;const m=(o=i.target)===null||o===void 0?void 0:o.result;t({request:e,status:r.status,headers:rr(r),bodyAsText:m})},n.onerror=function(i){a(n.error)},n.readAsText(r.response,"UTF-8")}else t({request:e,status:r.status,headers:rr(r)})})})}function Ka(r,e){e&&r.addEventListener("progress",t=>e({loadedBytes:t.loaded}))}function rr(r){const e=new Ge,t=r.getAllResponseHeaders().trim().split(/[\r\n]+/);for(const a of t){const s=a.indexOf(":"),n=a.slice(0,s),i=a.slice(s+2);e.set(n,i)}return e}function Fr(r,e,t){e.addEventListener("error",()=>t(new oe(`Failed to send request to ${r.url}`,oe.REQUEST_SEND_ERROR,void 0,r)));const a=new Gt("The operation was aborted.");e.addEventListener("abort",()=>t(a)),e.addEventListener("timeout",()=>t(a))}var $r;(function(r){r[r.OFF=0]="OFF",r[r.ERROR=1]="ERROR",r[r.WARNING=2]="WARNING",r[r.INFO=3]="INFO"})($r||($r={}));function kl(r,e){var t={};for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&e.indexOf(a)<0&&(t[a]=r[a]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,a=Object.getOwnPropertySymbols(r);s<a.length;s++)e.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(r,a[s])&&(t[a[s]]=r[a[s]]);return t}function Ga(r){var e=typeof Symbol=="function"&&Symbol.iterator,t=e&&r[e],a=0;if(t)return t.call(r);if(r&&typeof r.length=="number")return{next:function(){return r&&a>=r.length&&(r=void 0),{value:r&&r[a++],done:!r}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function E(r){return this instanceof E?(this.v=r,this):new E(r)}function te(r,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var a=t.apply(r,e||[]),s,n=[];return s={},i("next"),i("throw"),i("return"),s[Symbol.asyncIterator]=function(){return this},s;function i(d){a[d]&&(s[d]=function(y){return new Promise(function(C,f){n.push([d,y,C,f])>1||o(d,y)})})}function o(d,y){try{m(a[d](y))}catch(C){p(n[0][3],C)}}function m(d){d.value instanceof E?Promise.resolve(d.value.v).then(l,c):p(n[0][2],d)}function l(d){o("next",d)}function c(d){o("throw",d)}function p(d,y){d(y),n.shift(),n.length&&o(n[0][0],n[0][1])}}function ot(r){var e,t;return e={},a("next"),a("throw",function(s){throw s}),a("return"),e[Symbol.iterator]=function(){return this},e;function a(s,n){e[s]=r[s]?function(i){return(t=!t)?{value:E(r[s](i)),done:!1}:n?n(i):i}:n}}function ne(r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=r[Symbol.asyncIterator],t;return e?e.call(r):(r=typeof Ga=="function"?Ga(r):r[Symbol.iterator](),t={},a("next"),a("throw"),a("return"),t[Symbol.asyncIterator]=function(){return this},t);function a(n){t[n]=r[n]&&function(i){return new Promise(function(o,m){i=r[n](i),s(o,m,i.done,i.value)})}}function s(n,i,o,m){Promise.resolve(m).then(function(l){n({value:l,done:o})},i)}}function x(r){const{requestOptions:e,tracingOptions:t}=r;let s=kl(r,["requestOptions","tracingOptions"]);return e&&(s=Object.assign(Object.assign({},s),e)),t&&(s.tracingContext=t.tracingContext,s.spanOptions=t==null?void 0:t.spanOptions),s}class F{constructor(e,t){this._nextPolicy=e,this._options=t}shouldLog(e){return this._options.shouldLog(e)}log(e,t){this._options.log(e,t)}}class Ul{constructor(e){this._logger=e}shouldLog(e){return!!this._logger&&e!==$r.OFF&&e<=this._logger.minimumLogLevel}log(e,t){this._logger&&this.shouldLog(e)&&this._logger.log(e,t)}}if(!self.document||!self.DOMParser||!self.Node||!self.XMLSerializer)throw new Error('This library depends on the following DOM objects: ["document", "DOMParser", "Node", "XMLSerializer"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. ');let Or;function Kr(){return Or||(Or=document.implementation.createDocument(null,null,null)),Or}let Br;function Os(){return Br||(Br=new DOMParser),Br}let qr;function jl(){return qr||(qr=new XMLSerializer),qr}let Ue;typeof self.trustedTypes<"u"&&(Ue=self.trustedTypes.createPolicy("@azure/core-http#xml.browser",{createHTML:r=>r}));function Fl(r,e={}){var t,a,s,n;try{const i={rootName:(t=e.rootName)!==null&&t!==void 0?t:"",includeRoot:(a=e.includeRoot)!==null&&a!==void 0?a:!1,xmlCharKey:(s=e.xmlCharKey)!==null&&s!==void 0?s:Te},o=Os().parseFromString((n=Ue==null?void 0:Ue.createHTML(r))!==null&&n!==void 0?n:r,"application/xml");Kl(o);let m;return i.includeRoot?m=Gr(o,i):m=Gr(o.childNodes[0],i),Promise.resolve(m)}catch(i){return Promise.reject(i)}}let Ot;function $l(){var r,e;if(Ot===void 0)try{const t=(r=Ue==null?void 0:Ue.createHTML("INVALID"))!==null&&r!==void 0?r:"INVALID";Ot=(e=Os().parseFromString(t,"text/xml").getElementsByTagName("parsererror")[0].namespaceURI)!==null&&e!==void 0?e:""}catch{Ot=""}return Ot}function Kl(r){const e=r.getElementsByTagName("parsererror");if(e.length>0&&$l()){for(let t=0;t<e.length;t++)if(e[t].namespaceURI===Ot)throw new Error(e[t].innerHTML)}}function Gl(r){return!!r.attributes}function Xl(r){return Gl(r)&&r.hasAttributes()?r:void 0}function Gr(r,e){let t={};const a=r.childNodes.length,s=r.childNodes[0],n=s&&a===1&&s.nodeType===Node.TEXT_NODE&&s.nodeValue||void 0,i=Xl(r);if(i){t[U]={};for(let o=0;o<i.attributes.length;o++){const m=i.attributes[o];t[U][m.nodeName]=m.nodeValue}n&&(t[e.xmlCharKey]=n)}else a===0?t="":n&&(t=n);if(!n)for(let o=0;o<a;o++){const m=r.childNodes[o];if(m.nodeType!==Node.TEXT_NODE){const l=Gr(m,e);t[m.nodeName]?Array.isArray(t[m.nodeName])?t[m.nodeName].push(l):t[m.nodeName]=[t[m.nodeName],l]:t[m.nodeName]=l}}return t}function Xa(r,e={}){var t,a,s;const n={rootName:(t=e.rootName)!==null&&t!==void 0?t:"root",includeRoot:(a=e.includeRoot)!==null&&a!==void 0?a:!1,xmlCharKey:(s=e.xmlCharKey)!==null&&s!==void 0?s:Te},i=Xr(r,n.rootName,n)[0];return'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+jl().serializeToString(i)}function Ql(r){const e=[];for(const t of Object.keys(r)){const a=Kr().createAttribute(t);a.value=r[t].toString(),e.push(a)}return e}function Xr(r,e,t){if(r==null||typeof r=="string"||typeof r=="number"||typeof r=="boolean"){const a=Kr().createElement(e);return a.textContent=r==null?"":r.toString(),[a]}else if(Array.isArray(r)){const a=[];for(const s of r)for(const n of Xr(s,e,t))a.push(n);return a}else if(typeof r=="object"){const a=Kr().createElement(e);for(const s of Object.keys(r))if(s===U)for(const n of Ql(r[s]))a.attributes.setNamedItem(n);else if(s===t.xmlCharKey)a.textContent=r[s].toString();else for(const n of Xr(r[s],s,t))a.appendChild(n);return[a]}else throw new Error(`Illegal value passed to buildObject: ${r}`)}function sa(r,e){return{create:(t,a)=>new Jl(t,a,r,e)}}const Wl=["application/json","text/json"],Yl=["application/xml","application/atom+xml"];class Jl extends F{constructor(e,t,a,s={}){var n;super(e,t),this.jsonContentTypes=a&&a.json||Wl,this.xmlContentTypes=a&&a.xml||Yl,this.xmlCharKey=(n=s.xmlCharKey)!==null&&n!==void 0?n:Te}async sendRequest(e){return this._nextPolicy.sendRequest(e).then(t=>ec(this.jsonContentTypes,this.xmlContentTypes,t,{xmlCharKey:this.xmlCharKey}))}}function Zl(r){let e;const t=r.request,a=t.operationSpec;if(a){const s=t.operationResponseGetter;s?e=s(a,r):e=a.responses[r.status]}return e}function Vl(r){const e=r.request.shouldDeserialize;let t;return e===void 0?t=!0:typeof e=="boolean"?t=e:t=e(r),t}function ec(r,e,t,a={}){var s,n,i;const o={rootName:(s=a.rootName)!==null&&s!==void 0?s:"",includeRoot:(n=a.includeRoot)!==null&&n!==void 0?n:!1,xmlCharKey:(i=a.xmlCharKey)!==null&&i!==void 0?i:Te};return ac(r,e,t,o).then(m=>{if(!Vl(m))return m;const l=m.request.operationSpec;if(!l||!l.responses)return m;const c=Zl(m),{error:p,shouldReturnResponse:d}=rc(m,l,c);if(p)throw p;if(d)return m;if(c){if(c.bodyMapper){let y=m.parsedBody;l.isXML&&c.bodyMapper.type.name===at.Sequence&&(y=typeof y=="object"?y[c.bodyMapper.xmlElementName]:[]);try{m.parsedBody=l.serializer.deserialize(c.bodyMapper,y,"operationRes.parsedBody",a)}catch(C){throw new oe(`Error ${C} occurred in deserializing the responseBody - ${m.bodyAsText}`,void 0,m.status,m.request,m)}}else l.httpMethod==="HEAD"&&(m.parsedBody=t.status>=200&&t.status<300);c.headersMapper&&(m.parsedHeaders=l.serializer.deserialize(c.headersMapper,m.headers.toJson(),"operationRes.parsedHeaders",a))}return m})}function tc(r){const e=Object.keys(r.responses);return e.length===0||e.length===1&&e[0]==="default"}function rc(r,e,t){var a;const s=200<=r.status&&r.status<300;if(tc(e)?s:!!t)if(t){if(!t.isError)return{error:null,shouldReturnResponse:!1}}else return{error:null,shouldReturnResponse:!1};const i=t??e.responses.default,m=((a=r.request.streamResponseStatusCodes)===null||a===void 0?void 0:a.has(r.status))||r.request.streamResponseBody?`Unexpected status code: ${r.status}`:r.bodyAsText,l=new oe(m,void 0,r.status,r.request,r);if(!i)throw l;const c=i.bodyMapper,p=i.headersMapper;try{if(r.parsedBody){const d=r.parsedBody;let y;if(c){let f=d;e.isXML&&c.type.name===at.Sequence&&(f=typeof d=="object"?d[c.xmlElementName]:[]),y=e.serializer.deserialize(c,f,"error.response.parsedBody")}const C=d.error||y||d;l.code=C.code,C.message&&(l.message=C.message),c&&(l.response.parsedBody=y)}r.headers&&p&&(l.response.parsedHeaders=e.serializer.deserialize(p,r.headers.toJson(),"operationRes.parsedHeaders"))}catch(d){l.message=`Error "${d.message}" occurred in deserializing the responseBody - "${r.bodyAsText}" for the default response.`}return{error:l,shouldReturnResponse:!1}}function ac(r,e,t,a){var s;const n=o=>{const m=`Error "${o}" occurred while parsing the response body - ${t.bodyAsText}.`,l=o.code||oe.PARSE_ERROR,c=new oe(m,l,t.status,t.request,t);return Promise.reject(c)};if(!(((s=t.request.streamResponseStatusCodes)===null||s===void 0?void 0:s.has(t.status))||t.request.streamResponseBody)&&t.bodyAsText){const o=t.bodyAsText,m=t.headers.get("Content-Type")||"",l=m?m.split(";").map(c=>c.toLowerCase()):[];if(l.length===0||l.some(c=>r.indexOf(c)!==-1))return new Promise(c=>{t.parsedBody=JSON.parse(o),c(t)}).catch(n);if(l.some(c=>e.indexOf(c)!==-1))return Fl(o,a).then(c=>(t.parsedBody=c,t)).catch(n)}return Promise.resolve(t)}const sc={enable:!0};function nc(r){return{create:(e,t)=>new ic(e,t,r||sc)}}class ic extends F{constructor(e,t,a){super(e,t),this.keepAliveOptions=a}async sendRequest(e){return e.keepAlive=this.keepAliveOptions.enable,this._nextPolicy.sendRequest(e)}}const Qa=["GET","HEAD"];function oc(r=20){return{create:(e,t)=>new mc(e,t,r)}}class mc extends F{constructor(e,t,a=20){super(e,t),this.maxRetries=a}sendRequest(e){return this._nextPolicy.sendRequest(e).then(t=>Bs(this,t,0))}}function Bs(r,e,t){const{request:a,status:s}=e,n=e.headers.get("location");if(n&&(s===300||s===301&&Qa.includes(a.method)||s===302&&Qa.includes(a.method)||s===303&&a.method==="POST"||s===307)&&(!r.maxRetries||t<r.maxRetries)){const i=G.parse(a.url);return i.setPath(n),a.url=i.toString(),s===303&&(a.method="GET",delete a.body),r._nextPolicy.sendRequest(a).then(o=>Bs(r,o,t+1))}return Promise.resolve(e)}const qs=3,Is=1e3*30,Ms=1e3*90,lc=1e3*3;function Ae(r){return typeof r=="number"}function _s(r,e,t,a,s){return e(a,s)?t.retryCount<r:!1}function Hs(r,e={retryCount:0,retryInterval:0},t){t&&(e.error&&(t.innerError=e.error),e.error=t),e.retryCount++;let a=Math.pow(2,e.retryCount-1)-1;const s=r.retryInterval*.8+Math.floor(Math.random()*(r.retryInterval*.4));return a*=s,e.retryInterval=Math.min(r.minRetryInterval+a,r.maxRetryInterval),e}const nr=!1;function cc(r,e){const{cleanupBeforeAbort:t,abortSignal:a,abortErrorMsg:s}=e??{};return new Promise((n,i)=>{function o(){i(new Gt(s??"The operation was aborted."))}function m(){a==null||a.removeEventListener("abort",l)}function l(){t==null||t(),m(),o()}if(a!=null&&a.aborted)return o();try{r(c=>{m(),n(c)},c=>{m(),i(c)})}catch(c){i(c)}a==null||a.addEventListener("abort",l)})}const dc="The delay was aborted.";function Xe(r,e){let t;const{abortSignal:a,abortErrorMsg:s}=e??{};return cc(n=>{t=setTimeout(n,r)},{cleanupBeforeAbort:()=>clearTimeout(t),abortSignal:a,abortErrorMsg:s??dc})}function pc(...r){if(r.length>0){const e=String(r[0]);e.includes(":error")?console.error(...r):e.includes(":warning")?console.warn(...r):e.includes(":info")?console.info(...r):e.includes(":verbose")?console.debug(...r):console.debug(...r)}}const Wa=typeof process<"u"&&process.env&&{}.DEBUG||void 0;let Ds,Qr=[],Wr=[];const ir=[];Wa&&na(Wa);const Ls=Object.assign(r=>As(r),{enable:na,enabled:ia,disable:uc,log:pc});function na(r){Ds=r,Qr=[],Wr=[];const e=/\*/g,t=r.split(",").map(a=>a.trim().replace(e,".*?"));for(const a of t)a.startsWith("-")?Wr.push(new RegExp(`^${a.substr(1)}$`)):Qr.push(new RegExp(`^${a}$`));for(const a of ir)a.enabled=ia(a.namespace)}function ia(r){if(r.endsWith("*"))return!0;for(const e of Wr)if(e.test(r))return!1;for(const e of Qr)if(e.test(r))return!0;return!1}function uc(){const r=Ds||"";return na(""),r}function As(r){const e=Object.assign(t,{enabled:ia(r),destroy:yc,log:Ls.log,namespace:r,extend:fc});function t(...a){e.enabled&&(a.length>0&&(a[0]=`${r} ${a[0]}`),e.log(...a))}return ir.push(e),e}function yc(){const r=ir.indexOf(this);return r>=0?(ir.splice(r,1),!0):!1}function fc(r){const e=As(`${this.namespace}:${r}`);return e.log=this.log,e}const Dt=Ls,ks=new Set,Jt=typeof process<"u"&&process.env&&{}.AZURE_LOG_LEVEL||void 0;let Yr;const Jr=Dt("azure");Jr.log=(...r)=>{Dt.log(...r)};const oa=["verbose","info","warning","error"];Jt&&($s(Jt)?gc(Jt):console.error(`AZURE_LOG_LEVEL set to unknown log level '${Jt}'; logging is not enabled. Acceptable values: ${oa.join(", ")}.`));function gc(r){if(r&&!$s(r))throw new Error(`Unknown log level '${r}'. Acceptable values: ${oa.join(",")}`);Yr=r;const e=[];for(const t of ks)Fs(t)&&e.push(t.namespace);Dt.enable(e.join(","))}const Ya={verbose:400,info:300,warning:200,error:100};function Us(r){const e=Jr.extend(r);return js(Jr,e),{error:Zt(e,"error"),warning:Zt(e,"warning"),info:Zt(e,"info"),verbose:Zt(e,"verbose")}}function js(r,e){e.log=(...t)=>{r.log(...t)}}function Zt(r,e){const t=Object.assign(r.extend(e),{level:e});if(js(r,t),Fs(t)){const a=Dt.disable();Dt.enable(a+","+t.namespace)}return ks.add(t),t}function Fs(r){return!!(Yr&&Ya[r.level]<=Ya[Yr])}function $s(r){return oa.includes(r)}const fe=Us("core-http");function hc(r,e,t){return{create:(a,s)=>new xc(a,s,r,e,t)}}var Ja;(function(r){r[r.Exponential=0]="Exponential"})(Ja||(Ja={}));class xc extends F{constructor(e,t,a,s,n){super(e,t),this.retryCount=Ae(a)?a:qs,this.retryInterval=Ae(s)?s:Is,this.maxRetryInterval=Ae(n)?n:Ms}sendRequest(e){return this._nextPolicy.sendRequest(e.clone()).then(t=>or(this,e,t)).catch(t=>or(this,e,t.response,void 0,t))}}async function or(r,e,t,a,s){function n(o){const m=o==null?void 0:o.status;return!(m===503&&(t!=null&&t.headers.get(Kt.HeaderConstants.RETRY_AFTER))||m===void 0||m<500&&m!==408||m===501||m===505)}a=Hs({retryInterval:r.retryInterval,minRetryInterval:0,maxRetryInterval:r.maxRetryInterval},a,s);const i=e.abortSignal&&e.abortSignal.aborted;if(!i&&_s(r.retryCount,n,a,t)){fe.info(`Retrying request in ${a.retryInterval}`);try{await Xe(a.retryInterval);const o=await r._nextPolicy.sendRequest(e.clone());return or(r,e,o,a)}catch(o){return or(r,e,t,a,o)}}else{if(i||s||!t)throw a.error||new oe("Failed to send the request.",oe.REQUEST_SEND_ERROR,t&&t.status,t&&t.request,t);return t}}function Ks(r={}){return{create:(e,t)=>new Nc(e,t,r)}}class Nc extends F{constructor(e,t,{logger:a=fe.info,allowedHeaderNames:s=[],allowedQueryParameters:n=[]}={}){super(e,t),this.logger=a,this.sanitizer=new ws({allowedHeaderNames:s,allowedQueryParameters:n})}get allowedHeaderNames(){return this.sanitizer.allowedHeaderNames}set allowedHeaderNames(e){this.sanitizer.allowedHeaderNames=e}get allowedQueryParameters(){return this.sanitizer.allowedQueryParameters}set allowedQueryParameters(e){this.sanitizer.allowedQueryParameters=e}sendRequest(e){return this.logger.enabled?(this.logRequest(e),this._nextPolicy.sendRequest(e).then(t=>this.logResponse(t))):this._nextPolicy.sendRequest(e)}logRequest(e){this.logger(`Request: ${this.sanitizer.sanitize(e)}`)}logResponse(e){return this.logger(`Response status code: ${e.status}`),this.logger(`Headers: ${this.sanitizer.sanitize(e.headers)}`),e}}function Ne(r){return Zr(r.parameterPath,r.mapper)}function Zr(r,e){let t;return typeof r=="string"?t=r:Array.isArray(r)?t=r.join("."):t=e.serializedName,t}function bc(r){const e=new Set;for(const t in r.responses){const a=r.responses[t];a.bodyMapper&&a.bodyMapper.type.name===at.Stream&&e.add(Number(t))}return e}function me(r){const e=r;return e&&typeof e.getToken=="function"&&(e.signRequest===void 0||e.getToken.length>0)}function Gs(){return"x-ms-useragent"}function Cc(){const r=self.navigator;return[{key:"OS",value:(r.oscpu||r.platform).replace(" ","")}]}function Pc(){return[{key:"core-http",value:Kt.coreHttpVersion}]}function vc(r,e=" ",t="/"){return r.map(a=>{const s=a.value?`${t}${a.value}`:"";return`${a.key}${s}`}).join(e)}const Rc=Gs;function ma(){const r=Pc(),e=Cc();return vc(r.concat(e))}function Sc(r){const e=!r||r.key===void 0||r.key===null?Gs():r.key,t=!r||r.value===void 0||r.value===null?ma():r.value;return{create:(a,s)=>new zc(a,s,e,t)}}class zc extends F{constructor(e,t,a,s){super(e,t),this._nextPolicy=e,this._options=t,this.headerKey=a,this.headerValue=s}sendRequest(e){return this.addUserAgentHeader(e),this._nextPolicy.sendRequest(e)}addUserAgentHeader(e){e.headers||(e.headers=new Ge),!e.headers.get(this.headerKey)&&this.headerValue&&e.headers.set(this.headerKey,this.headerValue)}}var ye;(function(r){r.Csv=",",r.Ssv=" ",r.Tsv="	",r.Pipes="|",r.Multi="Multi"})(ye||(ye={}));const Ec={forcedRefreshWindowInMs:1e3,retryIntervalInMs:3e3,refreshWindowInMs:1e3*60*2};async function wc(r,e,t){async function a(){if(Date.now()<t)try{return await r()}catch{return null}else{const n=await r();if(n===null)throw new Error("Failed to refresh access token.");return n}}let s=await a();for(;s===null;)await Xe(e),s=await a();return s}function Tc(r,e,t){let a=null,s=null;const n=Object.assign(Object.assign({},Ec),t),i={get isRefreshing(){return a!==null},get shouldRefresh(){var m;return!i.isRefreshing&&((m=s==null?void 0:s.expiresOnTimestamp)!==null&&m!==void 0?m:0)-n.refreshWindowInMs<Date.now()},get mustRefresh(){return s===null||s.expiresOnTimestamp-n.forcedRefreshWindowInMs<Date.now()}};function o(m){var l;return i.isRefreshing||(a=wc(()=>r.getToken(e,m),n.retryIntervalInMs,(l=s==null?void 0:s.expiresOnTimestamp)!==null&&l!==void 0?l:Date.now()).then(p=>(a=null,s=p,s)).catch(p=>{throw a=null,s=null,p})),a}return async m=>i.mustRefresh?o(m):(i.shouldRefresh&&o(m),s)}function Xs(r,e){const t=Tc(r,e);class a extends F{constructor(n,i){super(n,i)}async sendRequest(n){if(!n.url.toLowerCase().startsWith("https://"))throw new Error("Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.");const{token:i}=await t({abortSignal:n.abortSignal,tracingOptions:{tracingContext:n.tracingContext}});return n.headers.set(Kt.HeaderConstants.AUTHORIZATION,`Bearer ${i}`),this._nextPolicy.sendRequest(n)}}return{create:(s,n)=>new a(s,n)}}function Qs(r="x-ms-client-request-id"){return{create:(e,t)=>new Oc(e,t,r)}}class Oc extends F{constructor(e,t,a){super(e,t),this._requestIdHeaderName=a}sendRequest(e){return e.headers.contains(this._requestIdHeaderName)||e.headers.set(this._requestIdHeaderName,e.requestId),this._nextPolicy.sendRequest(e)}}let Ir;function Bc(){return Ir||(Ir=new Ts),Ir}function qc(r=30){return{create:(e,t)=>new Ic(e,t,r)}}class Ic extends F{constructor(e,t,a=30){super(e,t),this._retryTimeout=a}sendRequest(e){return this._nextPolicy.sendRequest(e.clone()).then(t=>Mc(this,e,t))}}function Mc(r,e,t){if(t.status===409){const a=_c(t.bodyAsText);if(a){const s=Hc(e.url);return Dc(r,s,a,e).catch(()=>!1).then(n=>n?(e.headers.set("x-ms-client-request-id",$e()),r._nextPolicy.sendRequest(e.clone())):t)}}return Promise.resolve(t)}function Ws(r,e=!1){const t=r.clone();return e&&(t.url=r.url),t.headers.set("x-ms-client-request-id",$e()),t.headers.set("Content-Type","application/json; charset=utf-8"),t}function _c(r){let e,t;if(r){try{t=JSON.parse(r)}catch{}if(t&&t.error&&t.error.message&&t.error.code&&t.error.code==="MissingSubscriptionRegistration"){const a=t.error.message.match(/.*'(.*)'/i);a&&(e=a.pop())}}return e}function Hc(r){let e;const t=r.match(/.*\/subscriptions\/[a-f0-9-]+\//gi);if(t&&t[0])e=t[0];else throw new Error(`Unable to extract subscriptionId from the given url - ${r}.`);return e}async function Dc(r,e,t,a){const s=`${e}providers/${t}/register?api-version=2016-02-01`,n=`${e}providers/${t}?api-version=2016-02-01`,i=Ws(a);if(i.method="POST",i.url=s,(await r._nextPolicy.sendRequest(i)).status!==200)throw new Error(`Autoregistration of ${t} failed. Please try registering manually.`);return Ys(r,n,a)}async function Ys(r,e,t){const a=Ws(t);a.url=e,a.method="GET";const s=await r._nextPolicy.sendRequest(a),n=s.parsedBody;return s.parsedBody&&n.registrationState&&n.registrationState==="Registered"?!0:(await Xe(r._retryTimeout*1e3),Ys(r,e,t))}function Lc(r){return{create:(e,t)=>new Ac(e,t,r)}}class Ac extends F{constructor(e,t,a){super(e,t),this.authenticationProvider=a}signRequest(e){return this.authenticationProvider.signRequest(e)}sendRequest(e){return this.signRequest(e).then(t=>this._nextPolicy.sendRequest(t))}}function kc(r,e,t,a){return{create:(s,n)=>new Uc(s,n,r,e,t,a)}}class Uc extends F{constructor(e,t,a,s,n,i){super(e,t),this.retryCount=Ae(a)?a:qs,this.retryInterval=Ae(s)?s:Is,this.minRetryInterval=Ae(n)?n:lc,this.maxRetryInterval=Ae(i)?i:Ms}sendRequest(e){return this._nextPolicy.sendRequest(e.clone()).catch(t=>Js(this,e,t.response,t))}}async function Js(r,e,t,a,s){s=Hs(r,s,a);function n(i,o){return!!(o&&o.code&&(o.code==="ETIMEDOUT"||o.code==="ESOCKETTIMEDOUT"||o.code==="ECONNREFUSED"||o.code==="ECONNRESET"||o.code==="ENOENT"))}if(_s(r.retryCount,n,s,t,a))try{return await Xe(s.retryInterval),r._nextPolicy.sendRequest(e.clone())}catch(i){return Js(r,e,t,i,s)}else return a?Promise.reject(s.error):t}const jc=3,Za=Kt.HttpConstants.StatusCodes;function Fc(){return{create:(r,e)=>new mr(r,e)}}const Va="The operation was aborted.";class mr extends F{constructor(e,t,a){super(e,t),this.numberOfRetries=0,this._handleResponse=a||this._defaultResponseHandler}async sendRequest(e){const t=await this._nextPolicy.sendRequest(e.clone());return t.status!==Za.TooManyRequests&&t.status!==Za.ServiceUnavailable?t:this._handleResponse(e,t)}async _defaultResponseHandler(e,t){var a;const s=t.headers.get(Kt.HeaderConstants.RETRY_AFTER);if(s){const n=mr.parseRetryAfterHeader(s);if(n){if(this.numberOfRetries+=1,await Xe(n,{abortSignal:e.abortSignal,abortErrorMsg:Va}),!((a=e.abortSignal)===null||a===void 0)&&a.aborted)throw new Gt(Va);return this.numberOfRetries<jc?this.sendRequest(e):this._nextPolicy.sendRequest(e)}}return t}static parseRetryAfterHeader(e){const t=Number(e);return Number.isNaN(t)?mr.parseDateRetryAfterHeader(e):t*1e3}static parseDateRetryAfterHeader(e){try{const t=Date.now(),s=Date.parse(e)-t;return Number.isNaN(s)?void 0:s}catch{return}}}var $c=typeof globalThis=="object"?globalThis:typeof self=="object"?self:typeof window=="object"?window:typeof global=="object"?global:{},ke="1.4.1",es=/^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;function Kc(r){var e=new Set([r]),t=new Set,a=r.match(es);if(!a)return function(){return!1};var s={major:+a[1],minor:+a[2],patch:+a[3],prerelease:a[4]};if(s.prerelease!=null)return function(m){return m===r};function n(o){return t.add(o),!1}function i(o){return e.add(o),!0}return function(m){if(e.has(m))return!0;if(t.has(m))return!1;var l=m.match(es);if(!l)return n(m);var c={major:+l[1],minor:+l[2],patch:+l[3],prerelease:l[4]};return c.prerelease!=null||s.major!==c.major?n(m):s.major===0?s.minor===c.minor&&s.patch<=c.patch?i(m):n(m):s.minor<=c.minor?i(m):n(m)}}var Gc=Kc(ke),Xc=ke.split(".")[0],Lt=Symbol.for("opentelemetry.js.api."+Xc),At=$c;function la(r,e,t,a){var s;a===void 0&&(a=!1);var n=At[Lt]=(s=At[Lt])!==null&&s!==void 0?s:{version:ke};if(!a&&n[r]){var i=new Error("@opentelemetry/api: Attempted duplicate registration of API: "+r);return t.error(i.stack||i.message),!1}if(n.version!==ke){var i=new Error("@opentelemetry/api: Registration of version v"+n.version+" for "+r+" does not match previously registered API v"+ke);return t.error(i.stack||i.message),!1}return n[r]=e,t.debug("@opentelemetry/api: Registered a global for "+r+" v"+ke+"."),!0}function kt(r){var e,t,a=(e=At[Lt])===null||e===void 0?void 0:e.version;if(!(!a||!Gc(a)))return(t=At[Lt])===null||t===void 0?void 0:t[r]}function ca(r,e){e.debug("@opentelemetry/api: Unregistering a global for "+r+" v"+ke+".");var t=At[Lt];t&&delete t[r]}var Qc=globalThis&&globalThis.__read||function(r,e){var t=typeof Symbol=="function"&&r[Symbol.iterator];if(!t)return r;var a=t.call(r),s,n=[],i;try{for(;(e===void 0||e-- >0)&&!(s=a.next()).done;)n.push(s.value)}catch(o){i={error:o}}finally{try{s&&!s.done&&(t=a.return)&&t.call(a)}finally{if(i)throw i.error}}return n},Wc=globalThis&&globalThis.__spreadArray||function(r,e,t){if(t||arguments.length===2)for(var a=0,s=e.length,n;a<s;a++)(n||!(a in e))&&(n||(n=Array.prototype.slice.call(e,0,a)),n[a]=e[a]);return r.concat(n||Array.prototype.slice.call(e))},Yc=function(){function r(e){this._namespace=e.namespace||"DiagComponentLogger"}return r.prototype.debug=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Tt("debug",this._namespace,e)},r.prototype.error=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Tt("error",this._namespace,e)},r.prototype.info=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Tt("info",this._namespace,e)},r.prototype.warn=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Tt("warn",this._namespace,e)},r.prototype.verbose=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Tt("verbose",this._namespace,e)},r}();function Tt(r,e,t){var a=kt("diag");if(a)return t.unshift(e),a[r].apply(a,Wc([],Qc(t),!1))}var ae;(function(r){r[r.NONE=0]="NONE",r[r.ERROR=30]="ERROR",r[r.WARN=50]="WARN",r[r.INFO=60]="INFO",r[r.DEBUG=70]="DEBUG",r[r.VERBOSE=80]="VERBOSE",r[r.ALL=9999]="ALL"})(ae||(ae={}));function Jc(r,e){r<ae.NONE?r=ae.NONE:r>ae.ALL&&(r=ae.ALL),e=e||{};function t(a,s){var n=e[a];return typeof n=="function"&&r>=s?n.bind(e):function(){}}return{error:t("error",ae.ERROR),warn:t("warn",ae.WARN),info:t("info",ae.INFO),debug:t("debug",ae.DEBUG),verbose:t("verbose",ae.VERBOSE)}}var Zc=globalThis&&globalThis.__read||function(r,e){var t=typeof Symbol=="function"&&r[Symbol.iterator];if(!t)return r;var a=t.call(r),s,n=[],i;try{for(;(e===void 0||e-- >0)&&!(s=a.next()).done;)n.push(s.value)}catch(o){i={error:o}}finally{try{s&&!s.done&&(t=a.return)&&t.call(a)}finally{if(i)throw i.error}}return n},Vc=globalThis&&globalThis.__spreadArray||function(r,e,t){if(t||arguments.length===2)for(var a=0,s=e.length,n;a<s;a++)(n||!(a in e))&&(n||(n=Array.prototype.slice.call(e,0,a)),n[a]=e[a]);return r.concat(n||Array.prototype.slice.call(e))},ed="diag",lr=function(){function r(){function e(s){return function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var o=kt("diag");if(o)return o[s].apply(o,Vc([],Zc(n),!1))}}var t=this,a=function(s,n){var i,o,m;if(n===void 0&&(n={logLevel:ae.INFO}),s===t){var l=new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");return t.error((i=l.stack)!==null&&i!==void 0?i:l.message),!1}typeof n=="number"&&(n={logLevel:n});var c=kt("diag"),p=Jc((o=n.logLevel)!==null&&o!==void 0?o:ae.INFO,s);if(c&&!n.suppressOverrideMessage){var d=(m=new Error().stack)!==null&&m!==void 0?m:"<failed to generate stacktrace>";c.warn("Current logger will be overwritten from "+d),p.warn("Current logger will overwrite one already registered from "+d)}return la("diag",p,t,!0)};t.setLogger=a,t.disable=function(){ca(ed,t)},t.createComponentLogger=function(s){return new Yc(s)},t.verbose=e("verbose"),t.debug=e("debug"),t.info=e("info"),t.warn=e("warn"),t.error=e("error")}return r.instance=function(){return this._instance||(this._instance=new r),this._instance},r}();function td(r){return Symbol.for(r)}var rd=function(){function r(e){var t=this;t._currentContext=e?new Map(e):new Map,t.getValue=function(a){return t._currentContext.get(a)},t.setValue=function(a,s){var n=new r(t._currentContext);return n._currentContext.set(a,s),n},t.deleteValue=function(a){var s=new r(t._currentContext);return s._currentContext.delete(a),s}}return r}(),ad=new rd,sd=globalThis&&globalThis.__read||function(r,e){var t=typeof Symbol=="function"&&r[Symbol.iterator];if(!t)return r;var a=t.call(r),s,n=[],i;try{for(;(e===void 0||e-- >0)&&!(s=a.next()).done;)n.push(s.value)}catch(o){i={error:o}}finally{try{s&&!s.done&&(t=a.return)&&t.call(a)}finally{if(i)throw i.error}}return n},nd=globalThis&&globalThis.__spreadArray||function(r,e,t){if(t||arguments.length===2)for(var a=0,s=e.length,n;a<s;a++)(n||!(a in e))&&(n||(n=Array.prototype.slice.call(e,0,a)),n[a]=e[a]);return r.concat(n||Array.prototype.slice.call(e))},id=function(){function r(){}return r.prototype.active=function(){return ad},r.prototype.with=function(e,t,a){for(var s=[],n=3;n<arguments.length;n++)s[n-3]=arguments[n];return t.call.apply(t,nd([a],sd(s),!1))},r.prototype.bind=function(e,t){return t},r.prototype.enable=function(){return this},r.prototype.disable=function(){return this},r}(),od=globalThis&&globalThis.__read||function(r,e){var t=typeof Symbol=="function"&&r[Symbol.iterator];if(!t)return r;var a=t.call(r),s,n=[],i;try{for(;(e===void 0||e-- >0)&&!(s=a.next()).done;)n.push(s.value)}catch(o){i={error:o}}finally{try{s&&!s.done&&(t=a.return)&&t.call(a)}finally{if(i)throw i.error}}return n},md=globalThis&&globalThis.__spreadArray||function(r,e,t){if(t||arguments.length===2)for(var a=0,s=e.length,n;a<s;a++)(n||!(a in e))&&(n||(n=Array.prototype.slice.call(e,0,a)),n[a]=e[a]);return r.concat(n||Array.prototype.slice.call(e))},Mr="context",ld=new id,da=function(){function r(){}return r.getInstance=function(){return this._instance||(this._instance=new r),this._instance},r.prototype.setGlobalContextManager=function(e){return la(Mr,e,lr.instance())},r.prototype.active=function(){return this._getContextManager().active()},r.prototype.with=function(e,t,a){for(var s,n=[],i=3;i<arguments.length;i++)n[i-3]=arguments[i];return(s=this._getContextManager()).with.apply(s,md([e,t,a],od(n),!1))},r.prototype.bind=function(e,t){return this._getContextManager().bind(e,t)},r.prototype._getContextManager=function(){return kt(Mr)||ld},r.prototype.disable=function(){this._getContextManager().disable(),ca(Mr,lr.instance())},r}(),Vr;(function(r){r[r.NONE=0]="NONE",r[r.SAMPLED=1]="SAMPLED"})(Vr||(Vr={}));var Zs="0000000000000000",Vs="00000000000000000000000000000000",en={traceId:Vs,spanId:Zs,traceFlags:Vr.NONE},Bt=function(){function r(e){e===void 0&&(e=en),this._spanContext=e}return r.prototype.spanContext=function(){return this._spanContext},r.prototype.setAttribute=function(e,t){return this},r.prototype.setAttributes=function(e){return this},r.prototype.addEvent=function(e,t){return this},r.prototype.setStatus=function(e){return this},r.prototype.updateName=function(e){return this},r.prototype.end=function(e){},r.prototype.isRecording=function(){return!1},r.prototype.recordException=function(e,t){},r}(),pa=td("OpenTelemetry Context Key SPAN");function ua(r){return r.getValue(pa)||void 0}function cd(){return ua(da.getInstance().active())}function ya(r,e){return r.setValue(pa,e)}function dd(r){return r.deleteValue(pa)}function pd(r,e){return ya(r,new Bt(e))}function tn(r){var e;return(e=ua(r))===null||e===void 0?void 0:e.spanContext()}var ud=/^([0-9a-f]{32})$/i,yd=/^[0-9a-f]{16}$/i;function fd(r){return ud.test(r)&&r!==Vs}function gd(r){return yd.test(r)&&r!==Zs}function rn(r){return fd(r.traceId)&&gd(r.spanId)}function hd(r){return new Bt(r)}var _r=da.getInstance(),an=function(){function r(){}return r.prototype.startSpan=function(e,t,a){a===void 0&&(a=_r.active());var s=!!(t!=null&&t.root);if(s)return new Bt;var n=a&&tn(a);return xd(n)&&rn(n)?new Bt(n):new Bt},r.prototype.startActiveSpan=function(e,t,a,s){var n,i,o;if(!(arguments.length<2)){arguments.length===2?o=t:arguments.length===3?(n=t,o=a):(n=t,i=a,o=s);var m=i??_r.active(),l=this.startSpan(e,n,m),c=ya(m,l);return _r.with(c,o,void 0,l)}},r}();function xd(r){return typeof r=="object"&&typeof r.spanId=="string"&&typeof r.traceId=="string"&&typeof r.traceFlags=="number"}var Nd=new an,bd=function(){function r(e,t,a,s){this._provider=e,this.name=t,this.version=a,this.options=s}return r.prototype.startSpan=function(e,t,a){return this._getTracer().startSpan(e,t,a)},r.prototype.startActiveSpan=function(e,t,a,s){var n=this._getTracer();return Reflect.apply(n.startActiveSpan,n,arguments)},r.prototype._getTracer=function(){if(this._delegate)return this._delegate;var e=this._provider.getDelegateTracer(this.name,this.version,this.options);return e?(this._delegate=e,this._delegate):Nd},r}(),Cd=function(){function r(){}return r.prototype.getTracer=function(e,t,a){return new an},r}(),Pd=new Cd,ts=function(){function r(){}return r.prototype.getTracer=function(e,t,a){var s;return(s=this.getDelegateTracer(e,t,a))!==null&&s!==void 0?s:new bd(this,e,t,a)},r.prototype.getDelegate=function(){var e;return(e=this._delegate)!==null&&e!==void 0?e:Pd},r.prototype.setDelegate=function(e){this._delegate=e},r.prototype.getDelegateTracer=function(e,t,a){var s;return(s=this._delegate)===null||s===void 0?void 0:s.getTracer(e,t,a)},r}(),vd=da.getInstance(),Hr="trace",Rd=function(){function r(){this._proxyTracerProvider=new ts,this.wrapSpanContext=hd,this.isSpanContextValid=rn,this.deleteSpan=dd,this.getSpan=ua,this.getActiveSpan=cd,this.getSpanContext=tn,this.setSpan=ya,this.setSpanContext=pd}return r.getInstance=function(){return this._instance||(this._instance=new r),this._instance},r.prototype.setGlobalTracerProvider=function(e){var t=la(Hr,this._proxyTracerProvider,lr.instance());return t&&this._proxyTracerProvider.setDelegate(e),t},r.prototype.getTracerProvider=function(){return kt(Hr)||this._proxyTracerProvider},r.prototype.getTracer=function(e,t){return this.getTracerProvider().getTracer(e,t)},r.prototype.disable=function(){ca(Hr,lr.instance()),this._proxyTracerProvider=new ts},r}(),gr=Rd.getInstance(),cr;(function(r){r[r.INTERNAL=0]="INTERNAL",r[r.SERVER=1]="SERVER",r[r.CLIENT=2]="CLIENT",r[r.PRODUCER=3]="PRODUCER",r[r.CONSUMER=4]="CONSUMER"})(cr||(cr={}));function Sd(r,e){return gr.setSpan(r,e)}function zd(r){return gr.isSpanContextValid(r)}function Ed(r,e){return gr.getTracer(r||"azure/core-tracing",e)}const wd=vd;var u;(function(r){r[r.UNSET=0]="UNSET",r[r.OK=1]="OK",r[r.ERROR=2]="ERROR"})(u||(u={}));function Td(){var r;if(typeof process>"u")return!1;const e=(r={}.AZURE_TRACING_DISABLED)===null||r===void 0?void 0:r.toLowerCase();return e==="false"||e==="0"?!1:!!e}function sn(r){return function(e,t){const a=Ed(),s=(t==null?void 0:t.tracingOptions)||{},n=Object.assign({kind:cr.INTERNAL},s.spanOptions),i=r.packagePrefix?`${r.packagePrefix}.${e}`:e;let o;Td()?o=gr.wrapSpanContext(en):o=a.startSpan(i,n,s.tracingContext),r.namespace&&o.setAttribute("az.namespace",r.namespace);let m=s.spanOptions||{};o.isRecording()&&r.namespace&&(m=Object.assign(Object.assign({},s.spanOptions),{attributes:Object.assign(Object.assign({},n.attributes),{"az.namespace":r.namespace})}));const l=Object.assign(Object.assign({},s),{spanOptions:m,tracingContext:Sd(s.tracingContext||wd.active(),o)}),c=Object.assign(Object.assign({},t),{tracingOptions:l});return{span:o,updatedOptions:c}}}const Od="00";function Bd(r){const e=[];if(r.traceId||e.push("traceId"),r.spanId||e.push("spanId"),e.length)return;const a=(r.traceFlags||0).toString(16),s=a.length===1?`0${a}`:a;return`${Od}-${r.traceId}-${r.spanId}-${s}`}const qd=sn({packagePrefix:"",namespace:""});function Id(r={}){return{create(e,t){return new Md(e,t,r)}}}class Md extends F{constructor(e,t,a){super(e,t),this.userAgent=a.userAgent}async sendRequest(e){if(!e.tracingContext)return this._nextPolicy.sendRequest(e);const t=this.tryCreateSpan(e);if(!t)return this._nextPolicy.sendRequest(e);try{const a=await this._nextPolicy.sendRequest(e);return this.tryProcessResponse(t,a),a}catch(a){throw this.tryProcessError(t,a),a}}tryCreateSpan(e){var t;try{const{span:a}=qd(`HTTP ${e.method}`,{tracingOptions:{spanOptions:Object.assign(Object.assign({},e.spanOptions),{kind:cr.CLIENT}),tracingContext:e.tracingContext}});if(!a.isRecording()){a.end();return}const s=(t=e.tracingContext)===null||t===void 0?void 0:t.getValue(Symbol.for("az.namespace"));typeof s=="string"&&a.setAttribute("az.namespace",s),a.setAttributes({"http.method":e.method,"http.url":e.url,requestId:e.requestId}),this.userAgent&&a.setAttribute("http.user_agent",this.userAgent);const n=a.spanContext(),i=Bd(n);if(i&&zd(n)){e.headers.set("traceparent",i);const o=n.traceState&&n.traceState.serialize();o&&e.headers.set("tracestate",o)}return a}catch(a){fe.warning(`Skipping creating a tracing span due to an error: ${a.message}`);return}}tryProcessError(e,t){try{e.setStatus({code:u.ERROR,message:t.message}),t.statusCode&&e.setAttribute("http.status_code",t.statusCode),e.end()}catch(a){fe.warning(`Skipping tracing span processing due to an error: ${a.message}`)}}tryProcessResponse(e,t){try{e.setAttribute("http.status_code",t.status);const a=t.headers.get("x-ms-request-id");a&&e.setAttribute("serviceRequestId",a),e.setStatus({code:u.OK}),e.end()}catch(a){fe.warning(`Skipping tracing span processing due to an error: ${a.message}`)}}}class _d{constructor(e,t){t||(t={}),this._withCredentials=t.withCredentials||!1,this._httpClient=t.httpClient||Bc(),this._requestPolicyOptions=new Ul(t.httpPipelineLogger);let a;if(Array.isArray(t.requestPolicyFactories))fe.info("ServiceClient: using custom request policies"),a=t.requestPolicyFactories;else{let s;if(me(e))fe.info("ServiceClient: creating bearer token authentication policy from provided credentials"),s=(()=>{let i;const o=this,m=t;return{create(l,c){const p=Ad(m,o.baseUri);if(!p)throw new Error("When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy");return i==null&&(i=Xs(e,p)),i.create(l,c)}}})();else if(e&&typeof e.signRequest=="function")fe.info("ServiceClient: creating signing policy from provided credentials"),s=Lc(e);else if(e!=null)throw new Error("The credentials argument must implement the TokenCredential interface");if(fe.info("ServiceClient: using default request policies"),a=Ld(s,t),t.requestPolicyFactories){const n=t.requestPolicyFactories(a);n&&(a=n)}}this._requestPolicyFactories=a}sendRequest(e){if(e==null||typeof e!="object")throw new Error("options cannot be null or undefined and it must be of type object.");let t;try{zl(e)?(e.validateRequestProperties(),t=e):(t=new Ht,t=t.prepare(e))}catch(s){return Promise.reject(s)}let a=this._httpClient;if(this._requestPolicyFactories&&this._requestPolicyFactories.length>0)for(let s=this._requestPolicyFactories.length-1;s>=0;--s)a=this._requestPolicyFactories[s].create(a,this._requestPolicyOptions);return a.sendRequest(t)}async sendOperationRequest(e,t,a){var s;typeof e.options=="function"&&(a=e.options,e.options=void 0);const n=(s=e.options)===null||s===void 0?void 0:s.serializerOptions,i=new Ht;let o;try{const l=t.baseUrl||this.baseUri;if(!l)throw new Error("If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.");i.method=t.httpMethod,i.operationSpec=t;const c=G.parse(l);if(t.path&&c.appendPath(t.path),t.urlParameters&&t.urlParameters.length>0)for(const f of t.urlParameters){let S=qt(this,e,f,t.serializer);S=t.serializer.serialize(f.mapper,S,Ne(f),n),f.skipEncoding||(S=encodeURIComponent(S)),c.replaceAll(`{${f.mapper.serializedName||Ne(f)}}`,S)}if(t.queryParameters&&t.queryParameters.length>0)for(const f of t.queryParameters){let S=qt(this,e,f,t.serializer);if(S!=null){if(S=t.serializer.serialize(f.mapper,S,Ne(f),n),f.collectionFormat!==void 0&&f.collectionFormat!==null)if(f.collectionFormat===ye.Multi){if(S.length===0)continue;for(const O in S){const A=S[O];S[O]=A==null?"":A.toString()}}else(f.collectionFormat===ye.Ssv||f.collectionFormat===ye.Tsv)&&(S=S.join(f.collectionFormat));if(!f.skipEncoding)if(Array.isArray(S))for(const O in S)S[O]!==void 0&&S[O]!==null&&(S[O]=encodeURIComponent(S[O]));else S=encodeURIComponent(S);f.collectionFormat!==void 0&&f.collectionFormat!==null&&f.collectionFormat!==ye.Multi&&f.collectionFormat!==ye.Ssv&&f.collectionFormat!==ye.Tsv&&(S=S.join(f.collectionFormat)),c.setQueryParameter(f.mapper.serializedName||Ne(f),S)}}i.url=c.toString();const p=t.contentType||this.requestContentType;if(p&&t.requestBody&&i.headers.set("Content-Type",p),t.headerParameters)for(const f of t.headerParameters){let S=qt(this,e,f,t.serializer);if(S!=null){S=t.serializer.serialize(f.mapper,S,Ne(f),n);const O=f.mapper.headerCollectionPrefix;if(O)for(const A of Object.keys(S))i.headers.set(O+A,S[A]);else i.headers.set(f.mapper.serializedName||Ne(f),S)}}const d=e.options;if(d){if(d.customHeaders)for(const f in d.customHeaders)i.headers.set(f,d.customHeaders[f]);d.abortSignal&&(i.abortSignal=d.abortSignal),d.timeout&&(i.timeout=d.timeout),d.onUploadProgress&&(i.onUploadProgress=d.onUploadProgress),d.onDownloadProgress&&(i.onDownloadProgress=d.onDownloadProgress),d.spanOptions&&(i.spanOptions=d.spanOptions),d.tracingContext&&(i.tracingContext=d.tracingContext),d.shouldDeserialize!==void 0&&d.shouldDeserialize!==null&&(i.shouldDeserialize=d.shouldDeserialize)}i.withCredentials=this._withCredentials,Hd(this,i,e,t),i.streamResponseStatusCodes===void 0&&(i.streamResponseStatusCodes=bc(t));let y,C;try{y=await this.sendRequest(i)}catch(f){C=f}C?(C.response&&(C.details=ss(C.response,t.responses[C.statusCode]||t.responses.default)),o=Promise.reject(C)):o=Promise.resolve(ss(y,t.responses[y.status]))}catch(l){o=Promise.reject(l)}const m=a;return m&&o.then(l=>m(null,l._response.parsedBody,l._response.request,l._response)).catch(l=>m(l)),o}}function Hd(r,e,t,a){var s,n,i,o,m,l;const c=(n=(s=t.options)===null||s===void 0?void 0:s.serializerOptions)!==null&&n!==void 0?n:{},p={rootName:(i=c.rootName)!==null&&i!==void 0?i:"",includeRoot:(o=c.includeRoot)!==null&&o!==void 0?o:!1,xmlCharKey:(m=c.xmlCharKey)!==null&&m!==void 0?m:Te},d=c.xmlCharKey;if(a.requestBody&&a.requestBody.mapper){e.body=qt(r,t,a.requestBody,a.serializer);const y=a.requestBody.mapper,{required:C,xmlName:f,xmlElementName:S,serializedName:O,xmlNamespace:A,xmlNamespacePrefix:de}=y,k=y.type.name;try{if(e.body!==void 0&&e.body!==null||C){const $=Ne(a.requestBody);e.body=a.serializer.serialize(y,e.body,$,p);const Le=k===at.Stream;if(a.isXML){const zt=de?`xmlns:${de}`:"xmlns",ze=Dd(A,zt,k,e.body,p);k===at.Sequence?e.body=Xa(rl(ze,S||f||O,zt,A),{rootName:f||O,xmlCharKey:d}):Le||(e.body=Xa(ze,{rootName:f||O,xmlCharKey:d}))}else{if(k===at.String&&(!((l=a.contentType)===null||l===void 0)&&l.match("text/plain")||a.mediaType==="text"))return;Le||(e.body=JSON.stringify(e.body))}}}catch($){throw new Error(`Error "${$.message}" occurred in serializing the payload - ${JSON.stringify(O,void 0,"  ")}.`)}}else if(a.formDataParameters&&a.formDataParameters.length>0){e.formData={};for(const y of a.formDataParameters){const C=qt(r,t,y,a.serializer);if(C!=null){const f=y.mapper.serializedName||Ne(y);e.formData[f]=a.serializer.serialize(y.mapper,C,Ne(y),p)}}}}function Dd(r,e,t,a,s){if(r&&!["Composite","Sequence","Dictionary"].includes(t)){const n={};return n[s.xmlCharKey]=a,n[U]={[e]:r},n}return a}function rs(r,e){let t;return typeof r=="string"?t=r:(t=e(),typeof r=="function"&&(t=r(t))),t}function Ld(r,e){const t=[];e.generateClientRequestIdHeader&&t.push(Qs(e.clientRequestIdHeaderName)),r&&t.push(r);const a=rs(e.userAgentHeaderName,Rc),s=rs(e.userAgent,ma);return a&&s&&t.push(Sc({key:a,value:s})),t.push(oc()),t.push(qc(e.rpRegistrationRetryTimeout)),e.noRetryPolicy||(t.push(hc()),t.push(kc()),t.push(Fc())),t.push(sa(e.deserializationContentTypes)),t.push(Ks({logger:fe.info})),t}function qt(r,e,t,a){return nn(r,e,t.parameterPath,t.mapper,a)}function nn(r,e,t,a,s){var n;let i;typeof t=="string"&&(t=[t]);const o=(n=e.options)===null||n===void 0?void 0:n.serializerOptions;if(Array.isArray(t)){if(t.length>0){if(a.isConstant)i=a.defaultValue;else{let l=as(e,t);l.propertyFound||(l=as(r,t));let c=!1;l.propertyFound||(c=a.required||t[0]==="options"&&t.length===2),i=c?a.defaultValue:l.propertyValue}const m=Zr(t,a);s.serialize(a,i,m,o)}}else{a.required&&(i={});for(const m in t){const l=a.type.modelProperties[m],c=t[m],p=nn(r,e,c,l,s),d=Zr(c,l);s.serialize(l,p,d,o),p!=null&&(i||(i={}),i[m]=p)}}return i}function as(r,e){const t={propertyFound:!1};let a=0;for(;a<e.length;++a){const s=e[a];if(r!=null&&s in r)r=r[s];else break}return a===e.length&&(t.propertyValue=r,t.propertyFound=!0),t}function ss(r,e){const t=r.parsedHeaders,a=e&&e.bodyMapper,s=n=>Object.defineProperty(n,"_response",{value:r});if(a){const n=a.type.name;if(n==="Stream")return s(Object.assign(Object.assign({},t),{blobBody:r.blobBody,readableStreamBody:r.readableStreamBody}));const i=n==="Composite"&&a.type.modelProperties||{},o=Object.keys(i).some(m=>i[m].serializedName==="");if(n==="Sequence"||o){const m=[...r.parsedBody||[]];for(const l of Object.keys(i))i[l].serializedName&&(m[l]=r.parsedBody[l]);if(t)for(const l of Object.keys(t))m[l]=t[l];return s(m),m}if(n==="Composite"||n==="Dictionary")return s(Object.assign(Object.assign({},t),r.parsedBody))}return a||r.request.method==="HEAD"||nl(r.parsedBody)?s(Object.assign(Object.assign({},t),{body:r.parsedBody})):s(Object.assign(Object.assign({},t),r.parsedBody))}function Ad(r,e){if(r!=null&&r.credentialScopes)return r.credentialScopes;if(e)return`${e}/.default`}const fa={serializedName:"BlobServiceProperties",xmlName:"StorageServiceProperties",type:{name:"Composite",className:"BlobServiceProperties",modelProperties:{blobAnalyticsLogging:{serializedName:"Logging",xmlName:"Logging",type:{name:"Composite",className:"Logging"}},hourMetrics:{serializedName:"HourMetrics",xmlName:"HourMetrics",type:{name:"Composite",className:"Metrics"}},minuteMetrics:{serializedName:"MinuteMetrics",xmlName:"MinuteMetrics",type:{name:"Composite",className:"Metrics"}},cors:{serializedName:"Cors",xmlName:"Cors",xmlIsWrapped:!0,xmlElementName:"CorsRule",type:{name:"Sequence",element:{type:{name:"Composite",className:"CorsRule"}}}},defaultServiceVersion:{serializedName:"DefaultServiceVersion",xmlName:"DefaultServiceVersion",type:{name:"String"}},deleteRetentionPolicy:{serializedName:"DeleteRetentionPolicy",xmlName:"DeleteRetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}},staticWebsite:{serializedName:"StaticWebsite",xmlName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite"}}}}},kd={serializedName:"Logging",type:{name:"Composite",className:"Logging",modelProperties:{version:{serializedName:"Version",required:!0,xmlName:"Version",type:{name:"String"}},deleteProperty:{serializedName:"Delete",required:!0,xmlName:"Delete",type:{name:"Boolean"}},read:{serializedName:"Read",required:!0,xmlName:"Read",type:{name:"Boolean"}},write:{serializedName:"Write",required:!0,xmlName:"Write",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},Ud={serializedName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},days:{constraints:{InclusiveMinimum:1},serializedName:"Days",xmlName:"Days",type:{name:"Number"}}}}},jd={serializedName:"Metrics",type:{name:"Composite",className:"Metrics",modelProperties:{version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},includeAPIs:{serializedName:"IncludeAPIs",xmlName:"IncludeAPIs",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},Fd={serializedName:"CorsRule",type:{name:"Composite",className:"CorsRule",modelProperties:{allowedOrigins:{serializedName:"AllowedOrigins",required:!0,xmlName:"AllowedOrigins",type:{name:"String"}},allowedMethods:{serializedName:"AllowedMethods",required:!0,xmlName:"AllowedMethods",type:{name:"String"}},allowedHeaders:{serializedName:"AllowedHeaders",required:!0,xmlName:"AllowedHeaders",type:{name:"String"}},exposedHeaders:{serializedName:"ExposedHeaders",required:!0,xmlName:"ExposedHeaders",type:{name:"String"}},maxAgeInSeconds:{constraints:{InclusiveMinimum:0},serializedName:"MaxAgeInSeconds",required:!0,xmlName:"MaxAgeInSeconds",type:{name:"Number"}}}}},$d={serializedName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},indexDocument:{serializedName:"IndexDocument",xmlName:"IndexDocument",type:{name:"String"}},errorDocument404Path:{serializedName:"ErrorDocument404Path",xmlName:"ErrorDocument404Path",type:{name:"String"}},defaultIndexDocumentPath:{serializedName:"DefaultIndexDocumentPath",xmlName:"DefaultIndexDocumentPath",type:{name:"String"}}}}},h={serializedName:"StorageError",type:{name:"Composite",className:"StorageError",modelProperties:{message:{serializedName:"Message",xmlName:"Message",type:{name:"String"}},code:{serializedName:"Code",xmlName:"Code",type:{name:"String"}}}}},on={serializedName:"BlobServiceStatistics",xmlName:"StorageServiceStats",type:{name:"Composite",className:"BlobServiceStatistics",modelProperties:{geoReplication:{serializedName:"GeoReplication",xmlName:"GeoReplication",type:{name:"Composite",className:"GeoReplication"}}}}},Kd={serializedName:"GeoReplication",type:{name:"Composite",className:"GeoReplication",modelProperties:{status:{serializedName:"Status",required:!0,xmlName:"Status",type:{name:"Enum",allowedValues:["live","bootstrap","unavailable"]}},lastSyncOn:{serializedName:"LastSyncTime",required:!0,xmlName:"LastSyncTime",type:{name:"DateTimeRfc1123"}}}}},mn={serializedName:"ListContainersSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListContainersSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},containerItems:{serializedName:"ContainerItems",required:!0,xmlName:"Containers",xmlIsWrapped:!0,xmlElementName:"Container",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},Gd={serializedName:"ContainerItem",xmlName:"Container",type:{name:"Composite",className:"ContainerItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},deleted:{serializedName:"Deleted",xmlName:"Deleted",type:{name:"Boolean"}},version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"ContainerProperties"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},Xd={serializedName:"ContainerProperties",type:{name:"Composite",className:"ContainerProperties",modelProperties:{lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},publicAccess:{serializedName:"PublicAccess",xmlName:"PublicAccess",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"HasImmutabilityPolicy",xmlName:"HasImmutabilityPolicy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"HasLegalHold",xmlName:"HasLegalHold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"DefaultEncryptionScope",xmlName:"DefaultEncryptionScope",type:{name:"String"}},preventEncryptionScopeOverride:{serializedName:"DenyEncryptionScopeOverride",xmlName:"DenyEncryptionScopeOverride",type:{name:"Boolean"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},isImmutableStorageWithVersioningEnabled:{serializedName:"ImmutableStorageWithVersioningEnabled",xmlName:"ImmutableStorageWithVersioningEnabled",type:{name:"Boolean"}}}}},ln={serializedName:"KeyInfo",type:{name:"Composite",className:"KeyInfo",modelProperties:{startsOn:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",required:!0,xmlName:"Expiry",type:{name:"String"}}}}},cn={serializedName:"UserDelegationKey",type:{name:"Composite",className:"UserDelegationKey",modelProperties:{signedObjectId:{serializedName:"SignedOid",required:!0,xmlName:"SignedOid",type:{name:"String"}},signedTenantId:{serializedName:"SignedTid",required:!0,xmlName:"SignedTid",type:{name:"String"}},signedStartsOn:{serializedName:"SignedStart",required:!0,xmlName:"SignedStart",type:{name:"String"}},signedExpiresOn:{serializedName:"SignedExpiry",required:!0,xmlName:"SignedExpiry",type:{name:"String"}},signedService:{serializedName:"SignedService",required:!0,xmlName:"SignedService",type:{name:"String"}},signedVersion:{serializedName:"SignedVersion",required:!0,xmlName:"SignedVersion",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},ga={serializedName:"FilterBlobSegment",xmlName:"EnumerationResults",type:{name:"Composite",className:"FilterBlobSegment",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},where:{serializedName:"Where",required:!0,xmlName:"Where",type:{name:"String"}},blobs:{serializedName:"Blobs",required:!0,xmlName:"Blobs",xmlIsWrapped:!0,xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"FilterBlobItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},Qd={serializedName:"FilterBlobItem",xmlName:"Blob",type:{name:"Composite",className:"FilterBlobItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",type:{name:"String"}},tags:{serializedName:"Tags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}}}}},ha={serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags",modelProperties:{blobTagSet:{serializedName:"BlobTagSet",required:!0,xmlName:"TagSet",xmlIsWrapped:!0,xmlElementName:"Tag",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobTag"}}}}}}},Wd={serializedName:"BlobTag",xmlName:"Tag",type:{name:"Composite",className:"BlobTag",modelProperties:{key:{serializedName:"Key",required:!0,xmlName:"Key",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},Yd={serializedName:"SignedIdentifier",xmlName:"SignedIdentifier",type:{name:"Composite",className:"SignedIdentifier",modelProperties:{id:{serializedName:"Id",required:!0,xmlName:"Id",type:{name:"String"}},accessPolicy:{serializedName:"AccessPolicy",xmlName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy"}}}}},Jd={serializedName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy",modelProperties:{startsOn:{serializedName:"Start",xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",xmlName:"Expiry",type:{name:"String"}},permissions:{serializedName:"Permission",xmlName:"Permission",type:{name:"String"}}}}},dn={serializedName:"ListBlobsFlatSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsFlatSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},Zd={serializedName:"BlobFlatListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment",modelProperties:{blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},Vd={serializedName:"BlobItemInternal",xmlName:"Blob",type:{name:"Composite",className:"BlobItemInternal",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}},deleted:{serializedName:"Deleted",required:!0,xmlName:"Deleted",type:{name:"Boolean"}},snapshot:{serializedName:"Snapshot",required:!0,xmlName:"Snapshot",type:{name:"String"}},versionId:{serializedName:"VersionId",xmlName:"VersionId",type:{name:"String"}},isCurrentVersion:{serializedName:"IsCurrentVersion",xmlName:"IsCurrentVersion",type:{name:"Boolean"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},blobTags:{serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}},objectReplicationMetadata:{serializedName:"ObjectReplicationMetadata",xmlName:"OrMetadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},hasVersionsOnly:{serializedName:"HasVersionsOnly",xmlName:"HasVersionsOnly",type:{name:"Boolean"}}}}},ep={serializedName:"BlobName",type:{name:"Composite",className:"BlobName",modelProperties:{encoded:{serializedName:"Encoded",xmlName:"Encoded",xmlIsAttribute:!0,type:{name:"Boolean"}},content:{serializedName:"content",xmlName:"content",xmlIsMsText:!0,type:{name:"String"}}}}},tp={serializedName:"BlobPropertiesInternal",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal",modelProperties:{createdOn:{serializedName:"Creation-Time",xmlName:"Creation-Time",type:{name:"DateTimeRfc1123"}},lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},contentLength:{serializedName:"Content-Length",xmlName:"Content-Length",type:{name:"Number"}},contentType:{serializedName:"Content-Type",xmlName:"Content-Type",type:{name:"String"}},contentEncoding:{serializedName:"Content-Encoding",xmlName:"Content-Encoding",type:{name:"String"}},contentLanguage:{serializedName:"Content-Language",xmlName:"Content-Language",type:{name:"String"}},contentMD5:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}},contentDisposition:{serializedName:"Content-Disposition",xmlName:"Content-Disposition",type:{name:"String"}},cacheControl:{serializedName:"Cache-Control",xmlName:"Cache-Control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"BlobType",xmlName:"BlobType",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},copyId:{serializedName:"CopyId",xmlName:"CopyId",type:{name:"String"}},copyStatus:{serializedName:"CopyStatus",xmlName:"CopyStatus",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},copySource:{serializedName:"CopySource",xmlName:"CopySource",type:{name:"String"}},copyProgress:{serializedName:"CopyProgress",xmlName:"CopyProgress",type:{name:"String"}},copyCompletedOn:{serializedName:"CopyCompletionTime",xmlName:"CopyCompletionTime",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"CopyStatusDescription",xmlName:"CopyStatusDescription",type:{name:"String"}},serverEncrypted:{serializedName:"ServerEncrypted",xmlName:"ServerEncrypted",type:{name:"Boolean"}},incrementalCopy:{serializedName:"IncrementalCopy",xmlName:"IncrementalCopy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"DestinationSnapshot",xmlName:"DestinationSnapshot",type:{name:"String"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},accessTier:{serializedName:"AccessTier",xmlName:"AccessTier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}},accessTierInferred:{serializedName:"AccessTierInferred",xmlName:"AccessTierInferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"ArchiveStatus",xmlName:"ArchiveStatus",type:{name:"Enum",allowedValues:["rehydrate-pending-to-hot","rehydrate-pending-to-cool"]}},customerProvidedKeySha256:{serializedName:"CustomerProvidedKeySha256",xmlName:"CustomerProvidedKeySha256",type:{name:"String"}},encryptionScope:{serializedName:"EncryptionScope",xmlName:"EncryptionScope",type:{name:"String"}},accessTierChangedOn:{serializedName:"AccessTierChangeTime",xmlName:"AccessTierChangeTime",type:{name:"DateTimeRfc1123"}},tagCount:{serializedName:"TagCount",xmlName:"TagCount",type:{name:"Number"}},expiresOn:{serializedName:"Expiry-Time",xmlName:"Expiry-Time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"Sealed",xmlName:"Sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"RehydratePriority",xmlName:"RehydratePriority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessedOn:{serializedName:"LastAccessTime",xmlName:"LastAccessTime",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"ImmutabilityPolicyUntilDate",xmlName:"ImmutabilityPolicyUntilDate",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"ImmutabilityPolicyMode",xmlName:"ImmutabilityPolicyMode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"LegalHold",xmlName:"LegalHold",type:{name:"Boolean"}}}}},pn={serializedName:"ListBlobsHierarchySegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsHierarchySegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},delimiter:{serializedName:"Delimiter",xmlName:"Delimiter",type:{name:"String"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},rp={serializedName:"BlobHierarchyListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment",modelProperties:{blobPrefixes:{serializedName:"BlobPrefixes",xmlName:"BlobPrefixes",xmlElementName:"BlobPrefix",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobPrefix"}}}},blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},ap={serializedName:"BlobPrefix",type:{name:"Composite",className:"BlobPrefix",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}}}}},un={serializedName:"BlockLookupList",xmlName:"BlockList",type:{name:"Composite",className:"BlockLookupList",modelProperties:{committed:{serializedName:"Committed",xmlName:"Committed",xmlElementName:"Committed",type:{name:"Sequence",element:{type:{name:"String"}}}},uncommitted:{serializedName:"Uncommitted",xmlName:"Uncommitted",xmlElementName:"Uncommitted",type:{name:"Sequence",element:{type:{name:"String"}}}},latest:{serializedName:"Latest",xmlName:"Latest",xmlElementName:"Latest",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},yn={serializedName:"BlockList",type:{name:"Composite",className:"BlockList",modelProperties:{committedBlocks:{serializedName:"CommittedBlocks",xmlName:"CommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}},uncommittedBlocks:{serializedName:"UncommittedBlocks",xmlName:"UncommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}}}}},sp={serializedName:"Block",type:{name:"Composite",className:"Block",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},size:{serializedName:"Size",required:!0,xmlName:"Size",type:{name:"Number"}}}}},xa={serializedName:"PageList",type:{name:"Composite",className:"PageList",modelProperties:{pageRange:{serializedName:"PageRange",xmlName:"PageRange",xmlElementName:"PageRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"PageRange"}}}},clearRange:{serializedName:"ClearRange",xmlName:"ClearRange",xmlElementName:"ClearRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"ClearRange"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},np={serializedName:"PageRange",xmlName:"PageRange",type:{name:"Composite",className:"PageRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},ip={serializedName:"ClearRange",xmlName:"ClearRange",type:{name:"Composite",className:"ClearRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},fn={serializedName:"QueryRequest",xmlName:"QueryRequest",type:{name:"Composite",className:"QueryRequest",modelProperties:{queryType:{serializedName:"QueryType",required:!0,xmlName:"QueryType",type:{name:"String"}},expression:{serializedName:"Expression",required:!0,xmlName:"Expression",type:{name:"String"}},inputSerialization:{serializedName:"InputSerialization",xmlName:"InputSerialization",type:{name:"Composite",className:"QuerySerialization"}},outputSerialization:{serializedName:"OutputSerialization",xmlName:"OutputSerialization",type:{name:"Composite",className:"QuerySerialization"}}}}},op={serializedName:"QuerySerialization",type:{name:"Composite",className:"QuerySerialization",modelProperties:{format:{serializedName:"Format",xmlName:"Format",type:{name:"Composite",className:"QueryFormat"}}}}},mp={serializedName:"QueryFormat",type:{name:"Composite",className:"QueryFormat",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"Enum",allowedValues:["delimited","json","arrow","parquet"]}},delimitedTextConfiguration:{serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration"}},jsonTextConfiguration:{serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration"}},arrowConfiguration:{serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration"}},parquetTextConfiguration:{serializedName:"ParquetTextConfiguration",xmlName:"ParquetTextConfiguration",type:{name:"any"}}}}},lp={serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration",modelProperties:{columnSeparator:{serializedName:"ColumnSeparator",xmlName:"ColumnSeparator",type:{name:"String"}},fieldQuote:{serializedName:"FieldQuote",xmlName:"FieldQuote",type:{name:"String"}},recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}},escapeChar:{serializedName:"EscapeChar",xmlName:"EscapeChar",type:{name:"String"}},headersPresent:{serializedName:"HeadersPresent",xmlName:"HasHeaders",type:{name:"Boolean"}}}}},cp={serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration",modelProperties:{recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}}}}},dp={serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration",modelProperties:{schema:{serializedName:"Schema",required:!0,xmlName:"Schema",xmlIsWrapped:!0,xmlElementName:"Field",type:{name:"Sequence",element:{type:{name:"Composite",className:"ArrowField"}}}}}}},pp={serializedName:"ArrowField",xmlName:"Field",type:{name:"Composite",className:"ArrowField",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"String"}},name:{serializedName:"Name",xmlName:"Name",type:{name:"String"}},precision:{serializedName:"Precision",xmlName:"Precision",type:{name:"Number"}},scale:{serializedName:"Scale",xmlName:"Scale",type:{name:"Number"}}}}},gn={serializedName:"Service_setPropertiesHeaders",type:{name:"Composite",className:"ServiceSetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},hn={serializedName:"Service_setPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceSetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},xn={serializedName:"Service_getPropertiesHeaders",type:{name:"Composite",className:"ServiceGetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Nn={serializedName:"Service_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},bn={serializedName:"Service_getStatisticsHeaders",type:{name:"Composite",className:"ServiceGetStatisticsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Cn={serializedName:"Service_getStatisticsExceptionHeaders",type:{name:"Composite",className:"ServiceGetStatisticsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Pn={serializedName:"Service_listContainersSegmentHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},vn={serializedName:"Service_listContainersSegmentExceptionHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Rn={serializedName:"Service_getUserDelegationKeyHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Sn={serializedName:"Service_getUserDelegationKeyExceptionHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},zn={serializedName:"Service_getAccountInfoHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},En={serializedName:"Service_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},wn={serializedName:"Service_submitBatchHeaders",type:{name:"Composite",className:"ServiceSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Tn={serializedName:"Service_submitBatchExceptionHeaders",type:{name:"Composite",className:"ServiceSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},On={serializedName:"Service_filterBlobsHeaders",type:{name:"Composite",className:"ServiceFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Bn={serializedName:"Service_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ServiceFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qn={serializedName:"Container_createHeaders",type:{name:"Composite",className:"ContainerCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},In={serializedName:"Container_createExceptionHeaders",type:{name:"Composite",className:"ContainerCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Mn={serializedName:"Container_getPropertiesHeaders",type:{name:"Composite",className:"ContainerGetPropertiesHeaders",modelProperties:{metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"x-ms-has-immutability-policy",xmlName:"x-ms-has-immutability-policy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"x-ms-has-legal-hold",xmlName:"x-ms-has-legal-hold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}},denyEncryptionScopeOverride:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}},isImmutableStorageWithVersioningEnabled:{serializedName:"x-ms-immutable-storage-with-versioning-enabled",xmlName:"x-ms-immutable-storage-with-versioning-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_n={serializedName:"Container_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ContainerGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Hn={serializedName:"Container_deleteHeaders",type:{name:"Composite",className:"ContainerDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Dn={serializedName:"Container_deleteExceptionHeaders",type:{name:"Composite",className:"ContainerDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ln={serializedName:"Container_setMetadataHeaders",type:{name:"Composite",className:"ContainerSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},An={serializedName:"Container_setMetadataExceptionHeaders",type:{name:"Composite",className:"ContainerSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},kn={serializedName:"Container_getAccessPolicyHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyHeaders",modelProperties:{blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Un={serializedName:"Container_getAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},jn={serializedName:"Container_setAccessPolicyHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fn={serializedName:"Container_setAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},$n={serializedName:"Container_restoreHeaders",type:{name:"Composite",className:"ContainerRestoreHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Kn={serializedName:"Container_restoreExceptionHeaders",type:{name:"Composite",className:"ContainerRestoreExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Gn={serializedName:"Container_renameHeaders",type:{name:"Composite",className:"ContainerRenameHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Xn={serializedName:"Container_renameExceptionHeaders",type:{name:"Composite",className:"ContainerRenameExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qn={serializedName:"Container_submitBatchHeaders",type:{name:"Composite",className:"ContainerSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}}}}},Wn={serializedName:"Container_submitBatchExceptionHeaders",type:{name:"Composite",className:"ContainerSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Yn={serializedName:"Container_filterBlobsHeaders",type:{name:"Composite",className:"ContainerFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Jn={serializedName:"Container_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ContainerFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Zn={serializedName:"Container_acquireLeaseHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Vn={serializedName:"Container_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ei={serializedName:"Container_releaseLeaseHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ti={serializedName:"Container_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ri={serializedName:"Container_renewLeaseHeaders",type:{name:"Composite",className:"ContainerRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ai={serializedName:"Container_renewLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},si={serializedName:"Container_breakLeaseHeaders",type:{name:"Composite",className:"ContainerBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ni={serializedName:"Container_breakLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ii={serializedName:"Container_changeLeaseHeaders",type:{name:"Composite",className:"ContainerChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},oi={serializedName:"Container_changeLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},mi={serializedName:"Container_listBlobFlatSegmentHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},li={serializedName:"Container_listBlobFlatSegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ci={serializedName:"Container_listBlobHierarchySegmentHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},di={serializedName:"Container_listBlobHierarchySegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},pi={serializedName:"Container_getAccountInfoHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}}}}},ui={serializedName:"Container_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ea={serializedName:"Blob_downloadHeaders",type:{name:"Composite",className:"BlobDownloadHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},createdOn:{serializedName:"x-ms-creation-time",xmlName:"x-ms-creation-time",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-or-"},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},yi={serializedName:"Blob_downloadExceptionHeaders",type:{name:"Composite",className:"BlobDownloadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},fi={serializedName:"Blob_getPropertiesHeaders",type:{name:"Composite",className:"BlobGetPropertiesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},createdOn:{serializedName:"x-ms-creation-time",xmlName:"x-ms-creation-time",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-or-"},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},isIncrementalCopy:{serializedName:"x-ms-incremental-copy",xmlName:"x-ms-incremental-copy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"x-ms-copy-destination-snapshot",xmlName:"x-ms-copy-destination-snapshot",type:{name:"String"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},accessTier:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"String"}},accessTierInferred:{serializedName:"x-ms-access-tier-inferred",xmlName:"x-ms-access-tier-inferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"x-ms-archive-status",xmlName:"x-ms-archive-status",type:{name:"String"}},accessTierChangedOn:{serializedName:"x-ms-access-tier-change-time",xmlName:"x-ms-access-tier-change-time",type:{name:"DateTimeRfc1123"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},expiresOn:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},gi={serializedName:"Blob_getPropertiesExceptionHeaders",type:{name:"Composite",className:"BlobGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},hi={serializedName:"Blob_deleteHeaders",type:{name:"Composite",className:"BlobDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},xi={serializedName:"Blob_deleteExceptionHeaders",type:{name:"Composite",className:"BlobDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ni={serializedName:"Blob_undeleteHeaders",type:{name:"Composite",className:"BlobUndeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},bi={serializedName:"Blob_undeleteExceptionHeaders",type:{name:"Composite",className:"BlobUndeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ci={serializedName:"Blob_setExpiryHeaders",type:{name:"Composite",className:"BlobSetExpiryHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Pi={serializedName:"Blob_setExpiryExceptionHeaders",type:{name:"Composite",className:"BlobSetExpiryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},vi={serializedName:"Blob_setHttpHeadersHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ri={serializedName:"Blob_setHttpHeadersExceptionHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Si={serializedName:"Blob_setImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiry:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}}}},zi={serializedName:"Blob_setImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ei={serializedName:"Blob_deleteImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},wi={serializedName:"Blob_deleteImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ti={serializedName:"Blob_setLegalHoldHeaders",type:{name:"Composite",className:"BlobSetLegalHoldHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}}}},Oi={serializedName:"Blob_setLegalHoldExceptionHeaders",type:{name:"Composite",className:"BlobSetLegalHoldExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Bi={serializedName:"Blob_setMetadataHeaders",type:{name:"Composite",className:"BlobSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qi={serializedName:"Blob_setMetadataExceptionHeaders",type:{name:"Composite",className:"BlobSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ii={serializedName:"Blob_acquireLeaseHeaders",type:{name:"Composite",className:"BlobAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Mi={serializedName:"Blob_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"BlobAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_i={serializedName:"Blob_releaseLeaseHeaders",type:{name:"Composite",className:"BlobReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Hi={serializedName:"Blob_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"BlobReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Di={serializedName:"Blob_renewLeaseHeaders",type:{name:"Composite",className:"BlobRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Li={serializedName:"Blob_renewLeaseExceptionHeaders",type:{name:"Composite",className:"BlobRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ai={serializedName:"Blob_changeLeaseHeaders",type:{name:"Composite",className:"BlobChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ki={serializedName:"Blob_changeLeaseExceptionHeaders",type:{name:"Composite",className:"BlobChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ui={serializedName:"Blob_breakLeaseHeaders",type:{name:"Composite",className:"BlobBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ji={serializedName:"Blob_breakLeaseExceptionHeaders",type:{name:"Composite",className:"BlobBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fi={serializedName:"Blob_createSnapshotHeaders",type:{name:"Composite",className:"BlobCreateSnapshotHeaders",modelProperties:{snapshot:{serializedName:"x-ms-snapshot",xmlName:"x-ms-snapshot",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},$i={serializedName:"Blob_createSnapshotExceptionHeaders",type:{name:"Composite",className:"BlobCreateSnapshotExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ki={serializedName:"Blob_startCopyFromURLHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Gi={serializedName:"Blob_startCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Xi={serializedName:"Blob_copyFromURLHeaders",type:{name:"Composite",className:"BlobCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{defaultValue:"success",isConstant:!0,serializedName:"x-ms-copy-status",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qi={serializedName:"Blob_copyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Wi={serializedName:"Blob_abortCopyFromURLHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Yi={serializedName:"Blob_abortCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ta={serializedName:"Blob_setTierHeaders",type:{name:"Composite",className:"BlobSetTierHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ji={serializedName:"Blob_setTierExceptionHeaders",type:{name:"Composite",className:"BlobSetTierExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Zi={serializedName:"Blob_getAccountInfoHeaders",type:{name:"Composite",className:"BlobGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}}}}},Vi={serializedName:"Blob_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"BlobGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ra={serializedName:"Blob_queryHeaders",type:{name:"Composite",className:"BlobQueryHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletionTime:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},eo={serializedName:"Blob_queryExceptionHeaders",type:{name:"Composite",className:"BlobQueryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},to={serializedName:"Blob_getTagsHeaders",type:{name:"Composite",className:"BlobGetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ro={serializedName:"Blob_getTagsExceptionHeaders",type:{name:"Composite",className:"BlobGetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ao={serializedName:"Blob_setTagsHeaders",type:{name:"Composite",className:"BlobSetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},so={serializedName:"Blob_setTagsExceptionHeaders",type:{name:"Composite",className:"BlobSetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},no={serializedName:"PageBlob_createHeaders",type:{name:"Composite",className:"PageBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},io={serializedName:"PageBlob_createExceptionHeaders",type:{name:"Composite",className:"PageBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},oo={serializedName:"PageBlob_uploadPagesHeaders",type:{name:"Composite",className:"PageBlobUploadPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},mo={serializedName:"PageBlob_uploadPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},lo={serializedName:"PageBlob_clearPagesHeaders",type:{name:"Composite",className:"PageBlobClearPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},co={serializedName:"PageBlob_clearPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobClearPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},po={serializedName:"PageBlob_uploadPagesFromURLHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},uo={serializedName:"PageBlob_uploadPagesFromURLExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},yo={serializedName:"PageBlob_getPageRangesHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},fo={serializedName:"PageBlob_getPageRangesExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},go={serializedName:"PageBlob_getPageRangesDiffHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ho={serializedName:"PageBlob_getPageRangesDiffExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},xo={serializedName:"PageBlob_resizeHeaders",type:{name:"Composite",className:"PageBlobResizeHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},No={serializedName:"PageBlob_resizeExceptionHeaders",type:{name:"Composite",className:"PageBlobResizeExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},bo={serializedName:"PageBlob_updateSequenceNumberHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Co={serializedName:"PageBlob_updateSequenceNumberExceptionHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Po={serializedName:"PageBlob_copyIncrementalHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},vo={serializedName:"PageBlob_copyIncrementalExceptionHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ro={serializedName:"AppendBlob_createHeaders",type:{name:"Composite",className:"AppendBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},So={serializedName:"AppendBlob_createExceptionHeaders",type:{name:"Composite",className:"AppendBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},zo={serializedName:"AppendBlob_appendBlockHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Eo={serializedName:"AppendBlob_appendBlockExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},wo={serializedName:"AppendBlob_appendBlockFromUrlHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},To={serializedName:"AppendBlob_appendBlockFromUrlExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Oo={serializedName:"AppendBlob_sealHeaders",type:{name:"Composite",className:"AppendBlobSealHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}}}}},Bo={serializedName:"AppendBlob_sealExceptionHeaders",type:{name:"Composite",className:"AppendBlobSealExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qo={serializedName:"BlockBlob_uploadHeaders",type:{name:"Composite",className:"BlockBlobUploadHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Io={serializedName:"BlockBlob_uploadExceptionHeaders",type:{name:"Composite",className:"BlockBlobUploadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Mo={serializedName:"BlockBlob_putBlobFromUrlHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_o={serializedName:"BlockBlob_putBlobFromUrlExceptionHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ho={serializedName:"BlockBlob_stageBlockHeaders",type:{name:"Composite",className:"BlockBlobStageBlockHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Do={serializedName:"BlockBlob_stageBlockExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Lo={serializedName:"BlockBlob_stageBlockFromURLHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ao={serializedName:"BlockBlob_stageBlockFromURLExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ko={serializedName:"BlockBlob_commitBlockListHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Uo={serializedName:"BlockBlob_commitBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},jo={serializedName:"BlockBlob_getBlockListHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fo={serializedName:"BlockBlob_getBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Re=Object.freeze(Object.defineProperty({__proto__:null,AccessPolicy:Jd,AppendBlobAppendBlockExceptionHeaders:Eo,AppendBlobAppendBlockFromUrlExceptionHeaders:To,AppendBlobAppendBlockFromUrlHeaders:wo,AppendBlobAppendBlockHeaders:zo,AppendBlobCreateExceptionHeaders:So,AppendBlobCreateHeaders:Ro,AppendBlobSealExceptionHeaders:Bo,AppendBlobSealHeaders:Oo,ArrowConfiguration:dp,ArrowField:pp,BlobAbortCopyFromURLExceptionHeaders:Yi,BlobAbortCopyFromURLHeaders:Wi,BlobAcquireLeaseExceptionHeaders:Mi,BlobAcquireLeaseHeaders:Ii,BlobBreakLeaseExceptionHeaders:ji,BlobBreakLeaseHeaders:Ui,BlobChangeLeaseExceptionHeaders:ki,BlobChangeLeaseHeaders:Ai,BlobCopyFromURLExceptionHeaders:Qi,BlobCopyFromURLHeaders:Xi,BlobCreateSnapshotExceptionHeaders:$i,BlobCreateSnapshotHeaders:Fi,BlobDeleteExceptionHeaders:xi,BlobDeleteHeaders:hi,BlobDeleteImmutabilityPolicyExceptionHeaders:wi,BlobDeleteImmutabilityPolicyHeaders:Ei,BlobDownloadExceptionHeaders:yi,BlobDownloadHeaders:ea,BlobFlatListSegment:Zd,BlobGetAccountInfoExceptionHeaders:Vi,BlobGetAccountInfoHeaders:Zi,BlobGetPropertiesExceptionHeaders:gi,BlobGetPropertiesHeaders:fi,BlobGetTagsExceptionHeaders:ro,BlobGetTagsHeaders:to,BlobHierarchyListSegment:rp,BlobItemInternal:Vd,BlobName:ep,BlobPrefix:ap,BlobPropertiesInternal:tp,BlobQueryExceptionHeaders:eo,BlobQueryHeaders:ra,BlobReleaseLeaseExceptionHeaders:Hi,BlobReleaseLeaseHeaders:_i,BlobRenewLeaseExceptionHeaders:Li,BlobRenewLeaseHeaders:Di,BlobServiceProperties:fa,BlobServiceStatistics:on,BlobSetExpiryExceptionHeaders:Pi,BlobSetExpiryHeaders:Ci,BlobSetHttpHeadersExceptionHeaders:Ri,BlobSetHttpHeadersHeaders:vi,BlobSetImmutabilityPolicyExceptionHeaders:zi,BlobSetImmutabilityPolicyHeaders:Si,BlobSetLegalHoldExceptionHeaders:Oi,BlobSetLegalHoldHeaders:Ti,BlobSetMetadataExceptionHeaders:qi,BlobSetMetadataHeaders:Bi,BlobSetTagsExceptionHeaders:so,BlobSetTagsHeaders:ao,BlobSetTierExceptionHeaders:Ji,BlobSetTierHeaders:ta,BlobStartCopyFromURLExceptionHeaders:Gi,BlobStartCopyFromURLHeaders:Ki,BlobTag:Wd,BlobTags:ha,BlobUndeleteExceptionHeaders:bi,BlobUndeleteHeaders:Ni,Block:sp,BlockBlobCommitBlockListExceptionHeaders:Uo,BlockBlobCommitBlockListHeaders:ko,BlockBlobGetBlockListExceptionHeaders:Fo,BlockBlobGetBlockListHeaders:jo,BlockBlobPutBlobFromUrlExceptionHeaders:_o,BlockBlobPutBlobFromUrlHeaders:Mo,BlockBlobStageBlockExceptionHeaders:Do,BlockBlobStageBlockFromURLExceptionHeaders:Ao,BlockBlobStageBlockFromURLHeaders:Lo,BlockBlobStageBlockHeaders:Ho,BlockBlobUploadExceptionHeaders:Io,BlockBlobUploadHeaders:qo,BlockList:yn,BlockLookupList:un,ClearRange:ip,ContainerAcquireLeaseExceptionHeaders:Vn,ContainerAcquireLeaseHeaders:Zn,ContainerBreakLeaseExceptionHeaders:ni,ContainerBreakLeaseHeaders:si,ContainerChangeLeaseExceptionHeaders:oi,ContainerChangeLeaseHeaders:ii,ContainerCreateExceptionHeaders:In,ContainerCreateHeaders:qn,ContainerDeleteExceptionHeaders:Dn,ContainerDeleteHeaders:Hn,ContainerFilterBlobsExceptionHeaders:Jn,ContainerFilterBlobsHeaders:Yn,ContainerGetAccessPolicyExceptionHeaders:Un,ContainerGetAccessPolicyHeaders:kn,ContainerGetAccountInfoExceptionHeaders:ui,ContainerGetAccountInfoHeaders:pi,ContainerGetPropertiesExceptionHeaders:_n,ContainerGetPropertiesHeaders:Mn,ContainerItem:Gd,ContainerListBlobFlatSegmentExceptionHeaders:li,ContainerListBlobFlatSegmentHeaders:mi,ContainerListBlobHierarchySegmentExceptionHeaders:di,ContainerListBlobHierarchySegmentHeaders:ci,ContainerProperties:Xd,ContainerReleaseLeaseExceptionHeaders:ti,ContainerReleaseLeaseHeaders:ei,ContainerRenameExceptionHeaders:Xn,ContainerRenameHeaders:Gn,ContainerRenewLeaseExceptionHeaders:ai,ContainerRenewLeaseHeaders:ri,ContainerRestoreExceptionHeaders:Kn,ContainerRestoreHeaders:$n,ContainerSetAccessPolicyExceptionHeaders:Fn,ContainerSetAccessPolicyHeaders:jn,ContainerSetMetadataExceptionHeaders:An,ContainerSetMetadataHeaders:Ln,ContainerSubmitBatchExceptionHeaders:Wn,ContainerSubmitBatchHeaders:Qn,CorsRule:Fd,DelimitedTextConfiguration:lp,FilterBlobItem:Qd,FilterBlobSegment:ga,GeoReplication:Kd,JsonTextConfiguration:cp,KeyInfo:ln,ListBlobsFlatSegmentResponse:dn,ListBlobsHierarchySegmentResponse:pn,ListContainersSegmentResponse:mn,Logging:kd,Metrics:jd,PageBlobClearPagesExceptionHeaders:co,PageBlobClearPagesHeaders:lo,PageBlobCopyIncrementalExceptionHeaders:vo,PageBlobCopyIncrementalHeaders:Po,PageBlobCreateExceptionHeaders:io,PageBlobCreateHeaders:no,PageBlobGetPageRangesDiffExceptionHeaders:ho,PageBlobGetPageRangesDiffHeaders:go,PageBlobGetPageRangesExceptionHeaders:fo,PageBlobGetPageRangesHeaders:yo,PageBlobResizeExceptionHeaders:No,PageBlobResizeHeaders:xo,PageBlobUpdateSequenceNumberExceptionHeaders:Co,PageBlobUpdateSequenceNumberHeaders:bo,PageBlobUploadPagesExceptionHeaders:mo,PageBlobUploadPagesFromURLExceptionHeaders:uo,PageBlobUploadPagesFromURLHeaders:po,PageBlobUploadPagesHeaders:oo,PageList:xa,PageRange:np,QueryFormat:mp,QueryRequest:fn,QuerySerialization:op,RetentionPolicy:Ud,ServiceFilterBlobsExceptionHeaders:Bn,ServiceFilterBlobsHeaders:On,ServiceGetAccountInfoExceptionHeaders:En,ServiceGetAccountInfoHeaders:zn,ServiceGetPropertiesExceptionHeaders:Nn,ServiceGetPropertiesHeaders:xn,ServiceGetStatisticsExceptionHeaders:Cn,ServiceGetStatisticsHeaders:bn,ServiceGetUserDelegationKeyExceptionHeaders:Sn,ServiceGetUserDelegationKeyHeaders:Rn,ServiceListContainersSegmentExceptionHeaders:vn,ServiceListContainersSegmentHeaders:Pn,ServiceSetPropertiesExceptionHeaders:hn,ServiceSetPropertiesHeaders:gn,ServiceSubmitBatchExceptionHeaders:Tn,ServiceSubmitBatchHeaders:wn,SignedIdentifier:Yd,StaticWebsite:$d,StorageError:h,UserDelegationKey:cn},Symbol.toStringTag,{value:"Module"})),qe={parameterPath:["options","contentType"],mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},up={parameterPath:"blobServiceProperties",mapper:fa},Ie={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},N={parameterPath:"url",mapper:{serializedName:"url",required:!0,xmlName:"url",type:{name:"String"}},skipEncoding:!0},hr={parameterPath:"restype",mapper:{defaultValue:"service",isConstant:!0,serializedName:"restype",type:{name:"String"}}},Me={parameterPath:"comp",mapper:{defaultValue:"properties",isConstant:!0,serializedName:"comp",type:{name:"String"}}},v={parameterPath:["options","timeoutInSeconds"],mapper:{constraints:{InclusiveMinimum:0},serializedName:"timeout",xmlName:"timeout",type:{name:"Number"}}},b={parameterPath:"version",mapper:{defaultValue:"2023-01-03",isConstant:!0,serializedName:"x-ms-version",type:{name:"String"}}},R={parameterPath:["options","requestId"],mapper:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}}},z={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},yp={parameterPath:"comp",mapper:{defaultValue:"stats",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Na={parameterPath:"comp",mapper:{defaultValue:"list",isConstant:!0,serializedName:"comp",type:{name:"String"}}},ba={parameterPath:["options","prefix"],mapper:{serializedName:"prefix",xmlName:"prefix",type:{name:"String"}}},Qe={parameterPath:["options","marker"],mapper:{serializedName:"marker",xmlName:"marker",type:{name:"String"}}},We={parameterPath:["options","maxPageSize"],mapper:{constraints:{InclusiveMinimum:1},serializedName:"maxresults",xmlName:"maxresults",type:{name:"Number"}}},fp={parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListContainersIncludeType",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["metadata","deleted","system"]}}}},collectionFormat:ye.Csv},gp={parameterPath:"keyInfo",mapper:ln},hp={parameterPath:"comp",mapper:{defaultValue:"userdelegationkey",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Ca={parameterPath:"restype",mapper:{defaultValue:"account",isConstant:!0,serializedName:"restype",type:{name:"String"}}},$o={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},Ko={parameterPath:"comp",mapper:{defaultValue:"batch",isConstant:!0,serializedName:"comp",type:{name:"String"}}},ie={parameterPath:"contentLength",mapper:{serializedName:"Content-Length",required:!0,xmlName:"Content-Length",type:{name:"Number"}}},Go={parameterPath:"multipartContentType",mapper:{serializedName:"Content-Type",required:!0,xmlName:"Content-Type",type:{name:"String"}}},Xo={parameterPath:"comp",mapper:{defaultValue:"blobs",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Qo={parameterPath:["options","where"],mapper:{serializedName:"where",xmlName:"where",type:{name:"String"}}},Z={parameterPath:"restype",mapper:{defaultValue:"container",isConstant:!0,serializedName:"restype",type:{name:"String"}}},ce={parameterPath:["options","metadata"],mapper:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}},headerCollectionPrefix:"x-ms-meta-"}},Wo={parameterPath:["options","access"],mapper:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}}},xp={parameterPath:["options","containerEncryptionScope","defaultEncryptionScope"],mapper:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}}},Np={parameterPath:["options","containerEncryptionScope","preventEncryptionScopeOverride"],mapper:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}}},B={parameterPath:["options","leaseAccessConditions","leaseId"],mapper:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}}},w={parameterPath:["options","modifiedAccessConditions","ifModifiedSince"],mapper:{serializedName:"If-Modified-Since",xmlName:"If-Modified-Since",type:{name:"DateTimeRfc1123"}}},T={parameterPath:["options","modifiedAccessConditions","ifUnmodifiedSince"],mapper:{serializedName:"If-Unmodified-Since",xmlName:"If-Unmodified-Since",type:{name:"DateTimeRfc1123"}}},Yo={parameterPath:"comp",mapper:{defaultValue:"metadata",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Jo={parameterPath:"comp",mapper:{defaultValue:"acl",isConstant:!0,serializedName:"comp",type:{name:"String"}}},bp={parameterPath:["options","containerAcl"],mapper:{serializedName:"containerAcl",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier",type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}}}},Zo={parameterPath:"comp",mapper:{defaultValue:"undelete",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Cp={parameterPath:["options","deletedContainerName"],mapper:{serializedName:"x-ms-deleted-container-name",xmlName:"x-ms-deleted-container-name",type:{name:"String"}}},Pp={parameterPath:["options","deletedContainerVersion"],mapper:{serializedName:"x-ms-deleted-container-version",xmlName:"x-ms-deleted-container-version",type:{name:"String"}}},vp={parameterPath:"comp",mapper:{defaultValue:"rename",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Rp={parameterPath:"sourceContainerName",mapper:{serializedName:"x-ms-source-container-name",required:!0,xmlName:"x-ms-source-container-name",type:{name:"String"}}},Sp={parameterPath:["options","sourceLeaseId"],mapper:{serializedName:"x-ms-source-lease-id",xmlName:"x-ms-source-lease-id",type:{name:"String"}}},he={parameterPath:"comp",mapper:{defaultValue:"lease",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Vo={parameterPath:"action",mapper:{defaultValue:"acquire",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},em={parameterPath:["options","duration"],mapper:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Number"}}},tm={parameterPath:["options","proposedLeaseId"],mapper:{serializedName:"x-ms-proposed-lease-id",xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},rm={parameterPath:"action",mapper:{defaultValue:"release",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},mt={parameterPath:"leaseId",mapper:{serializedName:"x-ms-lease-id",required:!0,xmlName:"x-ms-lease-id",type:{name:"String"}}},am={parameterPath:"action",mapper:{defaultValue:"renew",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},sm={parameterPath:"action",mapper:{defaultValue:"break",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},nm={parameterPath:["options","breakPeriod"],mapper:{serializedName:"x-ms-lease-break-period",xmlName:"x-ms-lease-break-period",type:{name:"Number"}}},im={parameterPath:"action",mapper:{defaultValue:"change",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},om={parameterPath:"proposedLeaseId",mapper:{serializedName:"x-ms-proposed-lease-id",required:!0,xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},mm={parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListBlobsIncludeItem",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["copy","deleted","metadata","snapshots","uncommittedblobs","versions","tags","immutabilitypolicy","legalhold","deletedwithversions"]}}}},collectionFormat:ye.Csv},zp={parameterPath:"delimiter",mapper:{serializedName:"delimiter",required:!0,xmlName:"delimiter",type:{name:"String"}}},Se={parameterPath:["options","snapshot"],mapper:{serializedName:"snapshot",xmlName:"snapshot",type:{name:"String"}}},lt={parameterPath:["options","versionId"],mapper:{serializedName:"versionid",xmlName:"versionid",type:{name:"String"}}},Xt={parameterPath:["options","range"],mapper:{serializedName:"x-ms-range",xmlName:"x-ms-range",type:{name:"String"}}},Ep={parameterPath:["options","rangeGetContentMD5"],mapper:{serializedName:"x-ms-range-get-content-md5",xmlName:"x-ms-range-get-content-md5",type:{name:"Boolean"}}},wp={parameterPath:["options","rangeGetContentCRC64"],mapper:{serializedName:"x-ms-range-get-content-crc64",xmlName:"x-ms-range-get-content-crc64",type:{name:"Boolean"}}},X={parameterPath:["options","cpkInfo","encryptionKey"],mapper:{serializedName:"x-ms-encryption-key",xmlName:"x-ms-encryption-key",type:{name:"String"}}},Q={parameterPath:["options","cpkInfo","encryptionKeySha256"],mapper:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}}},W={parameterPath:["options","cpkInfo","encryptionAlgorithm"],mapper:{serializedName:"x-ms-encryption-algorithm",xmlName:"x-ms-encryption-algorithm",type:{name:"String"}}},M={parameterPath:["options","modifiedAccessConditions","ifMatch"],mapper:{serializedName:"If-Match",xmlName:"If-Match",type:{name:"String"}}},_={parameterPath:["options","modifiedAccessConditions","ifNoneMatch"],mapper:{serializedName:"If-None-Match",xmlName:"If-None-Match",type:{name:"String"}}},q={parameterPath:["options","modifiedAccessConditions","ifTags"],mapper:{serializedName:"x-ms-if-tags",xmlName:"x-ms-if-tags",type:{name:"String"}}},Tp={parameterPath:["options","deleteSnapshots"],mapper:{serializedName:"x-ms-delete-snapshots",xmlName:"x-ms-delete-snapshots",type:{name:"Enum",allowedValues:["include","only"]}}},Op={parameterPath:["options","blobDeleteType"],mapper:{serializedName:"deletetype",xmlName:"deletetype",type:{name:"String"}}},Bp={parameterPath:"comp",mapper:{defaultValue:"expiry",isConstant:!0,serializedName:"comp",type:{name:"String"}}},qp={parameterPath:"expiryOptions",mapper:{serializedName:"x-ms-expiry-option",required:!0,xmlName:"x-ms-expiry-option",type:{name:"String"}}},Ip={parameterPath:["options","expiresOn"],mapper:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"String"}}},ct={parameterPath:["options","blobHttpHeaders","blobCacheControl"],mapper:{serializedName:"x-ms-blob-cache-control",xmlName:"x-ms-blob-cache-control",type:{name:"String"}}},dt={parameterPath:["options","blobHttpHeaders","blobContentType"],mapper:{serializedName:"x-ms-blob-content-type",xmlName:"x-ms-blob-content-type",type:{name:"String"}}},pt={parameterPath:["options","blobHttpHeaders","blobContentMD5"],mapper:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}}},ut={parameterPath:["options","blobHttpHeaders","blobContentEncoding"],mapper:{serializedName:"x-ms-blob-content-encoding",xmlName:"x-ms-blob-content-encoding",type:{name:"String"}}},yt={parameterPath:["options","blobHttpHeaders","blobContentLanguage"],mapper:{serializedName:"x-ms-blob-content-language",xmlName:"x-ms-blob-content-language",type:{name:"String"}}},ft={parameterPath:["options","blobHttpHeaders","blobContentDisposition"],mapper:{serializedName:"x-ms-blob-content-disposition",xmlName:"x-ms-blob-content-disposition",type:{name:"String"}}},lm={parameterPath:"comp",mapper:{defaultValue:"immutabilityPolicies",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Ye={parameterPath:["options","immutabilityPolicyExpiry"],mapper:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}}},Je={parameterPath:["options","immutabilityPolicyMode"],mapper:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}},Mp={parameterPath:"comp",mapper:{defaultValue:"legalhold",isConstant:!0,serializedName:"comp",type:{name:"String"}}},_p={parameterPath:"legalHold",mapper:{serializedName:"x-ms-legal-hold",required:!0,xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}},V={parameterPath:["options","encryptionScope"],mapper:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}}},Hp={parameterPath:"comp",mapper:{defaultValue:"snapshot",isConstant:!0,serializedName:"comp",type:{name:"String"}}},gt={parameterPath:["options","tier"],mapper:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}}},cm={parameterPath:["options","rehydratePriority"],mapper:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}}},ht={parameterPath:["options","sourceModifiedAccessConditions","sourceIfModifiedSince"],mapper:{serializedName:"x-ms-source-if-modified-since",xmlName:"x-ms-source-if-modified-since",type:{name:"DateTimeRfc1123"}}},xt={parameterPath:["options","sourceModifiedAccessConditions","sourceIfUnmodifiedSince"],mapper:{serializedName:"x-ms-source-if-unmodified-since",xmlName:"x-ms-source-if-unmodified-since",type:{name:"DateTimeRfc1123"}}},Nt={parameterPath:["options","sourceModifiedAccessConditions","sourceIfMatch"],mapper:{serializedName:"x-ms-source-if-match",xmlName:"x-ms-source-if-match",type:{name:"String"}}},bt={parameterPath:["options","sourceModifiedAccessConditions","sourceIfNoneMatch"],mapper:{serializedName:"x-ms-source-if-none-match",xmlName:"x-ms-source-if-none-match",type:{name:"String"}}},dm={parameterPath:["options","sourceModifiedAccessConditions","sourceIfTags"],mapper:{serializedName:"x-ms-source-if-tags",xmlName:"x-ms-source-if-tags",type:{name:"String"}}},xr={parameterPath:"copySource",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},Ze={parameterPath:["options","blobTagsString"],mapper:{serializedName:"x-ms-tags",xmlName:"x-ms-tags",type:{name:"String"}}},Dp={parameterPath:["options","sealBlob"],mapper:{serializedName:"x-ms-seal-blob",xmlName:"x-ms-seal-blob",type:{name:"Boolean"}}},Ct={parameterPath:["options","legalHold"],mapper:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}},Lp={parameterPath:"xMsRequiresSync",mapper:{defaultValue:"true",isConstant:!0,serializedName:"x-ms-requires-sync",type:{name:"String"}}},Qt={parameterPath:["options","sourceContentMD5"],mapper:{serializedName:"x-ms-source-content-md5",xmlName:"x-ms-source-content-md5",type:{name:"ByteArray"}}},Wt={parameterPath:["options","copySourceAuthorization"],mapper:{serializedName:"x-ms-copy-source-authorization",xmlName:"x-ms-copy-source-authorization",type:{name:"String"}}},pm={parameterPath:["options","copySourceTags"],mapper:{serializedName:"x-ms-copy-source-tag-option",xmlName:"x-ms-copy-source-tag-option",type:{name:"Enum",allowedValues:["REPLACE","COPY"]}}},Ap={parameterPath:"comp",mapper:{defaultValue:"copy",isConstant:!0,serializedName:"comp",type:{name:"String"}}},kp={parameterPath:"copyActionAbortConstant",mapper:{defaultValue:"abort",isConstant:!0,serializedName:"x-ms-copy-action",type:{name:"String"}}},Up={parameterPath:"copyId",mapper:{serializedName:"copyid",required:!0,xmlName:"copyid",type:{name:"String"}}},jp={parameterPath:"comp",mapper:{defaultValue:"tier",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Fp={parameterPath:"tier",mapper:{serializedName:"x-ms-access-tier",required:!0,xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}}},$p={parameterPath:["options","queryRequest"],mapper:fn},Kp={parameterPath:"comp",mapper:{defaultValue:"query",isConstant:!0,serializedName:"comp",type:{name:"String"}}},um={parameterPath:"comp",mapper:{defaultValue:"tags",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Gp={parameterPath:["options","tags"],mapper:ha},_e={parameterPath:["options","transactionalContentMD5"],mapper:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}}},Pt={parameterPath:["options","transactionalContentCrc64"],mapper:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}},Xp={parameterPath:"blobType",mapper:{defaultValue:"PageBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},ym={parameterPath:"blobContentLength",mapper:{serializedName:"x-ms-blob-content-length",required:!0,xmlName:"x-ms-blob-content-length",type:{name:"Number"}}},fm={parameterPath:["options","blobSequenceNumber"],mapper:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}}},Nr={parameterPath:["options","contentType"],mapper:{defaultValue:"application/octet-stream",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},br={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},Cr={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},Pa={parameterPath:"comp",mapper:{defaultValue:"page",isConstant:!0,serializedName:"comp",type:{name:"String"}}},gm={parameterPath:"pageWrite",mapper:{defaultValue:"update",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}},va={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThanOrEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-le",xmlName:"x-ms-if-sequence-number-le",type:{name:"Number"}}},Ra={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThan"],mapper:{serializedName:"x-ms-if-sequence-number-lt",xmlName:"x-ms-if-sequence-number-lt",type:{name:"Number"}}},Sa={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-eq",xmlName:"x-ms-if-sequence-number-eq",type:{name:"Number"}}},Qp={parameterPath:"pageWrite",mapper:{defaultValue:"clear",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}},za={parameterPath:"sourceUrl",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},Wp={parameterPath:"sourceRange",mapper:{serializedName:"x-ms-source-range",required:!0,xmlName:"x-ms-source-range",type:{name:"String"}}},Ea={parameterPath:["options","sourceContentCrc64"],mapper:{serializedName:"x-ms-source-content-crc64",xmlName:"x-ms-source-content-crc64",type:{name:"ByteArray"}}},Yp={parameterPath:"range",mapper:{serializedName:"x-ms-range",required:!0,xmlName:"x-ms-range",type:{name:"String"}}},hm={parameterPath:"comp",mapper:{defaultValue:"pagelist",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Jp={parameterPath:["options","prevsnapshot"],mapper:{serializedName:"prevsnapshot",xmlName:"prevsnapshot",type:{name:"String"}}},Zp={parameterPath:["options","prevSnapshotUrl"],mapper:{serializedName:"x-ms-previous-snapshot-url",xmlName:"x-ms-previous-snapshot-url",type:{name:"String"}}},Vp={parameterPath:"sequenceNumberAction",mapper:{serializedName:"x-ms-sequence-number-action",required:!0,xmlName:"x-ms-sequence-number-action",type:{name:"Enum",allowedValues:["max","update","increment"]}}},eu={parameterPath:"comp",mapper:{defaultValue:"incrementalcopy",isConstant:!0,serializedName:"comp",type:{name:"String"}}},tu={parameterPath:"blobType",mapper:{defaultValue:"AppendBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},xm={parameterPath:"comp",mapper:{defaultValue:"appendblock",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Nm={parameterPath:["options","appendPositionAccessConditions","maxSize"],mapper:{serializedName:"x-ms-blob-condition-maxsize",xmlName:"x-ms-blob-condition-maxsize",type:{name:"Number"}}},wa={parameterPath:["options","appendPositionAccessConditions","appendPosition"],mapper:{serializedName:"x-ms-blob-condition-appendpos",xmlName:"x-ms-blob-condition-appendpos",type:{name:"Number"}}},bm={parameterPath:["options","sourceRange"],mapper:{serializedName:"x-ms-source-range",xmlName:"x-ms-source-range",type:{name:"String"}}},ru={parameterPath:"comp",mapper:{defaultValue:"seal",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Cm={parameterPath:"blobType",mapper:{defaultValue:"BlockBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},au={parameterPath:["options","copySourceBlobProperties"],mapper:{serializedName:"x-ms-copy-source-blob-properties",xmlName:"x-ms-copy-source-blob-properties",type:{name:"Boolean"}}},Pm={parameterPath:"comp",mapper:{defaultValue:"block",isConstant:!0,serializedName:"comp",type:{name:"String"}}},vm={parameterPath:"blockId",mapper:{serializedName:"blockid",required:!0,xmlName:"blockid",type:{name:"String"}}},su={parameterPath:"blocks",mapper:un},Rm={parameterPath:"comp",mapper:{defaultValue:"blocklist",isConstant:!0,serializedName:"comp",type:{name:"String"}}},nu={parameterPath:"listType",mapper:{defaultValue:"committed",serializedName:"blocklisttype",required:!0,xmlName:"blocklisttype",type:{name:"Enum",allowedValues:["committed","uncommitted","all"]}}};class Sm{constructor(e){this.client=e}setProperties(e,t){const a={blobServiceProperties:e,options:x(t||{})};return this.client.sendOperationRequest(a,iu)}getProperties(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,ou)}getStatistics(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,mu)}listContainersSegment(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,lu)}getUserDelegationKey(e,t){const a={keyInfo:e,options:x(t||{})};return this.client.sendOperationRequest(a,cu)}getAccountInfo(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,du)}submitBatch(e,t,a,s){const n={contentLength:e,multipartContentType:t,body:a,options:x(s||{})};return this.client.sendOperationRequest(n,pu)}filterBlobs(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,uu)}}const He=new ge(Re,!0),iu={path:"/",httpMethod:"PUT",responses:{202:{headersMapper:gn},default:{bodyMapper:h,headersMapper:hn}},requestBody:up,queryParameters:[hr,Me,v],urlParameters:[N],headerParameters:[qe,Ie,b,R],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:He},ou={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:fa,headersMapper:xn},default:{bodyMapper:h,headersMapper:Nn}},queryParameters:[hr,Me,v],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:He},mu={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:on,headersMapper:bn},default:{bodyMapper:h,headersMapper:Cn}},queryParameters:[hr,v,yp],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:He},lu={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:mn,headersMapper:Pn},default:{bodyMapper:h,headersMapper:vn}},queryParameters:[v,Na,ba,Qe,We,fp],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:He},cu={path:"/",httpMethod:"POST",responses:{200:{bodyMapper:cn,headersMapper:Rn},default:{bodyMapper:h,headersMapper:Sn}},requestBody:gp,queryParameters:[hr,v,hp],urlParameters:[N],headerParameters:[qe,Ie,b,R],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:He},du={path:"/",httpMethod:"GET",responses:{200:{headersMapper:zn},default:{bodyMapper:h,headersMapper:En}},queryParameters:[Me,Ca],urlParameters:[N],headerParameters:[b,z],isXML:!0,serializer:He},pu={path:"/",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:wn},default:{bodyMapper:h,headersMapper:Tn}},requestBody:$o,queryParameters:[v,Ko],urlParameters:[N],headerParameters:[qe,Ie,b,R,ie,Go],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:He},uu={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:ga,headersMapper:On},default:{bodyMapper:h,headersMapper:Bn}},queryParameters:[v,Qe,We,Xo,Qo],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:He};class Ut{constructor(e){this.client=e}create(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,yu)}getProperties(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,fu)}delete(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,gu)}setMetadata(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,hu)}getAccessPolicy(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,xu)}setAccessPolicy(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Nu)}restore(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,bu)}rename(e,t){const a={sourceContainerName:e,options:x(t||{})};return this.client.sendOperationRequest(a,Cu)}submitBatch(e,t,a,s){const n={contentLength:e,multipartContentType:t,body:a,options:x(s||{})};return this.client.sendOperationRequest(n,Pu)}filterBlobs(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,vu)}acquireLease(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Ru)}releaseLease(e,t){const a={leaseId:e,options:x(t||{})};return this.client.sendOperationRequest(a,Su)}renewLease(e,t){const a={leaseId:e,options:x(t||{})};return this.client.sendOperationRequest(a,zu)}breakLease(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Eu)}changeLease(e,t,a){const s={leaseId:e,proposedLeaseId:t,options:x(a||{})};return this.client.sendOperationRequest(s,wu)}listBlobFlatSegment(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Tu)}listBlobHierarchySegment(e,t){const a={delimiter:e,options:x(t||{})};return this.client.sendOperationRequest(a,Ou)}getAccountInfo(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Bu)}}const Y=new ge(Re,!0),yu={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:qn},default:{bodyMapper:h,headersMapper:In}},queryParameters:[v,Z],urlParameters:[N],headerParameters:[b,R,z,ce,Wo,xp,Np],isXML:!0,serializer:Y},fu={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:Mn},default:{bodyMapper:h,headersMapper:_n}},queryParameters:[v,Z],urlParameters:[N],headerParameters:[b,R,z,B],isXML:!0,serializer:Y},gu={path:"/{containerName}",httpMethod:"DELETE",responses:{202:{headersMapper:Hn},default:{bodyMapper:h,headersMapper:Dn}},queryParameters:[v,Z],urlParameters:[N],headerParameters:[b,R,z,B,w,T],isXML:!0,serializer:Y},hu={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:Ln},default:{bodyMapper:h,headersMapper:An}},queryParameters:[v,Z,Yo],urlParameters:[N],headerParameters:[b,R,z,ce,B,w],isXML:!0,serializer:Y},xu={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}},serializedName:"SignedIdentifiers",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier"},headersMapper:kn},default:{bodyMapper:h,headersMapper:Un}},queryParameters:[v,Z,Jo],urlParameters:[N],headerParameters:[b,R,z,B],isXML:!0,serializer:Y},Nu={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:jn},default:{bodyMapper:h,headersMapper:Fn}},requestBody:bp,queryParameters:[v,Z,Jo],urlParameters:[N],headerParameters:[qe,Ie,b,R,Wo,B,w,T],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:Y},bu={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:$n},default:{bodyMapper:h,headersMapper:Kn}},queryParameters:[v,Z,Zo],urlParameters:[N],headerParameters:[b,R,z,Cp,Pp],isXML:!0,serializer:Y},Cu={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:Gn},default:{bodyMapper:h,headersMapper:Xn}},queryParameters:[v,Z,vp],urlParameters:[N],headerParameters:[b,R,z,Rp,Sp],isXML:!0,serializer:Y},Pu={path:"/{containerName}",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:Qn},default:{bodyMapper:h,headersMapper:Wn}},requestBody:$o,queryParameters:[v,Ko,Z],urlParameters:[N],headerParameters:[qe,Ie,b,R,ie,Go],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:Y},vu={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:ga,headersMapper:Yn},default:{bodyMapper:h,headersMapper:Jn}},queryParameters:[v,Qe,We,Xo,Qo,Z],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:Y},Ru={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:Zn},default:{bodyMapper:h,headersMapper:Vn}},queryParameters:[v,Z,he],urlParameters:[N],headerParameters:[b,R,z,w,T,Vo,em,tm],isXML:!0,serializer:Y},Su={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ei},default:{bodyMapper:h,headersMapper:ti}},queryParameters:[v,Z,he],urlParameters:[N],headerParameters:[b,R,z,w,T,rm,mt],isXML:!0,serializer:Y},zu={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ri},default:{bodyMapper:h,headersMapper:ai}},queryParameters:[v,Z,he],urlParameters:[N],headerParameters:[b,R,z,w,T,mt,am],isXML:!0,serializer:Y},Eu={path:"/{containerName}",httpMethod:"PUT",responses:{202:{headersMapper:si},default:{bodyMapper:h,headersMapper:ni}},queryParameters:[v,Z,he],urlParameters:[N],headerParameters:[b,R,z,w,T,sm,nm],isXML:!0,serializer:Y},wu={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:ii},default:{bodyMapper:h,headersMapper:oi}},queryParameters:[v,Z,he],urlParameters:[N],headerParameters:[b,R,z,w,T,mt,im,om],isXML:!0,serializer:Y},Tu={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:dn,headersMapper:mi},default:{bodyMapper:h,headersMapper:li}},queryParameters:[v,Na,ba,Qe,We,Z,mm],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:Y},Ou={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:pn,headersMapper:ci},default:{bodyMapper:h,headersMapper:di}},queryParameters:[v,Na,ba,Qe,We,Z,mm,zp],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:Y},Bu={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:pi},default:{bodyMapper:h,headersMapper:ui}},queryParameters:[Me,Ca],urlParameters:[N],headerParameters:[b,z],isXML:!0,serializer:Y};let Ta=class{constructor(e){this.client=e}download(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,qu)}getProperties(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Iu)}delete(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Mu)}undelete(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,_u)}setExpiry(e,t){const a={expiryOptions:e,options:x(t||{})};return this.client.sendOperationRequest(a,Hu)}setHttpHeaders(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Du)}setImmutabilityPolicy(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Lu)}deleteImmutabilityPolicy(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Au)}setLegalHold(e,t){const a={legalHold:e,options:x(t||{})};return this.client.sendOperationRequest(a,ku)}setMetadata(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Uu)}acquireLease(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,ju)}releaseLease(e,t){const a={leaseId:e,options:x(t||{})};return this.client.sendOperationRequest(a,Fu)}renewLease(e,t){const a={leaseId:e,options:x(t||{})};return this.client.sendOperationRequest(a,$u)}changeLease(e,t,a){const s={leaseId:e,proposedLeaseId:t,options:x(a||{})};return this.client.sendOperationRequest(s,Ku)}breakLease(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Gu)}createSnapshot(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Xu)}startCopyFromURL(e,t){const a={copySource:e,options:x(t||{})};return this.client.sendOperationRequest(a,Qu)}copyFromURL(e,t){const a={copySource:e,options:x(t||{})};return this.client.sendOperationRequest(a,Wu)}abortCopyFromURL(e,t){const a={copyId:e,options:x(t||{})};return this.client.sendOperationRequest(a,Yu)}setTier(e,t){const a={tier:e,options:x(t||{})};return this.client.sendOperationRequest(a,Ju)}getAccountInfo(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Zu)}query(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,Vu)}getTags(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,ey)}setTags(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,ty)}};const L=new ge(Re,!0),qu={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ea},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ea},default:{bodyMapper:h,headersMapper:yi}},queryParameters:[v,Se,lt],urlParameters:[N],headerParameters:[b,R,z,B,w,T,Xt,Ep,wp,X,Q,W,M,_,q],isXML:!0,serializer:L},Iu={path:"/{containerName}/{blob}",httpMethod:"HEAD",responses:{200:{headersMapper:fi},default:{bodyMapper:h,headersMapper:gi}},queryParameters:[v,Se,lt],urlParameters:[N],headerParameters:[b,R,z,B,w,T,X,Q,W,M,_,q],isXML:!0,serializer:L},Mu={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{202:{headersMapper:hi},default:{bodyMapper:h,headersMapper:xi}},queryParameters:[v,Se,lt,Op],urlParameters:[N],headerParameters:[b,R,z,B,w,T,M,_,q,Tp],isXML:!0,serializer:L},_u={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ni},default:{bodyMapper:h,headersMapper:bi}},queryParameters:[v,Zo],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:L},Hu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ci},default:{bodyMapper:h,headersMapper:Pi}},queryParameters:[v,Bp],urlParameters:[N],headerParameters:[b,R,z,qp,Ip],isXML:!0,serializer:L},Du={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:vi},default:{bodyMapper:h,headersMapper:Ri}},queryParameters:[Me,v],urlParameters:[N],headerParameters:[b,R,z,B,w,T,M,_,q,ct,dt,pt,ut,yt,ft],isXML:!0,serializer:L},Lu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Si},default:{bodyMapper:h,headersMapper:zi}},queryParameters:[v,lm],urlParameters:[N],headerParameters:[b,R,z,T,Ye,Je],isXML:!0,serializer:L},Au={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{200:{headersMapper:Ei},default:{bodyMapper:h,headersMapper:wi}},queryParameters:[v,lm],urlParameters:[N],headerParameters:[b,R,z],isXML:!0,serializer:L},ku={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ti},default:{bodyMapper:h,headersMapper:Oi}},queryParameters:[v,Mp],urlParameters:[N],headerParameters:[b,R,z,_p],isXML:!0,serializer:L},Uu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Bi},default:{bodyMapper:h,headersMapper:qi}},queryParameters:[v,Yo],urlParameters:[N],headerParameters:[b,R,z,ce,B,w,T,X,Q,W,M,_,q,V],isXML:!0,serializer:L},ju={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Ii},default:{bodyMapper:h,headersMapper:Mi}},queryParameters:[v,he],urlParameters:[N],headerParameters:[b,R,z,w,T,Vo,em,tm,M,_,q],isXML:!0,serializer:L},Fu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:_i},default:{bodyMapper:h,headersMapper:Hi}},queryParameters:[v,he],urlParameters:[N],headerParameters:[b,R,z,w,T,rm,mt,M,_,q],isXML:!0,serializer:L},$u={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Di},default:{bodyMapper:h,headersMapper:Li}},queryParameters:[v,he],urlParameters:[N],headerParameters:[b,R,z,w,T,mt,am,M,_,q],isXML:!0,serializer:L},Ku={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ai},default:{bodyMapper:h,headersMapper:ki}},queryParameters:[v,he],urlParameters:[N],headerParameters:[b,R,z,w,T,mt,im,om,M,_,q],isXML:!0,serializer:L},Gu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Ui},default:{bodyMapper:h,headersMapper:ji}},queryParameters:[v,he],urlParameters:[N],headerParameters:[b,R,z,w,T,sm,nm,M,_,q],isXML:!0,serializer:L},Xu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Fi},default:{bodyMapper:h,headersMapper:$i}},queryParameters:[v,Hp],urlParameters:[N],headerParameters:[b,R,z,ce,B,w,T,X,Q,W,M,_,q,V],isXML:!0,serializer:L},Qu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Ki},default:{bodyMapper:h,headersMapper:Gi}},queryParameters:[v],urlParameters:[N],headerParameters:[b,R,z,ce,B,w,T,M,_,q,Ye,Je,gt,cm,ht,xt,Nt,bt,dm,xr,Ze,Dp,Ct],isXML:!0,serializer:L},Wu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Xi},default:{bodyMapper:h,headersMapper:Qi}},queryParameters:[v],urlParameters:[N],headerParameters:[b,R,z,ce,B,w,T,M,_,q,Ye,Je,V,gt,ht,xt,Nt,bt,xr,Ze,Ct,Lp,Qt,Wt,pm],isXML:!0,serializer:L},Yu={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:Wi},default:{bodyMapper:h,headersMapper:Yi}},queryParameters:[v,Ap,Up],urlParameters:[N],headerParameters:[b,R,z,B,kp],isXML:!0,serializer:L},Ju={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:ta},202:{headersMapper:ta},default:{bodyMapper:h,headersMapper:Ji}},queryParameters:[v,Se,lt,jp],urlParameters:[N],headerParameters:[b,R,z,B,q,cm,Fp],isXML:!0,serializer:L},Zu={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{headersMapper:Zi},default:{bodyMapper:h,headersMapper:Vi}},queryParameters:[Me,Ca],urlParameters:[N],headerParameters:[b,z],isXML:!0,serializer:L},Vu={path:"/{containerName}/{blob}",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ra},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ra},default:{bodyMapper:h,headersMapper:eo}},requestBody:$p,queryParameters:[v,Se,Kp],urlParameters:[N],headerParameters:[qe,Ie,b,R,B,w,T,X,Q,W,M,_,q],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:L},ey={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:ha,headersMapper:to},default:{bodyMapper:h,headersMapper:ro}},queryParameters:[v,Se,lt,um],urlParameters:[N],headerParameters:[b,R,z,B,q],isXML:!0,serializer:L},ty={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:ao},default:{bodyMapper:h,headersMapper:so}},requestBody:Gp,queryParameters:[v,lt,um],urlParameters:[N],headerParameters:[qe,Ie,b,R,B,q,_e,Pt],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:L};class ry{constructor(e){this.client=e}create(e,t,a){const s={contentLength:e,blobContentLength:t,options:x(a||{})};return this.client.sendOperationRequest(s,sy)}uploadPages(e,t,a){const s={contentLength:e,body:t,options:x(a||{})};return this.client.sendOperationRequest(s,ny)}clearPages(e,t){const a={contentLength:e,options:x(t||{})};return this.client.sendOperationRequest(a,iy)}uploadPagesFromURL(e,t,a,s,n){const i={sourceUrl:e,sourceRange:t,contentLength:a,range:s,options:x(n||{})};return this.client.sendOperationRequest(i,oy)}getPageRanges(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,my)}getPageRangesDiff(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,ly)}resize(e,t){const a={blobContentLength:e,options:x(t||{})};return this.client.sendOperationRequest(a,cy)}updateSequenceNumber(e,t){const a={sequenceNumberAction:e,options:x(t||{})};return this.client.sendOperationRequest(a,dy)}copyIncremental(e,t){const a={copySource:e,options:x(t||{})};return this.client.sendOperationRequest(a,py)}}const De=new ge(Re,!0),ay=new ge(Re,!1),sy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:no},default:{bodyMapper:h,headersMapper:io}},queryParameters:[v],urlParameters:[N],headerParameters:[b,R,z,ie,ce,B,w,T,X,Q,W,M,_,q,ct,dt,pt,ut,yt,ft,Ye,Je,V,gt,Ze,Ct,Xp,ym,fm],isXML:!0,serializer:De},ny={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:oo},default:{bodyMapper:h,headersMapper:mo}},requestBody:br,queryParameters:[v,Pa],urlParameters:[N],headerParameters:[b,R,ie,B,w,T,Xt,X,Q,W,M,_,q,V,_e,Pt,Nr,Cr,gm,va,Ra,Sa],mediaType:"binary",serializer:ay},iy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:lo},default:{bodyMapper:h,headersMapper:co}},queryParameters:[v,Pa],urlParameters:[N],headerParameters:[b,R,z,ie,B,w,T,Xt,X,Q,W,M,_,q,V,va,Ra,Sa,Qp],isXML:!0,serializer:De},oy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:po},default:{bodyMapper:h,headersMapper:uo}},queryParameters:[v,Pa],urlParameters:[N],headerParameters:[b,R,z,ie,B,w,T,X,Q,W,M,_,q,V,ht,xt,Nt,bt,Qt,Wt,gm,va,Ra,Sa,za,Wp,Ea,Yp],isXML:!0,serializer:De},my={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:xa,headersMapper:yo},default:{bodyMapper:h,headersMapper:fo}},queryParameters:[v,Qe,We,Se,hm],urlParameters:[N],headerParameters:[b,R,z,B,w,T,Xt,M,_,q],isXML:!0,serializer:De},ly={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:xa,headersMapper:go},default:{bodyMapper:h,headersMapper:ho}},queryParameters:[v,Qe,We,Se,hm,Jp],urlParameters:[N],headerParameters:[b,R,z,B,w,T,Xt,M,_,q,Zp],isXML:!0,serializer:De},cy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:xo},default:{bodyMapper:h,headersMapper:No}},queryParameters:[Me,v],urlParameters:[N],headerParameters:[b,R,z,B,w,T,X,Q,W,M,_,q,V,ym],isXML:!0,serializer:De},dy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:bo},default:{bodyMapper:h,headersMapper:Co}},queryParameters:[Me,v],urlParameters:[N],headerParameters:[b,R,z,B,w,T,M,_,q,fm,Vp],isXML:!0,serializer:De},py={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Po},default:{bodyMapper:h,headersMapper:vo}},queryParameters:[v,eu],urlParameters:[N],headerParameters:[b,R,z,w,T,M,_,q,xr],isXML:!0,serializer:De};class uy{constructor(e){this.client=e}create(e,t){const a={contentLength:e,options:x(t||{})};return this.client.sendOperationRequest(a,fy)}appendBlock(e,t,a){const s={contentLength:e,body:t,options:x(a||{})};return this.client.sendOperationRequest(s,gy)}appendBlockFromUrl(e,t,a){const s={sourceUrl:e,contentLength:t,options:x(a||{})};return this.client.sendOperationRequest(s,hy)}seal(e){const t={options:x(e||{})};return this.client.sendOperationRequest(t,xy)}}const Oa=new ge(Re,!0),yy=new ge(Re,!1),fy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Ro},default:{bodyMapper:h,headersMapper:So}},queryParameters:[v],urlParameters:[N],headerParameters:[b,R,z,ie,ce,B,w,T,X,Q,W,M,_,q,ct,dt,pt,ut,yt,ft,Ye,Je,V,Ze,Ct,tu],isXML:!0,serializer:Oa},gy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:zo},default:{bodyMapper:h,headersMapper:Eo}},requestBody:br,queryParameters:[v,xm],urlParameters:[N],headerParameters:[b,R,ie,B,w,T,X,Q,W,M,_,q,V,_e,Pt,Nr,Cr,Nm,wa],mediaType:"binary",serializer:yy},hy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:wo},default:{bodyMapper:h,headersMapper:To}},queryParameters:[v,xm],urlParameters:[N],headerParameters:[b,R,z,ie,B,w,T,X,Q,W,M,_,q,V,ht,xt,Nt,bt,Qt,Wt,_e,za,Ea,Nm,wa,bm],isXML:!0,serializer:Oa},xy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Oo},default:{bodyMapper:h,headersMapper:Bo}},queryParameters:[v,ru],urlParameters:[N],headerParameters:[b,R,z,B,w,T,M,_,wa],isXML:!0,serializer:Oa};class Ny{constructor(e){this.client=e}upload(e,t,a){const s={contentLength:e,body:t,options:x(a||{})};return this.client.sendOperationRequest(s,by)}putBlobFromUrl(e,t,a){const s={contentLength:e,copySource:t,options:x(a||{})};return this.client.sendOperationRequest(s,Cy)}stageBlock(e,t,a,s){const n={blockId:e,contentLength:t,body:a,options:x(s||{})};return this.client.sendOperationRequest(n,Py)}stageBlockFromURL(e,t,a,s){const n={blockId:e,contentLength:t,sourceUrl:a,options:x(s||{})};return this.client.sendOperationRequest(n,vy)}commitBlockList(e,t){const a={blocks:e,options:x(t||{})};return this.client.sendOperationRequest(a,Ry)}getBlockList(e,t){const a={listType:e,options:x(t||{})};return this.client.sendOperationRequest(a,Sy)}}const Pr=new ge(Re,!0),zm=new ge(Re,!1),by={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:qo},default:{bodyMapper:h,headersMapper:Io}},requestBody:br,queryParameters:[v],urlParameters:[N],headerParameters:[b,R,ie,ce,B,w,T,X,Q,W,M,_,q,ct,dt,pt,ut,yt,ft,Ye,Je,V,gt,Ze,Ct,_e,Pt,Nr,Cr,Cm],mediaType:"binary",serializer:zm},Cy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Mo},default:{bodyMapper:h,headersMapper:_o}},queryParameters:[v],urlParameters:[N],headerParameters:[b,R,z,ie,ce,B,w,T,X,Q,W,M,_,q,ct,dt,pt,ut,yt,ft,V,gt,ht,xt,Nt,bt,dm,xr,Ze,Qt,Wt,pm,_e,Cm,au],isXML:!0,serializer:Pr},Py={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Ho},default:{bodyMapper:h,headersMapper:Do}},requestBody:br,queryParameters:[v,Pm,vm],urlParameters:[N],headerParameters:[b,R,ie,B,X,Q,W,V,_e,Pt,Nr,Cr],mediaType:"binary",serializer:zm},vy={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Lo},default:{bodyMapper:h,headersMapper:Ao}},queryParameters:[v,Pm,vm],urlParameters:[N],headerParameters:[b,R,z,ie,B,X,Q,W,V,ht,xt,Nt,bt,Qt,Wt,za,Ea,bm],isXML:!0,serializer:Pr},Ry={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:ko},default:{bodyMapper:h,headersMapper:Uo}},requestBody:su,queryParameters:[v,Rm],urlParameters:[N],headerParameters:[qe,Ie,b,R,ce,B,w,T,X,Q,W,M,_,q,ct,dt,pt,ut,yt,ft,Ye,Je,V,gt,Ze,Ct,_e,Pt],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:Pr},Sy={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:yn,headersMapper:jo},default:{bodyMapper:h,headersMapper:Fo}},queryParameters:[v,Se,Rm,nu],urlParameters:[N],headerParameters:[b,R,z,B,q],isXML:!0,serializer:Pr},ue=Us("storage-blob"),Ba="2023-01-03",Dr=256*1024*1024,Lr=4e3*1024*1024,Vt=5e4,zy=8*1024*1024,aa=4*1024*1024,Ey=5,Em="https://storage.azure.com/.default",be={Parameters:{FORCE_BROWSER_NO_CACHE:"_",SIGNATURE:"sig",SNAPSHOT:"snapshot",VERSIONID:"versionid",TIMEOUT:"timeout"}},wy={HTTP_ACCEPTED:202,HTTP_CONFLICT:409,HTTP_NOT_FOUND:404,HTTP_PRECON_FAILED:412,HTTP_RANGE_NOT_SATISFIABLE:416},we={AUTHORIZATION:"Authorization",AUTHORIZATION_SCHEME:"Bearer",CONTENT_ENCODING:"Content-Encoding",CONTENT_ID:"Content-ID",CONTENT_LANGUAGE:"Content-Language",CONTENT_LENGTH:"Content-Length",CONTENT_MD5:"Content-Md5",CONTENT_TRANSFER_ENCODING:"Content-Transfer-Encoding",CONTENT_TYPE:"Content-Type",COOKIE:"Cookie",DATE:"date",IF_MATCH:"if-match",IF_MODIFIED_SINCE:"if-modified-since",IF_NONE_MATCH:"if-none-match",IF_UNMODIFIED_SINCE:"if-unmodified-since",PREFIX_FOR_STORAGE:"x-ms-",RANGE:"Range",USER_AGENT:"User-Agent",X_MS_CLIENT_REQUEST_ID:"x-ms-client-request-id",X_MS_COPY_SOURCE:"x-ms-copy-source",X_MS_DATE:"x-ms-date",X_MS_ERROR_CODE:"x-ms-error-code",X_MS_VERSION:"x-ms-version"},pe="",wm="*",ns=256,xe=`\r
`,Tm="HTTP/1.1",Ty="AES256",Oy="DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;",By=["Access-Control-Allow-Origin","Cache-Control","Content-Length","Content-Type","Date","Request-Id","traceparent","Transfer-Encoding","User-Agent","x-ms-client-request-id","x-ms-date","x-ms-error-code","x-ms-request-id","x-ms-return-client-request-id","x-ms-version","Accept-Ranges","Content-Disposition","Content-Encoding","Content-Language","Content-MD5","Content-Range","ETag","Last-Modified","Server","Vary","x-ms-content-crc64","x-ms-copy-action","x-ms-copy-completion-time","x-ms-copy-id","x-ms-copy-progress","x-ms-copy-status","x-ms-has-immutability-policy","x-ms-has-legal-hold","x-ms-lease-state","x-ms-lease-status","x-ms-range","x-ms-request-server-encrypted","x-ms-server-encrypted","x-ms-snapshot","x-ms-source-range","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","x-ms-access-tier","x-ms-access-tier-change-time","x-ms-access-tier-inferred","x-ms-account-kind","x-ms-archive-status","x-ms-blob-append-offset","x-ms-blob-cache-control","x-ms-blob-committed-block-count","x-ms-blob-condition-appendpos","x-ms-blob-condition-maxsize","x-ms-blob-content-disposition","x-ms-blob-content-encoding","x-ms-blob-content-language","x-ms-blob-content-length","x-ms-blob-content-md5","x-ms-blob-content-type","x-ms-blob-public-access","x-ms-blob-sequence-number","x-ms-blob-type","x-ms-copy-destination-snapshot","x-ms-creation-time","x-ms-default-encryption-scope","x-ms-delete-snapshots","x-ms-delete-type-permanent","x-ms-deny-encryption-scope-override","x-ms-encryption-algorithm","x-ms-if-sequence-number-eq","x-ms-if-sequence-number-le","x-ms-if-sequence-number-lt","x-ms-incremental-copy","x-ms-lease-action","x-ms-lease-break-period","x-ms-lease-duration","x-ms-lease-id","x-ms-lease-time","x-ms-page-write","x-ms-proposed-lease-id","x-ms-range-get-content-md5","x-ms-rehydrate-priority","x-ms-sequence-number-action","x-ms-sku-name","x-ms-source-content-md5","x-ms-source-if-match","x-ms-source-if-modified-since","x-ms-source-if-none-match","x-ms-source-if-unmodified-since","x-ms-tag-count","x-ms-encryption-key-sha256","x-ms-if-tags","x-ms-source-if-tags"],qy=["comp","maxresults","rscc","rscd","rsce","rscl","rsct","se","si","sip","sp","spr","sr","srt","ss","st","sv","include","marker","prefix","copyid","restype","blockid","blocklisttype","delimiter","prevsnapshot","ske","skoid","sks","skt","sktid","skv","snapshot"],Iy="BlobUsesCustomerSpecifiedEncryption",My="BlobDoesNotUseCustomerSpecifiedEncryption",_y=["10000","10001","10002","10003","10004","10100","10101","10102","10103","10104","11000","11001","11002","11003","11004","11100","11101","11102","11103","11104"];function Hy(r){const e=G.parse(r);let t=e.getPath();return t=t||"/",t=Ly(t),e.setPath(t),e.toString()}function Dy(r){let e="";if(r.search("DevelopmentStorageProxyUri=")!==-1){const t=r.split(";");for(const a of t)a.trim().startsWith("DevelopmentStorageProxyUri=")&&(e=a.trim().match("DevelopmentStorageProxyUri=(.*)")[1])}return e}function tt(r,e){const t=r.split(";");for(const a of t)if(a.trim().startsWith(e))return a.trim().match(e+"=(.*)")[1];return""}function vt(r){let e="";r.startsWith("UseDevelopmentStorage=true")&&(e=Dy(r),r=Oy);let t=tt(r,"BlobEndpoint");if(t=t.endsWith("/")?t.slice(0,-1):t,r.search("DefaultEndpointsProtocol=")!==-1&&r.search("AccountKey=")!==-1){let a="",s="",n=Buffer.from("accountKey","base64"),i="";if(s=tt(r,"AccountName"),n=Buffer.from(tt(r,"AccountKey"),"base64"),!t){a=tt(r,"DefaultEndpointsProtocol");const o=a.toLowerCase();if(o!=="https"&&o!=="http")throw new Error("Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'");if(i=tt(r,"EndpointSuffix"),!i)throw new Error("Invalid EndpointSuffix in the provided Connection String");t=`${a}://${s}.blob.${i}`}if(s){if(n.length===0)throw new Error("Invalid AccountKey in the provided Connection String")}else throw new Error("Invalid AccountName in the provided Connection String");return{kind:"AccountConnString",url:t,accountName:s,accountKey:n,proxyUri:e}}else{const a=tt(r,"SharedAccessSignature"),s=qm(t);if(t){if(!a)throw new Error("Invalid SharedAccessSignature in the provided SAS Connection String")}else throw new Error("Invalid BlobEndpoint in the provided SAS Connection String");return{kind:"SASConnString",url:t,accountName:s,accountSas:a}}}function Ly(r){return encodeURIComponent(r).replace(/%2F/g,"/").replace(/'/g,"%27").replace(/\+/g,"%20").replace(/%25/g,"%")}function re(r,e){const t=G.parse(r);let a=t.getPath();return a=a?a.endsWith("/")?`${a}${e}`:`${a}/${e}`:e,t.setPath(a),new URL(t.toString()).toString()}function Ke(r,e,t){const a=G.parse(r);return a.setQueryParameter(e,t),a.toString()}function is(r,e){return G.parse(r).getQueryParameterValue(e)}function Ay(r,e){const t=G.parse(r);return t.setHost(e),t.toString()}function Om(r){return G.parse(r).getPath()}function ky(r){return G.parse(r).getScheme()}function Uy(r){const e=G.parse(r),t=e.getPath();if(!t)throw new RangeError("Invalid url without valid path.");let a=e.getQuery()||"";return a=a.trim(),a!==""&&(a=a.startsWith("?")?a:`?${a}`),`${t}${a}`}function qa(r,e){const t=G.parse(r);let a=t.getQuery();return a?a+="&"+e:a=e,t.setQuery(a),t.toString()}function I(r,e=!0){const t=r.toISOString();return e?t.substring(0,t.length-1)+"0000Z":t.substring(0,t.length-5)+"Z"}function jy(r){return btoa(r)}function os(r,e){r.length>42&&(r=r.slice(0,42));const n=r+$y(e.toString(),48-r.length,"0");return jy(n)}async function Fy(r,e,t){return new Promise((a,s)=>{let n;const i=()=>{n!==void 0&&clearTimeout(n),s(t)};n=setTimeout(()=>{e!==void 0&&e.removeEventListener("abort",i),a()},r),e!==void 0&&e.addEventListener("abort",i)})}function $y(r,e,t=" "){return String.prototype.padStart?r.padStart(e,t):(t=t||" ",r.length>e?r:(e=e-r.length,e>t.length&&(t+=t.repeat(e/t.length)),t.slice(0,e)+r))}function Bm(r,e){return r.toLocaleLowerCase()===e.toLocaleLowerCase()}function qm(r){const e=G.parse(r);let t;try{return e.getHost().split(".")[1]==="blob"?t=e.getHost().split(".")[0]:Ia(e)?t=e.getPath().split("/")[1]:t="",t}catch{throw new Error("Unable to extract accountName with provided information.")}}function Ia(r){if(r.getHost()===void 0)return!1;const e=r.getHost()+(r.getPort()===void 0?"":":"+r.getPort());return/^.*:.*:.*$|^localhost(:[0-9]+)?$|^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])(\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])){3}(:[0-9]+)?$/.test(e)||r.getPort()!==void 0&&_y.includes(r.getPort())}function je(r){if(r===void 0)return;const e=[];for(const t in r)if(Object.prototype.hasOwnProperty.call(r,t)){const a=r[t];e.push(`${encodeURIComponent(t)}=${encodeURIComponent(a)}`)}return e.join("&")}function Ky(r){if(r===void 0)return;const e={blobTagSet:[]};for(const t in r)if(Object.prototype.hasOwnProperty.call(r,t)){const a=r[t];e.blobTagSet.push({key:t,value:a})}return e}function It(r){if(r===void 0)return;const e={};for(const t of r.blobTagSet)e[t.key]=t.value;return e}function ms(r){if(r!==void 0)switch(r.kind){case"csv":return{format:{type:"delimited",delimitedTextConfiguration:{columnSeparator:r.columnSeparator||",",fieldQuote:r.fieldQuote||"",recordSeparator:r.recordSeparator,escapeChar:r.escapeCharacter||"",headersPresent:r.hasHeaders||!1}}};case"json":return{format:{type:"json",jsonTextConfiguration:{recordSeparator:r.recordSeparator}}};case"arrow":return{format:{type:"arrow",arrowConfiguration:{schema:r.schema}}};case"parquet":return{format:{type:"parquet"}};default:throw Error("Invalid BlobQueryTextConfiguration.")}}function dr(r){if(!r||"policy-id"in r)return;const e=[];for(const t in r){const a=t.split("_"),s="or-";a[0].startsWith(s)&&(a[0]=a[0].substring(s.length));const n={ruleId:a[1],replicationStatus:r[t]},i=e.findIndex(o=>o.policyId===a[0]);i>-1?e[i].rules.push(n):e.push({policyId:a[0],rules:[n]})}return e}function Im(r,e){return r.credential=e,r}function jt(r){return r?r.scheme+" "+r.value:void 0}function nt(r){return r.encoded?decodeURIComponent(r.content):r.content}function Gy(r){return Object.assign(Object.assign({},r),{segment:{blobItems:r.segment.blobItems.map(e=>Object.assign(Object.assign({},e),{name:nt(e.name)}))}})}function Xy(r){var e;return Object.assign(Object.assign({},r),{segment:{blobPrefixes:(e=r.segment.blobPrefixes)===null||e===void 0?void 0:e.map(t=>Object.assign(Object.assign({},t),{name:nt(t.name)})),blobItems:r.segment.blobItems.map(t=>Object.assign(Object.assign({},t),{name:nt(t.name)}))}})}function*ls(r){let e=[],t=[];r.pageRange&&(e=r.pageRange),r.clearRange&&(t=r.clearRange);let a=0,s=0;for(;a<e.length&&s<t.length;)e[a].start<t[s].start?(yield{start:e[a].start,end:e[a].end,isClear:!1},++a):(yield{start:t[s].start,end:t[s].end,isClear:!0},++s);for(;a<e.length;++a)yield{start:e[a].start,end:e[a].end,isClear:!1};for(;s<t.length;++s)yield{start:t[s].start,end:t[s].end,isClear:!0}}function er(r){const e=r.split("/");for(let t=0;t<e.length;t++)e[t]=encodeURIComponent(e[t]);return e.join("/")}class Qy extends F{constructor(e,t){super(e,t)}async sendRequest(e){return(e.method.toUpperCase()==="GET"||e.method.toUpperCase()==="HEAD")&&(e.url=Ke(e.url,be.Parameters.FORCE_BROWSER_NO_CACHE,new Date().getTime().toString())),e.headers.remove(we.COOKIE),e.headers.remove(we.CONTENT_LENGTH),this._nextPolicy.sendRequest(e)}}class Wy{create(e,t){return new Qy(e,t)}}var Ft;(function(r){r[r.EXPONENTIAL=0]="EXPONENTIAL",r[r.FIXED=1]="FIXED"})(Ft||(Ft={}));const Ee={maxRetryDelayInMs:120*1e3,maxTries:4,retryDelayInMs:4*1e3,retryPolicyType:Ft.EXPONENTIAL,secondaryHost:"",tryTimeoutInMs:void 0},Yy=new Gt("The operation was aborted.");class Jy extends F{constructor(e,t,a=Ee){super(e,t),this.retryOptions={retryPolicyType:a.retryPolicyType?a.retryPolicyType:Ee.retryPolicyType,maxTries:a.maxTries&&a.maxTries>=1?Math.floor(a.maxTries):Ee.maxTries,tryTimeoutInMs:a.tryTimeoutInMs&&a.tryTimeoutInMs>=0?a.tryTimeoutInMs:Ee.tryTimeoutInMs,retryDelayInMs:a.retryDelayInMs&&a.retryDelayInMs>=0?Math.min(a.retryDelayInMs,a.maxRetryDelayInMs?a.maxRetryDelayInMs:Ee.maxRetryDelayInMs):Ee.retryDelayInMs,maxRetryDelayInMs:a.maxRetryDelayInMs&&a.maxRetryDelayInMs>=0?a.maxRetryDelayInMs:Ee.maxRetryDelayInMs,secondaryHost:a.secondaryHost?a.secondaryHost:Ee.secondaryHost}}async sendRequest(e){return this.attemptSendRequest(e,!1,1)}async attemptSendRequest(e,t,a){const s=e.clone(),n=t||!this.retryOptions.secondaryHost||!(e.method==="GET"||e.method==="HEAD"||e.method==="OPTIONS")||a%2===1;n||(s.url=Ay(s.url,this.retryOptions.secondaryHost)),this.retryOptions.tryTimeoutInMs&&(s.url=Ke(s.url,be.Parameters.TIMEOUT,Math.floor(this.retryOptions.tryTimeoutInMs/1e3).toString()));let i;try{if(ue.info(`RetryPolicy: =====> Try=${a} ${n?"Primary":"Secondary"}`),i=await this._nextPolicy.sendRequest(s),!this.shouldRetry(n,a,i))return i;t=t||!n&&i.status===404}catch(o){if(ue.error(`RetryPolicy: Caught error, message: ${o.message}, code: ${o.code}`),!this.shouldRetry(n,a,i,o))throw o}return await this.delay(n,a,e.abortSignal),this.attemptSendRequest(e,t,++a)}shouldRetry(e,t,a,s){if(t>=this.retryOptions.maxTries)return ue.info(`RetryPolicy: Attempt(s) ${t} >= maxTries ${this.retryOptions.maxTries}, no further try.`),!1;const n=["ETIMEDOUT","ESOCKETTIMEDOUT","ECONNREFUSED","ECONNRESET","ENOENT","ENOTFOUND","TIMEOUT","EPIPE","REQUEST_SEND_ERROR"];if(s){for(const i of n)if(s.name.toUpperCase().includes(i)||s.message.toUpperCase().includes(i)||s.code&&s.code.toString().toUpperCase()===i)return ue.info(`RetryPolicy: Network error ${i} found, will retry.`),!0}if(a||s){const i=a?a.status:s?s.statusCode:0;if(!e&&i===404)return ue.info("RetryPolicy: Secondary access with 404, will retry."),!0;if(i===503||i===500)return ue.info(`RetryPolicy: Will retry for status code ${i}.`),!0}return(s==null?void 0:s.code)==="PARSE_ERROR"&&(s!=null&&s.message.startsWith('Error "Error: Unclosed root tag'))?(ue.info("RetryPolicy: Incomplete XML response likely due to service timeout, will retry."),!0):!1}async delay(e,t,a){let s=0;if(e)switch(this.retryOptions.retryPolicyType){case Ft.EXPONENTIAL:s=Math.min((Math.pow(2,t-1)-1)*this.retryOptions.retryDelayInMs,this.retryOptions.maxRetryDelayInMs);break;case Ft.FIXED:s=this.retryOptions.retryDelayInMs;break}else s=Math.random()*1e3;return ue.info(`RetryPolicy: Delay for ${s}ms`),Fy(s,a,Yy)}}class Zy{constructor(e){this.retryOptions=e}create(e,t){return new Jy(e,t,this.retryOptions)}}class Vy extends F{sendRequest(e){return this._nextPolicy.sendRequest(this.signRequest(e))}signRequest(e){return e}}class ef extends Vy{constructor(e,t){super(e,t)}}class tf{create(e,t){throw new Error("Method should be implemented in children classes.")}}class D extends tf{create(e,t){return new ef(e,t)}}class rf extends F{constructor(e,t,a){super(e,t),this.telemetry=a}async sendRequest(e){return this._nextPolicy.sendRequest(e)}}class af{constructor(e){const t=[];this.telemetryString=t.join(" ")}create(e,t){return new rf(e,t,this.telemetryString)}}const sf=new Ts;function nf(){return sf}const Ar={DefaultScope:"/.default",HeaderConstants:{AUTHORIZATION:"authorization"}},of={forcedRefreshWindowInMs:1e3,retryIntervalInMs:3e3,refreshWindowInMs:1e3*60*2};async function mf(r,e,t){async function a(){if(Date.now()<t)try{return await r()}catch{return null}else{const n=await r();if(n===null)throw new Error("Failed to refresh access token.");return n}}let s=await a();for(;s===null;)await Xe(e),s=await a();return s}function cs(r,e,t){let a=null,s=null;const n=Object.assign(Object.assign({},of),t),i={get isRefreshing(){return a!==null},get shouldRefresh(){var m;return!i.isRefreshing&&((m=s==null?void 0:s.expiresOnTimestamp)!==null&&m!==void 0?m:0)-n.refreshWindowInMs<Date.now()},get mustRefresh(){return s===null||s.expiresOnTimestamp-n.forcedRefreshWindowInMs<Date.now()}};function o(m){var l;return i.isRefreshing||(a=mf(()=>r.getToken(e,m),n.retryIntervalInMs,(l=s==null?void 0:s.expiresOnTimestamp)!==null&&l!==void 0?l:Date.now()).then(p=>(a=null,s=p,s)).catch(p=>{throw a=null,s=null,p})),a}return async m=>i.mustRefresh?o(m):(i.shouldRefresh&&o(m),s)}function lf(r){const e=r.headers.get("WWW-Authenticate");if(r.status===401&&e)return e}function cf(r){return`${r.slice(7).trim()} `.split(" ").filter(s=>s).map(s=>(([n,i])=>({[n]:i}))(s.trim().split("="))).reduce((s,n)=>Object.assign(Object.assign({},s),n),{})}function df(r,e){let t=cs(r,e);class a extends F{constructor(n,i){super(n,i)}async sendRequest(n){if(!n.url.toLowerCase().startsWith("https://"))throw new Error("Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.");const o=(await t({abortSignal:n.abortSignal,tracingOptions:{tracingContext:n.tracingContext}})).token;n.headers.set(Ar.HeaderConstants.AUTHORIZATION,`Bearer ${o}`);const m=await this._nextPolicy.sendRequest(n);if((m==null?void 0:m.status)===401){const l=lf(m);if(l){const c=cf(l),p=c.resource_id+Ar.DefaultScope,C=G.parse(c.authorization_uri).getPath().split("/")[1],f=cs(r,p),S=(await f({abortSignal:n.abortSignal,tracingOptions:{tracingContext:n.tracingContext},tenantId:C})).token;return t=f,n.headers.set(Ar.HeaderConstants.AUTHORIZATION,`Bearer ${S}`),this._nextPolicy.sendRequest(n)}}return m}}return{create:(s,n)=>new a(s,n)}}function Ve(r){if(!r||typeof r!="object")return!1;const e=r;return Array.isArray(e.factories)&&typeof e.options=="object"&&typeof e.toServiceClientOptions=="function"}class Mm{constructor(e,t={}){this.factories=e,this.options=Object.assign(Object.assign({},t),{httpClient:t.httpClient||nf()})}toServiceClientOptions(){return{httpClient:this.options.httpClient,requestPolicyFactories:this.factories}}}function j(r,e={}){var t;r===void 0&&(r=new D);const a=new af(e.userAgentOptions),s=[Id({userAgent:a.telemetryString}),nc(e.keepAliveOptions),a,Qs(),new Wy,new Zy(e.retryOptions),sa(void 0,{xmlCharKey:"#"}),Ks({logger:ue.info,allowedHeaderNames:By,allowedQueryParameters:qy})];return s.push(me(r)?Im(df(r,(t=e.audience)!==null&&t!==void 0?t:Em),r):r),new Mm(s,e)}class vr{}const pf="azure-storage-blob",uf="12.15.0";class Ma extends _d{constructor(e,t){if(e===void 0)throw new Error("'url' cannot be null");if(t||(t={}),!t.userAgent){const a=ma();t.userAgent=`${pf}/${uf} ${a}`}super(void 0,t),this.requestContentType="application/json; charset=utf-8",this.baseUri=t.endpoint||"{url}",this.url=e,this.version=t.version||"2023-01-03"}}class _a{constructor(e,t){this.url=Hy(e),this.accountName=qm(e),this.pipeline=t,this.storageClientContext=new Ma(this.url,t.toServiceClientOptions()),this.isHttps=Bm(ky(this.url)||"","https"),this.credential=new D;for(const s of this.pipeline.factories)s instanceof D?this.credential=s:me(s.credential)&&(this.credential=s.credential);const a=this.storageClientContext;a.requestContentType=void 0}}const g=sn({packagePrefix:"Azure.Storage.Blob",namespace:"Microsoft.Storage"});function P(r){var e,t;return{spanOptions:(e=r==null?void 0:r.tracingOptions)===null||e===void 0?void 0:e.spanOptions,tracingContext:(t=r==null?void 0:r.tracingOptions)===null||t===void 0?void 0:t.tracingContext}}class Ce{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new Ce;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"t":t.tag=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission: ${a}`)}return t}static from(e){const t=new Ce;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class Pe{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1,this.filterByTags=!1}static parse(e){const t=new Pe;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"l":t.list=!0;break;case"t":t.tag=!0;break;case"x":t.deleteVersion=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;case"f":t.filterByTags=!0;break;default:throw new RangeError(`Invalid permission ${a}`)}return t}static from(e){const t=new Pe;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.list&&(t.list=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),e.filterByTags&&(t.filterByTags=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.list&&e.push("l"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),this.filterByTags&&e.push("f"),e.join("")}}class yf{}function ve(r){return r.end?`${r.start}-${r.end}`:r.start}var ds;(function(r){r.Https="https",r.HttpsAndHttp="https,http"})(ds||(ds={}));class et{constructor(e,t,a,s,n,i,o,m,l,c,p,d,y,C,f,S,O,A,de,k){this.version=e,this.signature=t,a!==void 0&&typeof a!="string"?(this.permissions=a.permissions,this.services=a.services,this.resourceTypes=a.resourceTypes,this.protocol=a.protocol,this.startsOn=a.startsOn,this.expiresOn=a.expiresOn,this.ipRangeInner=a.ipRange,this.identifier=a.identifier,this.encryptionScope=a.encryptionScope,this.resource=a.resource,this.cacheControl=a.cacheControl,this.contentDisposition=a.contentDisposition,this.contentEncoding=a.contentEncoding,this.contentLanguage=a.contentLanguage,this.contentType=a.contentType,a.userDelegationKey&&(this.signedOid=a.userDelegationKey.signedObjectId,this.signedTenantId=a.userDelegationKey.signedTenantId,this.signedStartsOn=a.userDelegationKey.signedStartsOn,this.signedExpiresOn=a.userDelegationKey.signedExpiresOn,this.signedService=a.userDelegationKey.signedService,this.signedVersion=a.userDelegationKey.signedVersion,this.preauthorizedAgentObjectId=a.preauthorizedAgentObjectId,this.correlationId=a.correlationId)):(this.services=s,this.resourceTypes=n,this.expiresOn=m,this.permissions=a,this.protocol=i,this.startsOn=o,this.ipRangeInner=l,this.encryptionScope=k,this.identifier=c,this.resource=p,this.cacheControl=d,this.contentDisposition=y,this.contentEncoding=C,this.contentLanguage=f,this.contentType=S,O&&(this.signedOid=O.signedObjectId,this.signedTenantId=O.signedTenantId,this.signedStartsOn=O.signedStartsOn,this.signedExpiresOn=O.signedExpiresOn,this.signedService=O.signedService,this.signedVersion=O.signedVersion,this.preauthorizedAgentObjectId=A,this.correlationId=de))}get ipRange(){if(this.ipRangeInner)return{end:this.ipRangeInner.end,start:this.ipRangeInner.start}}toString(){const e=["sv","ss","srt","spr","st","se","sip","si","ses","skoid","sktid","skt","ske","sks","skv","sr","sp","sig","rscc","rscd","rsce","rscl","rsct","saoid","scid"],t=[];for(const a of e)switch(a){case"sv":this.tryAppendQueryParameter(t,a,this.version);break;case"ss":this.tryAppendQueryParameter(t,a,this.services);break;case"srt":this.tryAppendQueryParameter(t,a,this.resourceTypes);break;case"spr":this.tryAppendQueryParameter(t,a,this.protocol);break;case"st":this.tryAppendQueryParameter(t,a,this.startsOn?I(this.startsOn,!1):void 0);break;case"se":this.tryAppendQueryParameter(t,a,this.expiresOn?I(this.expiresOn,!1):void 0);break;case"sip":this.tryAppendQueryParameter(t,a,this.ipRange?ve(this.ipRange):void 0);break;case"si":this.tryAppendQueryParameter(t,a,this.identifier);break;case"ses":this.tryAppendQueryParameter(t,a,this.encryptionScope);break;case"skoid":this.tryAppendQueryParameter(t,a,this.signedOid);break;case"sktid":this.tryAppendQueryParameter(t,a,this.signedTenantId);break;case"skt":this.tryAppendQueryParameter(t,a,this.signedStartsOn?I(this.signedStartsOn,!1):void 0);break;case"ske":this.tryAppendQueryParameter(t,a,this.signedExpiresOn?I(this.signedExpiresOn,!1):void 0);break;case"sks":this.tryAppendQueryParameter(t,a,this.signedService);break;case"skv":this.tryAppendQueryParameter(t,a,this.signedVersion);break;case"sr":this.tryAppendQueryParameter(t,a,this.resource);break;case"sp":this.tryAppendQueryParameter(t,a,this.permissions);break;case"sig":this.tryAppendQueryParameter(t,a,this.signature);break;case"rscc":this.tryAppendQueryParameter(t,a,this.cacheControl);break;case"rscd":this.tryAppendQueryParameter(t,a,this.contentDisposition);break;case"rsce":this.tryAppendQueryParameter(t,a,this.contentEncoding);break;case"rscl":this.tryAppendQueryParameter(t,a,this.contentLanguage);break;case"rsct":this.tryAppendQueryParameter(t,a,this.contentType);break;case"saoid":this.tryAppendQueryParameter(t,a,this.preauthorizedAgentObjectId);break;case"scid":this.tryAppendQueryParameter(t,a,this.correlationId);break}return t.join("&")}tryAppendQueryParameter(e,t,a){a&&(t=encodeURIComponent(t),a=encodeURIComponent(a),t.length>0&&a.length>0&&e.push(`${t}=${a}`))}}function _m(r,e,t){const a=r.version?r.version:Ba,s=e instanceof vr?e:void 0;let n;if(s===void 0&&t!==void 0&&(n=new yf(t,e)),s===void 0&&n===void 0)throw TypeError("Invalid sharedKeyCredential, userDelegationKey or accountName.");if(a>="2020-12-06")return s!==void 0?hf(r,s):bf(r,n);if(a>="2018-11-09")return s!==void 0?gf(r,s):a>="2020-02-10"?Nf(r,n):xf(r,n);if(a>="2015-04-05"){if(s!==void 0)return ff(r,s);throw new RangeError("'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.")}throw new RangeError("'version' must be >= '2015-04-05'.")}function ff(r,e){if(r=St(r),!r.identifier&&!(r.permissions&&r.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let t="c";r.blobName&&(t="b");let a;r.permissions&&(r.blobName?a=Ce.parse(r.permissions.toString()).toString():a=Pe.parse(r.permissions.toString()).toString());const s=[a||"",r.startsOn?I(r.startsOn,!1):"",r.expiresOn?I(r.expiresOn,!1):"",Rt(e.accountName,r.containerName,r.blobName),r.identifier,r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",r.version,r.cacheControl?r.cacheControl:"",r.contentDisposition?r.contentDisposition:"",r.contentEncoding?r.contentEncoding:"",r.contentLanguage?r.contentLanguage:"",r.contentType?r.contentType:""].join(`
`),n=e.computeHMACSHA256(s);return new et(r.version,n,a,void 0,void 0,r.protocol,r.startsOn,r.expiresOn,r.ipRange,r.identifier,t,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType)}function gf(r,e){if(r=St(r),!r.identifier&&!(r.permissions&&r.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let t="c",a=r.snapshotTime;r.blobName&&(t="b",r.snapshotTime?t="bs":r.versionId&&(t="bv",a=r.versionId));let s;r.permissions&&(r.blobName?s=Ce.parse(r.permissions.toString()).toString():s=Pe.parse(r.permissions.toString()).toString());const n=[s||"",r.startsOn?I(r.startsOn,!1):"",r.expiresOn?I(r.expiresOn,!1):"",Rt(e.accountName,r.containerName,r.blobName),r.identifier,r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",r.version,t,a,r.cacheControl?r.cacheControl:"",r.contentDisposition?r.contentDisposition:"",r.contentEncoding?r.contentEncoding:"",r.contentLanguage?r.contentLanguage:"",r.contentType?r.contentType:""].join(`
`),i=e.computeHMACSHA256(n);return new et(r.version,i,s,void 0,void 0,r.protocol,r.startsOn,r.expiresOn,r.ipRange,r.identifier,t,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType)}function hf(r,e){if(r=St(r),!r.identifier&&!(r.permissions&&r.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let t="c",a=r.snapshotTime;r.blobName&&(t="b",r.snapshotTime?t="bs":r.versionId&&(t="bv",a=r.versionId));let s;r.permissions&&(r.blobName?s=Ce.parse(r.permissions.toString()).toString():s=Pe.parse(r.permissions.toString()).toString());const n=[s||"",r.startsOn?I(r.startsOn,!1):"",r.expiresOn?I(r.expiresOn,!1):"",Rt(e.accountName,r.containerName,r.blobName),r.identifier,r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",r.version,t,a,r.encryptionScope,r.cacheControl?r.cacheControl:"",r.contentDisposition?r.contentDisposition:"",r.contentEncoding?r.contentEncoding:"",r.contentLanguage?r.contentLanguage:"",r.contentType?r.contentType:""].join(`
`),i=e.computeHMACSHA256(n);return new et(r.version,i,s,void 0,void 0,r.protocol,r.startsOn,r.expiresOn,r.ipRange,r.identifier,t,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType,void 0,void 0,void 0,r.encryptionScope)}function xf(r,e){if(r=St(r),!r.permissions||!r.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let t="c",a=r.snapshotTime;r.blobName&&(t="b",r.snapshotTime?t="bs":r.versionId&&(t="bv",a=r.versionId));let s;r.permissions&&(r.blobName?s=Ce.parse(r.permissions.toString()).toString():s=Pe.parse(r.permissions.toString()).toString());const n=[s||"",r.startsOn?I(r.startsOn,!1):"",r.expiresOn?I(r.expiresOn,!1):"",Rt(e.accountName,r.containerName,r.blobName),e.userDelegationKey.signedObjectId,e.userDelegationKey.signedTenantId,e.userDelegationKey.signedStartsOn?I(e.userDelegationKey.signedStartsOn,!1):"",e.userDelegationKey.signedExpiresOn?I(e.userDelegationKey.signedExpiresOn,!1):"",e.userDelegationKey.signedService,e.userDelegationKey.signedVersion,r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",r.version,t,a,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType].join(`
`),i=e.computeHMACSHA256(n);return new et(r.version,i,s,void 0,void 0,r.protocol,r.startsOn,r.expiresOn,r.ipRange,r.identifier,t,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType,e.userDelegationKey)}function Nf(r,e){if(r=St(r),!r.permissions||!r.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let t="c",a=r.snapshotTime;r.blobName&&(t="b",r.snapshotTime?t="bs":r.versionId&&(t="bv",a=r.versionId));let s;r.permissions&&(r.blobName?s=Ce.parse(r.permissions.toString()).toString():s=Pe.parse(r.permissions.toString()).toString());const n=[s||"",r.startsOn?I(r.startsOn,!1):"",r.expiresOn?I(r.expiresOn,!1):"",Rt(e.accountName,r.containerName,r.blobName),e.userDelegationKey.signedObjectId,e.userDelegationKey.signedTenantId,e.userDelegationKey.signedStartsOn?I(e.userDelegationKey.signedStartsOn,!1):"",e.userDelegationKey.signedExpiresOn?I(e.userDelegationKey.signedExpiresOn,!1):"",e.userDelegationKey.signedService,e.userDelegationKey.signedVersion,r.preauthorizedAgentObjectId,void 0,r.correlationId,r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",r.version,t,a,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType].join(`
`),i=e.computeHMACSHA256(n);return new et(r.version,i,s,void 0,void 0,r.protocol,r.startsOn,r.expiresOn,r.ipRange,r.identifier,t,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType,e.userDelegationKey,r.preauthorizedAgentObjectId,r.correlationId)}function bf(r,e){if(r=St(r),!r.permissions||!r.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let t="c",a=r.snapshotTime;r.blobName&&(t="b",r.snapshotTime?t="bs":r.versionId&&(t="bv",a=r.versionId));let s;r.permissions&&(r.blobName?s=Ce.parse(r.permissions.toString()).toString():s=Pe.parse(r.permissions.toString()).toString());const n=[s||"",r.startsOn?I(r.startsOn,!1):"",r.expiresOn?I(r.expiresOn,!1):"",Rt(e.accountName,r.containerName,r.blobName),e.userDelegationKey.signedObjectId,e.userDelegationKey.signedTenantId,e.userDelegationKey.signedStartsOn?I(e.userDelegationKey.signedStartsOn,!1):"",e.userDelegationKey.signedExpiresOn?I(e.userDelegationKey.signedExpiresOn,!1):"",e.userDelegationKey.signedService,e.userDelegationKey.signedVersion,r.preauthorizedAgentObjectId,void 0,r.correlationId,r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",r.version,t,a,r.encryptionScope,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType].join(`
`),i=e.computeHMACSHA256(n);return new et(r.version,i,s,void 0,void 0,r.protocol,r.startsOn,r.expiresOn,r.ipRange,r.identifier,t,r.cacheControl,r.contentDisposition,r.contentEncoding,r.contentLanguage,r.contentType,e.userDelegationKey,r.preauthorizedAgentObjectId,r.correlationId,r.encryptionScope)}function Rt(r,e,t){const a=[`/blob/${r}/${e}`];return t&&a.push(`/${t}`),a.join("")}function St(r){const e=r.version?r.version:Ba;if(r.snapshotTime&&e<"2018-11-09")throw RangeError("'version' must be >= '2018-11-09' when providing 'snapshotTime'.");if(r.blobName===void 0&&r.snapshotTime)throw RangeError("Must provide 'blobName' when providing 'snapshotTime'.");if(r.versionId&&e<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'versionId'.");if(r.blobName===void 0&&r.versionId)throw RangeError("Must provide 'blobName' when providing 'versionId'.");if(r.permissions&&r.permissions.setImmutabilityPolicy&&e<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(r.permissions&&r.permissions.deleteVersion&&e<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'x' permission.");if(r.permissions&&r.permissions.permanentDelete&&e<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'y' permission.");if(r.permissions&&r.permissions.tag&&e<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when providing 't' permission.");if(e<"2020-02-10"&&r.permissions&&(r.permissions.move||r.permissions.execute))throw RangeError("'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.");if(e<"2021-04-10"&&r.permissions&&r.permissions.filterByTags)throw RangeError("'version' must be >= '2021-04-10' when providing the 'f' permission.");if(e<"2020-02-10"&&(r.preauthorizedAgentObjectId||r.correlationId))throw RangeError("'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.");if(r.encryptionScope&&e<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");return r.version=e,r}class Hm{constructor(e,t){const a=new Ma(e.url,e.pipeline.toServiceClientOptions());this._url=e.url,e.name===void 0?(this._isContainer=!0,this._containerOrBlobOperation=new Ut(a)):(this._isContainer=!1,this._containerOrBlobOperation=new Ta(a)),t||(t=$e()),this._leaseId=t}get leaseId(){return this._leaseId}get url(){return this._url}async acquireLease(e,t={}){var a,s,n,i,o,m;const{span:l,updatedOptions:c}=g("BlobLeaseClient-acquireLease",t);if(this._isContainer&&(!((a=t.conditions)===null||a===void 0)&&a.ifMatch&&((s=t.conditions)===null||s===void 0?void 0:s.ifMatch)!==pe||!((n=t.conditions)===null||n===void 0)&&n.ifNoneMatch&&((i=t.conditions)===null||i===void 0?void 0:i.ifNoneMatch)!==pe||!((o=t.conditions)===null||o===void 0)&&o.tagConditions))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{return await this._containerOrBlobOperation.acquireLease(Object.assign({abortSignal:t.abortSignal,duration:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(m=t.conditions)===null||m===void 0?void 0:m.tagConditions}),proposedLeaseId:this._leaseId},P(c)))}catch(p){throw l.setStatus({code:u.ERROR,message:p.message}),p}finally{l.end()}}async changeLease(e,t={}){var a,s,n,i,o,m;const{span:l,updatedOptions:c}=g("BlobLeaseClient-changeLease",t);if(this._isContainer&&(!((a=t.conditions)===null||a===void 0)&&a.ifMatch&&((s=t.conditions)===null||s===void 0?void 0:s.ifMatch)!==pe||!((n=t.conditions)===null||n===void 0)&&n.ifNoneMatch&&((i=t.conditions)===null||i===void 0?void 0:i.ifNoneMatch)!==pe||!((o=t.conditions)===null||o===void 0)&&o.tagConditions))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{const p=await this._containerOrBlobOperation.changeLease(this._leaseId,e,Object.assign({abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(m=t.conditions)===null||m===void 0?void 0:m.tagConditions})},P(c)));return this._leaseId=e,p}catch(p){throw l.setStatus({code:u.ERROR,message:p.message}),p}finally{l.end()}}async releaseLease(e={}){var t,a,s,n,i,o;const{span:m,updatedOptions:l}=g("BlobLeaseClient-releaseLease",e);if(this._isContainer&&(!((t=e.conditions)===null||t===void 0)&&t.ifMatch&&((a=e.conditions)===null||a===void 0?void 0:a.ifMatch)!==pe||!((s=e.conditions)===null||s===void 0)&&s.ifNoneMatch&&((n=e.conditions)===null||n===void 0?void 0:n.ifNoneMatch)!==pe||!((i=e.conditions)===null||i===void 0)&&i.tagConditions))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{return await this._containerOrBlobOperation.releaseLease(this._leaseId,Object.assign({abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(o=e.conditions)===null||o===void 0?void 0:o.tagConditions})},P(l)))}catch(c){throw m.setStatus({code:u.ERROR,message:c.message}),c}finally{m.end()}}async renewLease(e={}){var t,a,s,n,i,o;const{span:m,updatedOptions:l}=g("BlobLeaseClient-renewLease",e);if(this._isContainer&&(!((t=e.conditions)===null||t===void 0)&&t.ifMatch&&((a=e.conditions)===null||a===void 0?void 0:a.ifMatch)!==pe||!((s=e.conditions)===null||s===void 0)&&s.ifNoneMatch&&((n=e.conditions)===null||n===void 0?void 0:n.ifNoneMatch)!==pe||!((i=e.conditions)===null||i===void 0)&&i.tagConditions))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{return await this._containerOrBlobOperation.renewLease(this._leaseId,Object.assign({abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(o=e.conditions)===null||o===void 0?void 0:o.tagConditions})},P(l)))}catch(c){throw m.setStatus({code:u.ERROR,message:c.message}),c}finally{m.end()}}async breakLease(e,t={}){var a,s,n,i,o,m;const{span:l,updatedOptions:c}=g("BlobLeaseClient-breakLease",t);if(this._isContainer&&(!((a=t.conditions)===null||a===void 0)&&a.ifMatch&&((s=t.conditions)===null||s===void 0?void 0:s.ifMatch)!==pe||!((n=t.conditions)===null||n===void 0)&&n.ifNoneMatch&&((i=t.conditions)===null||i===void 0?void 0:i.ifNoneMatch)!==pe||!((o=t.conditions)===null||o===void 0)&&o.tagConditions))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");try{const p=Object.assign({abortSignal:t.abortSignal,breakPeriod:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(m=t.conditions)===null||m===void 0?void 0:m.tagConditions})},P(c));return await this._containerOrBlobOperation.breakLease(p)}catch(p){throw l.setStatus({code:u.ERROR,message:p.message}),p}finally{l.end()}}}const Cf=1;class Pf{constructor(e,t={}){this.originalResponse=e}get acceptRanges(){return this.originalResponse.acceptRanges}get cacheControl(){return this.originalResponse.cacheControl}get contentDisposition(){return this.originalResponse.contentDisposition}get contentEncoding(){return this.originalResponse.contentEncoding}get contentLanguage(){return this.originalResponse.contentLanguage}get blobSequenceNumber(){return this.originalResponse.blobSequenceNumber}get blobType(){return this.originalResponse.blobType}get contentLength(){return this.originalResponse.contentLength}get contentMD5(){return this.originalResponse.contentMD5}get contentRange(){return this.originalResponse.contentRange}get contentType(){return this.originalResponse.contentType}get copyCompletedOn(){}get copyId(){return this.originalResponse.copyId}get copyProgress(){return this.originalResponse.copyProgress}get copySource(){return this.originalResponse.copySource}get copyStatus(){return this.originalResponse.copyStatus}get copyStatusDescription(){return this.originalResponse.copyStatusDescription}get leaseDuration(){return this.originalResponse.leaseDuration}get leaseState(){return this.originalResponse.leaseState}get leaseStatus(){return this.originalResponse.leaseStatus}get date(){return this.originalResponse.date}get blobCommittedBlockCount(){return this.originalResponse.blobCommittedBlockCount}get etag(){return this.originalResponse.etag}get errorCode(){return this.originalResponse.errorCode}get isServerEncrypted(){return this.originalResponse.isServerEncrypted}get blobContentMD5(){return this.originalResponse.blobContentMD5}get lastModified(){return this.originalResponse.lastModified}get metadata(){return this.originalResponse.metadata}get requestId(){return this.originalResponse.requestId}get clientRequestId(){return this.originalResponse.clientRequestId}get version(){return this.originalResponse.version}get encryptionKeySha256(){return this.originalResponse.encryptionKeySha256}get contentCrc64(){return this.originalResponse.contentCrc64}get blobBody(){throw Error("Quick query in browser is not supported yet.")}get readableStreamBody(){}get _response(){return this.originalResponse._response}}var ps;(function(r){r.Hot="Hot",r.Cool="Cool",r.Cold="Cold",r.Archive="Archive"})(ps||(ps={}));var us;(function(r){r.P4="P4",r.P6="P6",r.P10="P10",r.P15="P15",r.P20="P20",r.P30="P30",r.P40="P40",r.P50="P50",r.P60="P60",r.P70="P70",r.P80="P80"})(us||(us={}));function Fe(r){if(r!==void 0)return r}function K(r,e){if(r&&!e)throw new RangeError("Customer-provided encryption key must be used over HTTPS.");r&&!r.encryptionAlgorithm&&(r.encryptionAlgorithm=Ty)}var ys;(function(r){r.StorageOAuthScopes="https://storage.azure.com/.default",r.DiskComputeOAuthScopes="https://disk.compute.azure.com/.default"})(ys||(ys={}));function kr(r){const e=(r._response.parsedBody.pageRange||[]).map(a=>({offset:a.start,count:a.end-a.start})),t=(r._response.parsedBody.clearRange||[]).map(a=>({offset:a.start,count:a.end-a.start}));return Object.assign(Object.assign({},r),{pageRange:e,clearRange:t,_response:Object.assign(Object.assign({},r._response),{parsedBody:{pageRange:e,clearRange:t}})})}class Ha extends Error{constructor(e){super(e),this.name="PollerStoppedError",Object.setPrototypeOf(this,Ha.prototype)}}class Da extends Error{constructor(e){super(e),this.name="PollerCancelledError",Object.setPrototypeOf(this,Da.prototype)}}class vf{constructor(e){this.resolveOnUnsuccessful=!1,this.stopped=!0,this.pollProgressCallbacks=[],this.operation=e,this.promise=new Promise((t,a)=>{this.resolve=t,this.reject=a}),this.promise.catch(()=>{})}async startPolling(e={}){for(this.stopped&&(this.stopped=!1);!this.isStopped()&&!this.isDone();)await this.poll(e),await this.delay()}async pollOnce(e={}){this.isDone()||(this.operation=await this.operation.update({abortSignal:e.abortSignal,fireProgress:this.fireProgress.bind(this)})),this.processUpdatedState()}fireProgress(e){for(const t of this.pollProgressCallbacks)t(e)}async cancelOnce(e={}){this.operation=await this.operation.cancel(e)}poll(e={}){if(!this.pollOncePromise){this.pollOncePromise=this.pollOnce(e);const t=()=>{this.pollOncePromise=void 0};this.pollOncePromise.then(t,t).catch(this.reject)}return this.pollOncePromise}processUpdatedState(){if(this.operation.state.error&&(this.stopped=!0,!this.resolveOnUnsuccessful))throw this.reject(this.operation.state.error),this.operation.state.error;if(this.operation.state.isCancelled&&(this.stopped=!0,!this.resolveOnUnsuccessful)){const e=new Da("Operation was canceled");throw this.reject(e),e}this.isDone()&&this.resolve&&this.resolve(this.getResult())}async pollUntilDone(e={}){return this.stopped&&this.startPolling(e).catch(this.reject),this.processUpdatedState(),this.promise}onProgress(e){return this.pollProgressCallbacks.push(e),()=>{this.pollProgressCallbacks=this.pollProgressCallbacks.filter(t=>t!==e)}}isDone(){const e=this.operation.state;return!!(e.isCompleted||e.isCancelled||e.error)}stopPolling(){this.stopped||(this.stopped=!0,this.reject&&this.reject(new Ha("This poller is already stopped")))}isStopped(){return this.stopped}cancelOperation(e={}){if(!this.cancelPromise)this.cancelPromise=this.cancelOnce(e);else if(e.abortSignal)throw new Error("A cancel request is currently pending");return this.cancelPromise}getOperationState(){return this.operation.state}getResult(){return this.operation.state.result}toString(){return this.operation.toString()}}class Rf extends vf{constructor(e){const{blobClient:t,copySource:a,intervalInMs:s=15e3,onProgress:n,resumeFrom:i,startCopyFromURLOptions:o}=e;let m;i&&(m=JSON.parse(i).state);const l=Mt(Object.assign(Object.assign({},m),{blobClient:t,copySource:a,startCopyFromURLOptions:o}));super(l),typeof n=="function"&&this.onProgress(n),this.intervalInMs=s}delay(){return Xe(this.intervalInMs)}}const Sf=async function(e={}){const t=this.state,{copyId:a}=t;return t.isCompleted?Mt(t):a?(await t.blobClient.abortCopyFromURL(a,{abortSignal:e.abortSignal}),t.isCancelled=!0,Mt(t)):(t.isCancelled=!0,Mt(t))},zf=async function(e={}){const t=this.state,{blobClient:a,copySource:s,startCopyFromURLOptions:n}=t;if(t.isStarted){if(!t.isCompleted)try{const i=await t.blobClient.getProperties({abortSignal:e.abortSignal}),{copyStatus:o,copyProgress:m}=i,l=t.copyProgress;m&&(t.copyProgress=m),o==="pending"&&m!==l&&typeof e.fireProgress=="function"?e.fireProgress(t):o==="success"?(t.result=i,t.isCompleted=!0):o==="failed"&&(t.error=new Error(`Blob copy failed with reason: "${i.copyStatusDescription||"unknown"}"`),t.isCompleted=!0)}catch(i){t.error=i,t.isCompleted=!0}}else{t.isStarted=!0;const i=await a.startCopyFromURL(s,n);t.copyId=i.copyId,i.copyStatus==="success"&&(t.result=i,t.isCompleted=!0)}return Mt(t)},Ef=function(){return JSON.stringify({state:this.state},(e,t)=>{if(e!=="blobClient")return t})};function Mt(r){return{state:Object.assign({},r),cancel:Sf,toString:Ef,update:zf}}function se(r){if(r.offset<0)throw new RangeError("Range.offset cannot be smaller than 0.");if(r.count&&r.count<=0)throw new RangeError("Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.");return r.count?`bytes=${r.offset}-${r.offset+r.count-1}`:`bytes=${r.offset}-`}var pr={},wf={get exports(){return pr},set exports(r){pr=r}},it=typeof Reflect=="object"?Reflect:null,fs=it&&typeof it.apply=="function"?it.apply:function(e,t,a){return Function.prototype.apply.call(e,t,a)},ar;it&&typeof it.ownKeys=="function"?ar=it.ownKeys:Object.getOwnPropertySymbols?ar=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:ar=function(e){return Object.getOwnPropertyNames(e)};function Tf(r){console&&console.warn&&console.warn(r)}var Dm=Number.isNaN||function(e){return e!==e};function H(){H.init.call(this)}wf.exports=H;pr.once=If;H.EventEmitter=H;H.prototype._events=void 0;H.prototype._eventsCount=0;H.prototype._maxListeners=void 0;var gs=10;function Rr(r){if(typeof r!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof r)}Object.defineProperty(H,"defaultMaxListeners",{enumerable:!0,get:function(){return gs},set:function(r){if(typeof r!="number"||r<0||Dm(r))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+r+".");gs=r}});H.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};H.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||Dm(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function Lm(r){return r._maxListeners===void 0?H.defaultMaxListeners:r._maxListeners}H.prototype.getMaxListeners=function(){return Lm(this)};H.prototype.emit=function(e){for(var t=[],a=1;a<arguments.length;a++)t.push(arguments[a]);var s=e==="error",n=this._events;if(n!==void 0)s=s&&n.error===void 0;else if(!s)return!1;if(s){var i;if(t.length>0&&(i=t[0]),i instanceof Error)throw i;var o=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw o.context=i,o}var m=n[e];if(m===void 0)return!1;if(typeof m=="function")fs(m,this,t);else for(var l=m.length,c=Fm(m,l),a=0;a<l;++a)fs(c[a],this,t);return!0};function Am(r,e,t,a){var s,n,i;if(Rr(t),n=r._events,n===void 0?(n=r._events=Object.create(null),r._eventsCount=0):(n.newListener!==void 0&&(r.emit("newListener",e,t.listener?t.listener:t),n=r._events),i=n[e]),i===void 0)i=n[e]=t,++r._eventsCount;else if(typeof i=="function"?i=n[e]=a?[t,i]:[i,t]:a?i.unshift(t):i.push(t),s=Lm(r),s>0&&i.length>s&&!i.warned){i.warned=!0;var o=new Error("Possible EventEmitter memory leak detected. "+i.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");o.name="MaxListenersExceededWarning",o.emitter=r,o.type=e,o.count=i.length,Tf(o)}return r}H.prototype.addListener=function(e,t){return Am(this,e,t,!1)};H.prototype.on=H.prototype.addListener;H.prototype.prependListener=function(e,t){return Am(this,e,t,!0)};function Of(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function km(r,e,t){var a={fired:!1,wrapFn:void 0,target:r,type:e,listener:t},s=Of.bind(a);return s.listener=t,a.wrapFn=s,s}H.prototype.once=function(e,t){return Rr(t),this.on(e,km(this,e,t)),this};H.prototype.prependOnceListener=function(e,t){return Rr(t),this.prependListener(e,km(this,e,t)),this};H.prototype.removeListener=function(e,t){var a,s,n,i,o;if(Rr(t),s=this._events,s===void 0)return this;if(a=s[e],a===void 0)return this;if(a===t||a.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete s[e],s.removeListener&&this.emit("removeListener",e,a.listener||t));else if(typeof a!="function"){for(n=-1,i=a.length-1;i>=0;i--)if(a[i]===t||a[i].listener===t){o=a[i].listener,n=i;break}if(n<0)return this;n===0?a.shift():Bf(a,n),a.length===1&&(s[e]=a[0]),s.removeListener!==void 0&&this.emit("removeListener",e,o||t)}return this};H.prototype.off=H.prototype.removeListener;H.prototype.removeAllListeners=function(e){var t,a,s;if(a=this._events,a===void 0)return this;if(a.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):a[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete a[e]),this;if(arguments.length===0){var n=Object.keys(a),i;for(s=0;s<n.length;++s)i=n[s],i!=="removeListener"&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=a[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(s=t.length-1;s>=0;s--)this.removeListener(e,t[s]);return this};function Um(r,e,t){var a=r._events;if(a===void 0)return[];var s=a[e];return s===void 0?[]:typeof s=="function"?t?[s.listener||s]:[s]:t?qf(s):Fm(s,s.length)}H.prototype.listeners=function(e){return Um(this,e,!0)};H.prototype.rawListeners=function(e){return Um(this,e,!1)};H.listenerCount=function(r,e){return typeof r.listenerCount=="function"?r.listenerCount(e):jm.call(r,e)};H.prototype.listenerCount=jm;function jm(r){var e=this._events;if(e!==void 0){var t=e[r];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}H.prototype.eventNames=function(){return this._eventsCount>0?ar(this._events):[]};function Fm(r,e){for(var t=new Array(e),a=0;a<e;++a)t[a]=r[a];return t}function Bf(r,e){for(;e+1<r.length;e++)r[e]=r[e+1];r.pop()}function qf(r){for(var e=new Array(r.length),t=0;t<e.length;++t)e[t]=r[t].listener||r[t];return e}function If(r,e){return new Promise(function(t,a){function s(i){r.removeListener(e,n),a(i)}function n(){typeof r.removeListener=="function"&&r.removeListener("error",s),t([].slice.call(arguments))}$m(r,e,n,{once:!0}),e!=="error"&&Mf(r,s,{once:!0})})}function Mf(r,e,t){typeof r.on=="function"&&$m(r,"error",e,t)}function $m(r,e,t,a){if(typeof r.on=="function")a.once?r.once(e,t):r.on(e,t);else if(typeof r.addEventListener=="function")r.addEventListener(e,function s(n){a.once&&r.removeEventListener(e,s),t(n)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof r)}var _t;(function(r){r[r.Good=0]="Good",r[r.Error=1]="Error"})(_t||(_t={}));class Km{constructor(e=5){if(this.actives=0,this.completed=0,this.offset=0,this.operations=[],this.state=_t.Good,e<1)throw new RangeError("concurrency must be larger than 0");this.concurrency=e,this.emitter=new pr.EventEmitter}addOperation(e){this.operations.push(async()=>{try{this.actives++,await e(),this.actives--,this.completed++,this.parallelExecute()}catch(t){this.emitter.emit("error",t)}})}async do(){return this.operations.length===0?Promise.resolve():(this.parallelExecute(),new Promise((e,t)=>{this.emitter.on("finish",e),this.emitter.on("error",a=>{this.state=_t.Error,t(a)})}))}nextOperation(){return this.offset<this.operations.length?this.operations[this.offset++]:null}parallelExecute(){if(this.state!==_t.Error){if(this.completed>=this.operations.length){this.emitter.emit("finish");return}for(;this.actives<this.concurrency;){const e=this.nextOperation();if(e)e();else return}}}}class _f{}async function Hf(r){const e=new FileReader;return new Promise((t,a)=>{e.onloadend=s=>{t(s.target.result)},e.onerror=a,e.readAsText(r)})}const Df=function(){},Lf=function(){};class le extends _a{constructor(e,t,a,s){s=s||{};let n,i;if(Ve(t))i=e,n=t;else if(t instanceof D||me(t))i=e,s=a,n=j(t,s);else if(!t&&typeof t!="string")i=e,a&&typeof a!="string"&&(s=a),n=j(new D,s);else if(t&&typeof t=="string"&&a&&typeof a=="string"){const o=t,m=a,l=vt(e);if(l.kind==="AccountConnString")throw new Error("Account connection string is only supported in Node.js environment");if(l.kind==="SASConnString")i=re(re(l.url,encodeURIComponent(o)),encodeURIComponent(m))+"?"+l.accountSas,n=j(new D,s);else throw new Error("Connection string must be either an Account connection string or a SAS connection string")}else throw new Error("Expecting non-empty strings for containerName and blobName parameters");super(i,n),{blobName:this._name,containerName:this._containerName}=this.getBlobAndContainerNamesFromUrl(),this.blobContext=new Ta(this.storageClientContext),this._snapshot=is(this.url,be.Parameters.SNAPSHOT),this._versionId=is(this.url,be.Parameters.VERSIONID)}get name(){return this._name}get containerName(){return this._containerName}withSnapshot(e){return new le(Ke(this.url,be.Parameters.SNAPSHOT,e.length===0?void 0:e),this.pipeline)}withVersion(e){return new le(Ke(this.url,be.Parameters.VERSIONID,e.length===0?void 0:e),this.pipeline)}getAppendBlobClient(){return new Sr(this.url,this.pipeline)}getBlockBlobClient(){return new zr(this.url,this.pipeline)}getPageBlobClient(){return new Er(this.url,this.pipeline)}async download(e=0,t,a={}){var s;a.conditions=a.conditions||{},a.conditions=a.conditions||{},K(a.customerProvidedKey,this.isHttps);const{span:n,updatedOptions:i}=g("BlobClient-download",a);try{const o=await this.blobContext.download(Object.assign({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:(s=a.conditions)===null||s===void 0?void 0:s.tagConditions}),requestOptions:{onDownloadProgress:nr?void 0:a.onProgress},range:e===0&&!t?void 0:se({offset:e,count:t}),rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey},P(i))),m=Object.assign(Object.assign({},o),{_response:o._response,objectReplicationDestinationPolicyId:o.objectReplicationPolicyId,objectReplicationSourceProperties:dr(o.objectReplicationRules)});if(!nr)return m;if((a.maxRetryRequests===void 0||a.maxRetryRequests<0)&&(a.maxRetryRequests=Ey),o.contentLength===void 0)throw new RangeError("File download response doesn't contain valid content length header");if(!o.etag)throw new RangeError("File download response doesn't contain valid etag header");return new Cf(m,async l=>{var c;const p={leaseAccessConditions:a.conditions,modifiedAccessConditions:{ifMatch:a.conditions.ifMatch||o.etag,ifModifiedSince:a.conditions.ifModifiedSince,ifNoneMatch:a.conditions.ifNoneMatch,ifUnmodifiedSince:a.conditions.ifUnmodifiedSince,ifTags:(c=a.conditions)===null||c===void 0?void 0:c.tagConditions},range:se({count:e+o.contentLength-l,offset:l}),rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey};return(await this.blobContext.download(Object.assign({abortSignal:a.abortSignal},p))).readableStreamBody},e,o.contentLength,{maxRetryRequests:a.maxRetryRequests,onProgress:a.onProgress})}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async exists(e={}){const{span:t,updatedOptions:a}=g("BlobClient-exists",e);try{return K(e.customerProvidedKey,this.isHttps),await this.getProperties({abortSignal:e.abortSignal,customerProvidedKey:e.customerProvidedKey,conditions:e.conditions,tracingOptions:a.tracingOptions}),!0}catch(s){if(s.statusCode===404)return!1;if(s.statusCode===409&&(s.details.errorCode===Iy||s.details.errorCode===My))return!0;throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async getProperties(e={}){var t;const{span:a,updatedOptions:s}=g("BlobClient-getProperties",e);try{e.conditions=e.conditions||{},K(e.customerProvidedKey,this.isHttps);const n=await this.blobContext.getProperties(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(t=e.conditions)===null||t===void 0?void 0:t.tagConditions}),cpkInfo:e.customerProvidedKey},P(s)));return Object.assign(Object.assign({},n),{_response:n._response,objectReplicationDestinationPolicyId:n.objectReplicationPolicyId,objectReplicationSourceProperties:dr(n.objectReplicationRules)})}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async delete(e={}){var t;const{span:a,updatedOptions:s}=g("BlobClient-delete",e);e.conditions=e.conditions||{};try{return await this.blobContext.delete(Object.assign({abortSignal:e.abortSignal,deleteSnapshots:e.deleteSnapshots,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(t=e.conditions)===null||t===void 0?void 0:t.tagConditions})},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async deleteIfExists(e={}){var t,a;const{span:s,updatedOptions:n}=g("BlobClient-deleteIfExists",e);try{const i=await this.delete(n);return Object.assign(Object.assign({succeeded:!0},i),{_response:i._response})}catch(i){if(((t=i.details)===null||t===void 0?void 0:t.errorCode)==="BlobNotFound")return s.setStatus({code:u.ERROR,message:"Expected exception when deleting a blob or snapshot only if it exists."}),Object.assign(Object.assign({succeeded:!1},(a=i.response)===null||a===void 0?void 0:a.parsedHeaders),{_response:i.response});throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async undelete(e={}){const{span:t,updatedOptions:a}=g("BlobClient-undelete",e);try{return await this.blobContext.undelete(Object.assign({abortSignal:e.abortSignal},P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async setHTTPHeaders(e,t={}){var a;const{span:s,updatedOptions:n}=g("BlobClient-setHTTPHeaders",t);t.conditions=t.conditions||{};try{return K(t.customerProvidedKey,this.isHttps),await this.blobContext.setHttpHeaders(Object.assign({abortSignal:t.abortSignal,blobHttpHeaders:e,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions})},P(n)))}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async setMetadata(e,t={}){var a;const{span:s,updatedOptions:n}=g("BlobClient-setMetadata",t);t.conditions=t.conditions||{};try{return K(t.customerProvidedKey,this.isHttps),await this.blobContext.setMetadata(Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope},P(n)))}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async setTags(e,t={}){var a;const{span:s,updatedOptions:n}=g("BlobClient-setTags",t);try{return await this.blobContext.setTags(Object.assign(Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions})},P(n)),{tags:Ky(e)}))}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async getTags(e={}){var t;const{span:a,updatedOptions:s}=g("BlobClient-getTags",e);try{const n=await this.blobContext.getTags(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(t=e.conditions)===null||t===void 0?void 0:t.tagConditions})},P(s)));return Object.assign(Object.assign({},n),{_response:n._response,tags:It({blobTagSet:n.blobTagSet})||{}})}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}getBlobLeaseClient(e){return new Hm(this,e)}async createSnapshot(e={}){var t;const{span:a,updatedOptions:s}=g("BlobClient-createSnapshot",e);e.conditions=e.conditions||{};try{return K(e.customerProvidedKey,this.isHttps),await this.blobContext.createSnapshot(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(t=e.conditions)===null||t===void 0?void 0:t.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async beginCopyFromURL(e,t={}){const a={abortCopyFromURL:(...n)=>this.abortCopyFromURL(...n),getProperties:(...n)=>this.getProperties(...n),startCopyFromURL:(...n)=>this.startCopyFromURL(...n)},s=new Rf({blobClient:a,copySource:e,intervalInMs:t.intervalInMs,onProgress:t.onProgress,resumeFrom:t.resumeFrom,startCopyFromURLOptions:t});return await s.poll(),s}async abortCopyFromURL(e,t={}){const{span:a,updatedOptions:s}=g("BlobClient-abortCopyFromURL",t);try{return await this.blobContext.abortCopyFromURL(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async syncCopyFromURL(e,t={}){var a,s,n;const{span:i,updatedOptions:o}=g("BlobClient-syncCopyFromURL",t);t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{};try{return await this.blobContext.copyFromURL(e,Object.assign({abortSignal:t.abortSignal,metadata:t.metadata,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:t.sourceConditions.ifMatch,sourceIfModifiedSince:t.sourceConditions.ifModifiedSince,sourceIfNoneMatch:t.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:t.sourceConditions.ifUnmodifiedSince},sourceContentMD5:t.sourceContentMD5,copySourceAuthorization:jt(t.sourceAuthorization),tier:Fe(t.tier),blobTagsString:je(t.tags),immutabilityPolicyExpiry:(s=t.immutabilityPolicy)===null||s===void 0?void 0:s.expiriesOn,immutabilityPolicyMode:(n=t.immutabilityPolicy)===null||n===void 0?void 0:n.policyMode,legalHold:t.legalHold,encryptionScope:t.encryptionScope,copySourceTags:t.copySourceTags},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async setAccessTier(e,t={}){var a;const{span:s,updatedOptions:n}=g("BlobClient-setAccessTier",t);try{return await this.blobContext.setTier(Fe(e),Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),rehydratePriority:t.rehydratePriority},P(n)))}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async downloadToBuffer(e,t,a,s={}){let n,i=0,o=0,m=s;e instanceof Buffer?(n=e,i=t||0,o=typeof a=="number"?a:0):(i=typeof e=="number"?e:0,o=typeof t=="number"?t:0,m=a||{});const{span:l,updatedOptions:c}=g("BlobClient-downloadToBuffer",m);try{if(m.blockSize||(m.blockSize=0),m.blockSize<0)throw new RangeError("blockSize option must be >= 0");if(m.blockSize===0&&(m.blockSize=aa),i<0)throw new RangeError("offset option must be >= 0");if(o&&o<=0)throw new RangeError("count option must be greater than 0");if(m.conditions||(m.conditions={}),!o){const y=await this.getProperties(Object.assign(Object.assign({},m),{tracingOptions:Object.assign(Object.assign({},m.tracingOptions),P(c))}));if(o=y.contentLength-i,o<0)throw new RangeError(`offset ${i} shouldn't be larger than blob size ${y.contentLength}`)}if(!n)try{n=Buffer.alloc(o)}catch(y){throw new Error(`Unable to allocate the buffer of size: ${o}(in bytes). Please try passing your own buffer to the "downloadToBuffer" method or try using other methods like "download" or "downloadToFile".	 ${y.message}`)}if(n.length<o)throw new RangeError(`The buffer's size should be equal to or larger than the request count of bytes: ${o}`);let p=0;const d=new Km(m.concurrency);for(let y=i;y<i+o;y=y+m.blockSize)d.addOperation(async()=>{let C=i+o;y+m.blockSize<C&&(C=y+m.blockSize);const S=(await this.download(y,C-y,{abortSignal:m.abortSignal,conditions:m.conditions,maxRetryRequests:m.maxRetryRequestsPerBlock,customerProvidedKey:m.customerProvidedKey,tracingOptions:Object.assign(Object.assign({},m.tracingOptions),P(c))})).readableStreamBody;await(y-i,C-i,void 0),p+=C-y,m.onProgress&&m.onProgress({loadedBytes:p})});return await d.do(),n}catch(p){throw l.setStatus({code:u.ERROR,message:p.message}),p}finally{l.end()}}async downloadToFile(e,t=0,a,s={}){const{span:n,updatedOptions:i}=g("BlobClient-downloadToFile",s);try{const o=await this.download(t,a,Object.assign(Object.assign({},s),{tracingOptions:Object.assign(Object.assign({},s.tracingOptions),P(i))}));return o.readableStreamBody&&await(o.readableStreamBody,void 0),o.blobDownloadStream=void 0,o}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}getBlobAndContainerNamesFromUrl(){let e,t;try{const a=G.parse(this.url);if(a.getHost().split(".")[1]==="blob"){const s=a.getPath().match("/([^/]*)(/(.*))?");e=s[1],t=s[3]}else if(Ia(a)){const s=a.getPath().match("/([^/]*)/([^/]*)(/(.*))?");e=s[2],t=s[4]}else{const s=a.getPath().match("/([^/]*)(/(.*))?");e=s[1],t=s[3]}if(e=decodeURIComponent(e),t=decodeURIComponent(t),t=t.replace(/\\/g,"/"),!e)throw new Error("Provided containerName is invalid.");return{blobName:t,containerName:e}}catch{throw new Error("Unable to extract blobName and containerName with provided information.")}}async startCopyFromURL(e,t={}){var a,s,n;const{span:i,updatedOptions:o}=g("BlobClient-startCopyFromURL",t);t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{};try{return await this.blobContext.startCopyFromURL(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:t.sourceConditions.ifMatch,sourceIfModifiedSince:t.sourceConditions.ifModifiedSince,sourceIfNoneMatch:t.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:t.sourceConditions.ifUnmodifiedSince,sourceIfTags:t.sourceConditions.tagConditions},immutabilityPolicyExpiry:(s=t.immutabilityPolicy)===null||s===void 0?void 0:s.expiriesOn,immutabilityPolicyMode:(n=t.immutabilityPolicy)===null||n===void 0?void 0:n.policyMode,legalHold:t.legalHold,rehydratePriority:t.rehydratePriority,tier:Fe(t.tier),blobTagsString:je(t.tags),sealBlob:t.sealBlob},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}generateSasUrl(e){return new Promise(t=>{if(!(this.credential instanceof vr))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=_m(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),this.credential).toString();t(qa(this.url,a))})}async deleteImmutabilityPolicy(e){const{span:t,updatedOptions:a}=g("BlobClient-deleteImmutabilityPolicy",e);try{return await this.blobContext.deleteImmutabilityPolicy(Object.assign({abortSignal:e==null?void 0:e.abortSignal},P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async setImmutabilityPolicy(e,t){const{span:a,updatedOptions:s}=g("BlobClient-setImmutabilityPolicy",t);try{return await this.blobContext.setImmutabilityPolicy(Object.assign({abortSignal:t==null?void 0:t.abortSignal,immutabilityPolicyExpiry:e.expiriesOn,immutabilityPolicyMode:e.policyMode,modifiedAccessConditions:t==null?void 0:t.modifiedAccessCondition},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async setLegalHold(e,t){const{span:a,updatedOptions:s}=g("BlobClient-setLegalHold",t);try{return await this.blobContext.setLegalHold(e,Object.assign({abortSignal:t==null?void 0:t.abortSignal},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}}class Sr extends le{constructor(e,t,a,s){let n,i;if(s=s||{},Ve(t))i=e,n=t;else if(t instanceof D||me(t))i=e,s=a,n=j(t,s);else if(!t&&typeof t!="string")i=e,n=j(new D,s);else if(t&&typeof t=="string"&&a&&typeof a=="string"){const o=t,m=a,l=vt(e);if(l.kind==="AccountConnString")throw new Error("Account connection string is only supported in Node.js environment");if(l.kind==="SASConnString")i=re(re(l.url,encodeURIComponent(o)),encodeURIComponent(m))+"?"+l.accountSas,n=j(new D,s);else throw new Error("Connection string must be either an Account connection string or a SAS connection string")}else throw new Error("Expecting non-empty strings for containerName and blobName parameters");super(i,n),this.appendBlobContext=new uy(this.storageClientContext)}withSnapshot(e){return new Sr(Ke(this.url,be.Parameters.SNAPSHOT,e.length===0?void 0:e),this.pipeline)}async create(e={}){var t,a,s;const{span:n,updatedOptions:i}=g("AppendBlobClient-create",e);e.conditions=e.conditions||{};try{return K(e.customerProvidedKey,this.isHttps),await this.appendBlobContext.create(0,Object.assign({abortSignal:e.abortSignal,blobHttpHeaders:e.blobHTTPHeaders,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(t=e.conditions)===null||t===void 0?void 0:t.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope,immutabilityPolicyExpiry:(a=e.immutabilityPolicy)===null||a===void 0?void 0:a.expiriesOn,immutabilityPolicyMode:(s=e.immutabilityPolicy)===null||s===void 0?void 0:s.policyMode,legalHold:e.legalHold,blobTagsString:je(e.tags)},P(i)))}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async createIfNotExists(e={}){var t,a;const{span:s,updatedOptions:n}=g("AppendBlobClient-createIfNotExists",e),i={ifNoneMatch:wm};try{const o=await this.create(Object.assign(Object.assign({},n),{conditions:i}));return Object.assign(Object.assign({succeeded:!0},o),{_response:o._response})}catch(o){if(((t=o.details)===null||t===void 0?void 0:t.errorCode)==="BlobAlreadyExists")return s.setStatus({code:u.ERROR,message:"Expected exception when creating a blob only if it does not already exist."}),Object.assign(Object.assign({succeeded:!1},(a=o.response)===null||a===void 0?void 0:a.parsedHeaders),{_response:o.response});throw s.setStatus({code:u.ERROR,message:o.message}),o}finally{s.end()}}async seal(e={}){var t;const{span:a,updatedOptions:s}=g("AppendBlobClient-seal",e);e.conditions=e.conditions||{};try{return await this.appendBlobContext.seal(Object.assign({abortSignal:e.abortSignal,appendPositionAccessConditions:e.conditions,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:(t=e.conditions)===null||t===void 0?void 0:t.tagConditions})},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async appendBlock(e,t,a={}){var s;const{span:n,updatedOptions:i}=g("AppendBlobClient-appendBlock",a);a.conditions=a.conditions||{};try{return K(a.customerProvidedKey,this.isHttps),await this.appendBlobContext.appendBlock(t,e,Object.assign({abortSignal:a.abortSignal,appendPositionAccessConditions:a.conditions,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:(s=a.conditions)===null||s===void 0?void 0:s.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},transactionalContentMD5:a.transactionalContentMD5,transactionalContentCrc64:a.transactionalContentCrc64,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope},P(i)))}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async appendBlockFromURL(e,t,a,s={}){var n;const{span:i,updatedOptions:o}=g("AppendBlobClient-appendBlockFromURL",s);s.conditions=s.conditions||{},s.sourceConditions=s.sourceConditions||{};try{return K(s.customerProvidedKey,this.isHttps),await this.appendBlobContext.appendBlockFromUrl(e,0,Object.assign({abortSignal:s.abortSignal,sourceRange:se({offset:t,count:a}),sourceContentMD5:s.sourceContentMD5,sourceContentCrc64:s.sourceContentCrc64,leaseAccessConditions:s.conditions,appendPositionAccessConditions:s.conditions,modifiedAccessConditions:Object.assign(Object.assign({},s.conditions),{ifTags:(n=s.conditions)===null||n===void 0?void 0:n.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:s.sourceConditions.ifMatch,sourceIfModifiedSince:s.sourceConditions.ifModifiedSince,sourceIfNoneMatch:s.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:s.sourceConditions.ifUnmodifiedSince},copySourceAuthorization:jt(s.sourceAuthorization),cpkInfo:s.customerProvidedKey,encryptionScope:s.encryptionScope},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}}class zr extends le{constructor(e,t,a,s){let n,i;if(s=s||{},Ve(t))i=e,n=t;else if(t instanceof D||me(t))i=e,s=a,n=j(t,s);else if(!t&&typeof t!="string")i=e,a&&typeof a!="string"&&(s=a),n=j(new D,s);else if(t&&typeof t=="string"&&a&&typeof a=="string"){const o=t,m=a,l=vt(e);if(l.kind==="AccountConnString")throw new Error("Account connection string is only supported in Node.js environment");if(l.kind==="SASConnString")i=re(re(l.url,encodeURIComponent(o)),encodeURIComponent(m))+"?"+l.accountSas,n=j(new D,s);else throw new Error("Connection string must be either an Account connection string or a SAS connection string")}else throw new Error("Expecting non-empty strings for containerName and blobName parameters");super(i,n),this.blockBlobContext=new Ny(this.storageClientContext),this._blobContext=new Ta(this.storageClientContext)}withSnapshot(e){return new zr(Ke(this.url,be.Parameters.SNAPSHOT,e.length===0?void 0:e),this.pipeline)}async query(e,t={}){var a;K(t.customerProvidedKey,this.isHttps);const{span:s,updatedOptions:n}=g("BlockBlobClient-query",t);try{if(!nr)throw new Error("This operation currently is only supported in Node.js.");K(t.customerProvidedKey,this.isHttps);const i=await this._blobContext.query(Object.assign({abortSignal:t.abortSignal,queryRequest:{queryType:"SQL",expression:e,inputSerialization:ms(t.inputTextConfiguration),outputSerialization:ms(t.outputTextConfiguration)},leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey},P(n)));return new Pf(i,{abortSignal:t.abortSignal,onProgress:t.onProgress,onError:t.onError})}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async upload(e,t,a={}){var s,n,i;a.conditions=a.conditions||{};const{span:o,updatedOptions:m}=g("BlockBlobClient-upload",a);try{return K(a.customerProvidedKey,this.isHttps),await this.blockBlobContext.upload(t,e,Object.assign({abortSignal:a.abortSignal,blobHttpHeaders:a.blobHTTPHeaders,leaseAccessConditions:a.conditions,metadata:a.metadata,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:(s=a.conditions)===null||s===void 0?void 0:s.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,immutabilityPolicyExpiry:(n=a.immutabilityPolicy)===null||n===void 0?void 0:n.expiriesOn,immutabilityPolicyMode:(i=a.immutabilityPolicy)===null||i===void 0?void 0:i.policyMode,legalHold:a.legalHold,tier:Fe(a.tier),blobTagsString:je(a.tags)},P(m)))}catch(l){throw o.setStatus({code:u.ERROR,message:l.message}),l}finally{o.end()}}async syncUploadFromURL(e,t={}){var a,s,n,i,o;t.conditions=t.conditions||{};const{span:m,updatedOptions:l}=g("BlockBlobClient-syncUploadFromURL",t);try{return K(t.customerProvidedKey,this.isHttps),await this.blockBlobContext.putBlobFromUrl(0,e,Object.assign(Object.assign(Object.assign({},t),{blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:t.conditions.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:(a=t.sourceConditions)===null||a===void 0?void 0:a.ifMatch,sourceIfModifiedSince:(s=t.sourceConditions)===null||s===void 0?void 0:s.ifModifiedSince,sourceIfNoneMatch:(n=t.sourceConditions)===null||n===void 0?void 0:n.ifNoneMatch,sourceIfUnmodifiedSince:(i=t.sourceConditions)===null||i===void 0?void 0:i.ifUnmodifiedSince,sourceIfTags:(o=t.sourceConditions)===null||o===void 0?void 0:o.tagConditions},cpkInfo:t.customerProvidedKey,copySourceAuthorization:jt(t.sourceAuthorization),tier:Fe(t.tier),blobTagsString:je(t.tags),copySourceTags:t.copySourceTags}),P(l)))}catch(c){throw m.setStatus({code:u.ERROR,message:c.message}),c}finally{m.end()}}async stageBlock(e,t,a,s={}){const{span:n,updatedOptions:i}=g("BlockBlobClient-stageBlock",s);try{return K(s.customerProvidedKey,this.isHttps),await this.blockBlobContext.stageBlock(e,a,t,Object.assign({abortSignal:s.abortSignal,leaseAccessConditions:s.conditions,requestOptions:{onUploadProgress:s.onProgress},transactionalContentMD5:s.transactionalContentMD5,transactionalContentCrc64:s.transactionalContentCrc64,cpkInfo:s.customerProvidedKey,encryptionScope:s.encryptionScope},P(i)))}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async stageBlockFromURL(e,t,a=0,s,n={}){const{span:i,updatedOptions:o}=g("BlockBlobClient-stageBlockFromURL",n);try{return K(n.customerProvidedKey,this.isHttps),await this.blockBlobContext.stageBlockFromURL(e,0,t,Object.assign({abortSignal:n.abortSignal,leaseAccessConditions:n.conditions,sourceContentMD5:n.sourceContentMD5,sourceContentCrc64:n.sourceContentCrc64,sourceRange:a===0&&!s?void 0:se({offset:a,count:s}),cpkInfo:n.customerProvidedKey,encryptionScope:n.encryptionScope,copySourceAuthorization:jt(n.sourceAuthorization)},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async commitBlockList(e,t={}){var a,s,n;t.conditions=t.conditions||{};const{span:i,updatedOptions:o}=g("BlockBlobClient-commitBlockList",t);try{return K(t.customerProvidedKey,this.isHttps),await this.blockBlobContext.commitBlockList({latest:e},Object.assign({abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:(s=t.immutabilityPolicy)===null||s===void 0?void 0:s.expiriesOn,immutabilityPolicyMode:(n=t.immutabilityPolicy)===null||n===void 0?void 0:n.policyMode,legalHold:t.legalHold,tier:Fe(t.tier),blobTagsString:je(t.tags)},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async getBlockList(e,t={}){var a;const{span:s,updatedOptions:n}=g("BlockBlobClient-getBlockList",t);try{const i=await this.blockBlobContext.getBlockList(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions})},P(n)));return i.committedBlocks||(i.committedBlocks=[]),i.uncommittedBlocks||(i.uncommittedBlocks=[]),i}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async uploadData(e,t={}){const{span:a,updatedOptions:s}=g("BlockBlobClient-uploadData",t);try{if(!nr){const n=new Blob([e]);return this.uploadSeekableInternal((i,o)=>n.slice(i,i+o),n.size,s)}}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async uploadBrowserData(e,t={}){const{span:a,updatedOptions:s}=g("BlockBlobClient-uploadBrowserData",t);try{const n=new Blob([e]);return await this.uploadSeekableInternal((i,o)=>n.slice(i,i+o),n.size,s)}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async uploadSeekableInternal(e,t,a={}){if(a.blockSize||(a.blockSize=0),a.blockSize<0||a.blockSize>Lr)throw new RangeError(`blockSize option must be >= 0 and <= ${Lr}`);if(a.maxSingleShotSize!==0&&!a.maxSingleShotSize&&(a.maxSingleShotSize=Dr),a.maxSingleShotSize<0||a.maxSingleShotSize>Dr)throw new RangeError(`maxSingleShotSize option must be >= 0 and <= ${Dr}`);if(a.blockSize===0){if(t>Lr*Vt)throw new RangeError(`${t} is too larger to upload to a block blob.`);t>a.maxSingleShotSize&&(a.blockSize=Math.ceil(t/Vt),a.blockSize<aa&&(a.blockSize=aa))}a.blobHTTPHeaders||(a.blobHTTPHeaders={}),a.conditions||(a.conditions={});const{span:s,updatedOptions:n}=g("BlockBlobClient-uploadSeekableInternal",a);try{if(t<=a.maxSingleShotSize)return await this.upload(e(0,t),t,n);const i=Math.floor((t-1)/a.blockSize)+1;if(i>Vt)throw new RangeError(`The buffer's size is too big or the BlockSize is too small;the number of blocks must be <= ${Vt}`);const o=[],m=$e();let l=0;const c=new Km(a.concurrency);for(let p=0;p<i;p++)c.addOperation(async()=>{const d=os(m,p),y=a.blockSize*p,f=(p===i-1?t:y+a.blockSize)-y;o.push(d),await this.stageBlock(d,e(y,f),f,{abortSignal:a.abortSignal,conditions:a.conditions,encryptionScope:a.encryptionScope,tracingOptions:n.tracingOptions}),l+=f,a.onProgress&&a.onProgress({loadedBytes:l})});return await c.do(),this.commitBlockList(o,n)}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async uploadFile(e,t={}){const{span:a,updatedOptions:s}=g("BlockBlobClient-uploadFile",t);try{const n=(await Df(e)).size;return await this.uploadSeekableInternal((i,o)=>()=>Lf(e,{autoClose:!0,end:o?i+o-1:1/0,start:i}),n,Object.assign(Object.assign({},t),{tracingOptions:Object.assign(Object.assign({},t.tracingOptions),P(s))}))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async uploadStream(e,t=zy,a=5,s={}){s.blobHTTPHeaders||(s.blobHTTPHeaders={}),s.conditions||(s.conditions={});const{span:n,updatedOptions:i}=g("BlockBlobClient-uploadStream",s);try{let o=0;const m=$e();let l=0;const c=[];return await new _f(e,t,a,async(d,y)=>{const C=os(m,o);c.push(C),o++,await this.stageBlock(C,d,y,{conditions:s.conditions,encryptionScope:s.encryptionScope,tracingOptions:i.tracingOptions}),l+=y,s.onProgress&&s.onProgress({loadedBytes:l})},Math.ceil(a/4*3)).do(),await this.commitBlockList(c,Object.assign(Object.assign({},s),{tracingOptions:Object.assign(Object.assign({},s.tracingOptions),P(i))}))}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}}class Er extends le{constructor(e,t,a,s){let n,i;if(s=s||{},Ve(t))i=e,n=t;else if(t instanceof D||me(t))i=e,s=a,n=j(t,s);else if(!t&&typeof t!="string")i=e,n=j(new D,s);else if(t&&typeof t=="string"&&a&&typeof a=="string"){const o=t,m=a,l=vt(e);if(l.kind==="AccountConnString")throw new Error("Account connection string is only supported in Node.js environment");if(l.kind==="SASConnString")i=re(re(l.url,encodeURIComponent(o)),encodeURIComponent(m))+"?"+l.accountSas,n=j(new D,s);else throw new Error("Connection string must be either an Account connection string or a SAS connection string")}else throw new Error("Expecting non-empty strings for containerName and blobName parameters");super(i,n),this.pageBlobContext=new ry(this.storageClientContext)}withSnapshot(e){return new Er(Ke(this.url,be.Parameters.SNAPSHOT,e.length===0?void 0:e),this.pipeline)}async create(e,t={}){var a,s,n;t.conditions=t.conditions||{};const{span:i,updatedOptions:o}=g("PageBlobClient-create",t);try{return K(t.customerProvidedKey,this.isHttps),await this.pageBlobContext.create(0,e,Object.assign({abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,blobSequenceNumber:t.blobSequenceNumber,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:(s=t.immutabilityPolicy)===null||s===void 0?void 0:s.expiriesOn,immutabilityPolicyMode:(n=t.immutabilityPolicy)===null||n===void 0?void 0:n.policyMode,legalHold:t.legalHold,tier:Fe(t.tier),blobTagsString:je(t.tags)},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async createIfNotExists(e,t={}){var a,s;const{span:n,updatedOptions:i}=g("PageBlobClient-createIfNotExists",t);try{const o={ifNoneMatch:wm},m=await this.create(e,Object.assign(Object.assign({},t),{conditions:o,tracingOptions:i.tracingOptions}));return Object.assign(Object.assign({succeeded:!0},m),{_response:m._response})}catch(o){if(((a=o.details)===null||a===void 0?void 0:a.errorCode)==="BlobAlreadyExists")return n.setStatus({code:u.ERROR,message:"Expected exception when creating a blob only if it does not already exist."}),Object.assign(Object.assign({succeeded:!1},(s=o.response)===null||s===void 0?void 0:s.parsedHeaders),{_response:o.response});throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async uploadPages(e,t,a,s={}){var n;s.conditions=s.conditions||{};const{span:i,updatedOptions:o}=g("PageBlobClient-uploadPages",s);try{return K(s.customerProvidedKey,this.isHttps),await this.pageBlobContext.uploadPages(a,e,Object.assign({abortSignal:s.abortSignal,leaseAccessConditions:s.conditions,modifiedAccessConditions:Object.assign(Object.assign({},s.conditions),{ifTags:(n=s.conditions)===null||n===void 0?void 0:n.tagConditions}),requestOptions:{onUploadProgress:s.onProgress},range:se({offset:t,count:a}),sequenceNumberAccessConditions:s.conditions,transactionalContentMD5:s.transactionalContentMD5,transactionalContentCrc64:s.transactionalContentCrc64,cpkInfo:s.customerProvidedKey,encryptionScope:s.encryptionScope},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async uploadPagesFromURL(e,t,a,s,n={}){var i;n.conditions=n.conditions||{},n.sourceConditions=n.sourceConditions||{};const{span:o,updatedOptions:m}=g("PageBlobClient-uploadPagesFromURL",n);try{return K(n.customerProvidedKey,this.isHttps),await this.pageBlobContext.uploadPagesFromURL(e,se({offset:t,count:s}),0,se({offset:a,count:s}),Object.assign({abortSignal:n.abortSignal,sourceContentMD5:n.sourceContentMD5,sourceContentCrc64:n.sourceContentCrc64,leaseAccessConditions:n.conditions,sequenceNumberAccessConditions:n.conditions,modifiedAccessConditions:Object.assign(Object.assign({},n.conditions),{ifTags:(i=n.conditions)===null||i===void 0?void 0:i.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:n.sourceConditions.ifMatch,sourceIfModifiedSince:n.sourceConditions.ifModifiedSince,sourceIfNoneMatch:n.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:n.sourceConditions.ifUnmodifiedSince},cpkInfo:n.customerProvidedKey,encryptionScope:n.encryptionScope,copySourceAuthorization:jt(n.sourceAuthorization)},P(m)))}catch(l){throw o.setStatus({code:u.ERROR,message:l.message}),l}finally{o.end()}}async clearPages(e=0,t,a={}){var s;a.conditions=a.conditions||{};const{span:n,updatedOptions:i}=g("PageBlobClient-clearPages",a);try{return await this.pageBlobContext.clearPages(0,Object.assign({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:(s=a.conditions)===null||s===void 0?void 0:s.tagConditions}),range:se({offset:e,count:t}),sequenceNumberAccessConditions:a.conditions,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope},P(i)))}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async getPageRanges(e=0,t,a={}){var s;a.conditions=a.conditions||{};const{span:n,updatedOptions:i}=g("PageBlobClient-getPageRanges",a);try{return await this.pageBlobContext.getPageRanges(Object.assign({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:(s=a.conditions)===null||s===void 0?void 0:s.tagConditions}),range:se({offset:e,count:t})},P(i))).then(kr)}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async listPageRangesSegment(e=0,t,a,s={}){var n;const{span:i,updatedOptions:o}=g("PageBlobClient-getPageRangesSegment",s);try{return await this.pageBlobContext.getPageRanges(Object.assign({abortSignal:s.abortSignal,leaseAccessConditions:s.conditions,modifiedAccessConditions:Object.assign(Object.assign({},s.conditions),{ifTags:(n=s.conditions)===null||n===void 0?void 0:n.tagConditions}),range:se({offset:e,count:t}),marker:a,maxPageSize:s.maxPageSize},P(o)))}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}listPageRangeItemSegments(e=0,t,a,s={}){return te(this,arguments,function*(){let i;if(a||a===void 0)do i=yield E(this.listPageRangesSegment(e,t,a,s)),a=i.continuationToken,yield yield E(yield E(i));while(a)})}listPageRangeItems(e=0,t,a={}){return te(this,arguments,function*(){var n,i;let o;try{for(var m=ne(this.listPageRangeItemSegments(e,t,o,a)),l;l=yield E(m.next()),!l.done;){const c=l.value;yield E(yield*ot(ne(ls(c))))}}catch(c){n={error:c}}finally{try{l&&!l.done&&(i=m.return)&&(yield E(i.call(m)))}finally{if(n)throw n.error}}})}listPageRanges(e=0,t,a={}){a.conditions=a.conditions||{};const s=this.listPageRangeItems(e,t,a);return{next(){return s.next()},[Symbol.asyncIterator](){return this},byPage:(n={})=>this.listPageRangeItemSegments(e,t,n.continuationToken,Object.assign({maxPageSize:n.maxPageSize},a))}}async getPageRangesDiff(e,t,a,s={}){var n;s.conditions=s.conditions||{};const{span:i,updatedOptions:o}=g("PageBlobClient-getPageRangesDiff",s);try{return await this.pageBlobContext.getPageRangesDiff(Object.assign({abortSignal:s.abortSignal,leaseAccessConditions:s.conditions,modifiedAccessConditions:Object.assign(Object.assign({},s.conditions),{ifTags:(n=s.conditions)===null||n===void 0?void 0:n.tagConditions}),prevsnapshot:a,range:se({offset:e,count:t})},P(o))).then(kr)}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async listPageRangesDiffSegment(e,t,a,s,n){var i;const{span:o,updatedOptions:m}=g("PageBlobClient-getPageRangesDiffSegment",n);try{return await this.pageBlobContext.getPageRangesDiff(Object.assign({abortSignal:n==null?void 0:n.abortSignal,leaseAccessConditions:n==null?void 0:n.conditions,modifiedAccessConditions:Object.assign(Object.assign({},n==null?void 0:n.conditions),{ifTags:(i=n==null?void 0:n.conditions)===null||i===void 0?void 0:i.tagConditions}),prevsnapshot:a,range:se({offset:e,count:t}),marker:s,maxPageSize:n==null?void 0:n.maxPageSize},P(m)))}catch(l){throw o.setStatus({code:u.ERROR,message:l.message}),l}finally{o.end()}}listPageRangeDiffItemSegments(e,t,a,s,n){return te(this,arguments,function*(){let o;if(s||s===void 0)do o=yield E(this.listPageRangesDiffSegment(e,t,a,s,n)),s=o.continuationToken,yield yield E(yield E(o));while(s)})}listPageRangeDiffItems(e,t,a,s){return te(this,arguments,function*(){var i,o;let m;try{for(var l=ne(this.listPageRangeDiffItemSegments(e,t,a,m,s)),c;c=yield E(l.next()),!c.done;){const p=c.value;yield E(yield*ot(ne(ls(p))))}}catch(p){i={error:p}}finally{try{c&&!c.done&&(o=l.return)&&(yield E(o.call(l)))}finally{if(i)throw i.error}}})}listPageRangesDiff(e,t,a,s={}){s.conditions=s.conditions||{};const n=this.listPageRangeDiffItems(e,t,a,Object.assign({},s));return{next(){return n.next()},[Symbol.asyncIterator](){return this},byPage:(i={})=>this.listPageRangeDiffItemSegments(e,t,a,i.continuationToken,Object.assign({maxPageSize:i.maxPageSize},s))}}async getPageRangesDiffForManagedDisks(e,t,a,s={}){var n;s.conditions=s.conditions||{};const{span:i,updatedOptions:o}=g("PageBlobClient-GetPageRangesDiffForManagedDisks",s);try{return await this.pageBlobContext.getPageRangesDiff(Object.assign({abortSignal:s.abortSignal,leaseAccessConditions:s.conditions,modifiedAccessConditions:Object.assign(Object.assign({},s.conditions),{ifTags:(n=s.conditions)===null||n===void 0?void 0:n.tagConditions}),prevSnapshotUrl:a,range:se({offset:e,count:t})},P(o))).then(kr)}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async resize(e,t={}){var a;t.conditions=t.conditions||{};const{span:s,updatedOptions:n}=g("PageBlobClient-resize",t);try{return await this.pageBlobContext.resize(e,Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions}),encryptionScope:t.encryptionScope},P(n)))}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async updateSequenceNumber(e,t,a={}){var s;a.conditions=a.conditions||{};const{span:n,updatedOptions:i}=g("PageBlobClient-updateSequenceNumber",a);try{return await this.pageBlobContext.updateSequenceNumber(e,Object.assign({abortSignal:a.abortSignal,blobSequenceNumber:t,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:(s=a.conditions)===null||s===void 0?void 0:s.tagConditions})},P(i)))}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async startCopyIncremental(e,t={}){var a;const{span:s,updatedOptions:n}=g("PageBlobClient-startCopyIncremental",t);try{return await this.pageBlobContext.copyIncremental(e,Object.assign({abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:(a=t.conditions)===null||a===void 0?void 0:a.tagConditions})},P(n)))}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}}async function Af(r){const e=await r.blobBody;return Hf(e)}function kf(r){return new Blob([r]).size}const tr=": ",hs=" ",xs=-1;class Uf{constructor(e,t){if(!e||!e.contentType)throw new RangeError("batchResponse is malformed or doesn't contain valid content-type.");if(!t||t.size===0)throw new RangeError("Invalid state: subRequests is not provided or size is 0.");this.batchResponse=e,this.subRequests=t,this.responseBatchBoundary=this.batchResponse.contentType.split("=")[1],this.perResponsePrefix=`--${this.responseBatchBoundary}${xe}`,this.batchResponseEnding=`--${this.responseBatchBoundary}--`}async parseBatchResponse(){if(this.batchResponse._response.status!==wy.HTTP_ACCEPTED)throw new Error(`Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`);const t=(await Af(this.batchResponse)).split(this.batchResponseEnding)[0].split(this.perResponsePrefix).slice(1),a=t.length;if(a!==this.subRequests.size&&a!==1)throw new Error("Invalid state: sub responses' count is not equal to sub requests' count.");const s=new Array(a);let n=0,i=0;for(let o=0;o<a;o++){const m=t[o],l={};l.headers=new Ge;const c=m.split(`${xe}`);let p=!1,d=!1,y=!1,C=xs;for(const f of c){if(!p){if(f.startsWith(we.CONTENT_ID)&&(C=parseInt(f.split(tr)[1])),f.startsWith(Tm)){p=!0;const S=f.split(hs);l.status=parseInt(S[1]),l.statusMessage=S.slice(2).join(hs)}continue}if(f.trim()===""){d||(d=!0);continue}if(d)l.bodyAsText||(l.bodyAsText=""),l.bodyAsText+=f;else{if(f.indexOf(tr)===-1)throw new Error(`Invalid state: find non-empty line '${f}' without HTTP header delimiter '${tr}'.`);const S=f.split(tr);l.headers.set(S[0],S[1]),S[0]===we.X_MS_ERROR_CODE&&(l.errorCode=S[1],y=!0)}}C!==xs&&Number.isInteger(C)&&C>=0&&C<this.subRequests.size&&s[C]===void 0?(l._request=this.subRequests.get(C),s[C]=l):ue.error(`subResponses[${o}] is dropped as the Content-ID is not found or invalid, Content-ID: ${C}`),y?i++:n++}return{subResponses:s,subResponsesSucceededCount:n,subResponsesFailedCount:i}}}var rt;(function(r){r[r.LOCKED=0]="LOCKED",r[r.UNLOCKED=1]="UNLOCKED"})(rt||(rt={}));class ur{static async lock(e){return new Promise(t=>{this.keys[e]===void 0||this.keys[e]===rt.UNLOCKED?(this.keys[e]=rt.LOCKED,t()):this.onUnlockEvent(e,()=>{this.keys[e]=rt.LOCKED,t()})})}static async unlock(e){return new Promise(t=>{this.keys[e]===rt.LOCKED&&this.emitUnlockEvent(e),delete this.keys[e],t()})}static onUnlockEvent(e,t){this.listeners[e]===void 0?this.listeners[e]=[t]:this.listeners[e].push(t)}static emitUnlockEvent(e){if(this.listeners[e]!==void 0&&this.listeners[e].length>0){const t=this.listeners[e].shift();setImmediate(()=>{t.call(this)})}}}ur.keys={};ur.listeners={};class Ur{constructor(){this.batch="batch",this.batchRequest=new jf}getMultiPartContentType(){return this.batchRequest.getMultipartContentType()}getHttpRequestBody(){return this.batchRequest.getHttpRequestBody()}getSubRequests(){return this.batchRequest.getSubRequests()}async addSubRequestInternal(e,t){await ur.lock(this.batch);try{this.batchRequest.preAddSubRequest(e),await t(),this.batchRequest.postAddSubRequest(e)}finally{await ur.unlock(this.batch)}}setBatchType(e){if(this.batchType||(this.batchType=e),this.batchType!==e)throw new RangeError(`BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`)}async deleteBlob(e,t,a){let s,n;if(typeof e=="string"&&(t instanceof D||me(t)))s=e,n=t;else if(e instanceof le)s=e.url,n=e.credential,a=t;else throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");a||(a={});const{span:i,updatedOptions:o}=g("BatchDeleteRequest-addSubRequest",a);try{this.setBatchType("delete"),await this.addSubRequestInternal({url:s,credential:n},async()=>{await new le(s,this.batchRequest.createPipeline(n)).delete(o)})}catch(m){throw i.setStatus({code:u.ERROR,message:m.message}),m}finally{i.end()}}async setBlobAccessTier(e,t,a,s){let n,i,o;if(typeof e=="string"&&(t instanceof D||me(t)))n=e,i=t,o=a;else if(e instanceof le)n=e.url,i=e.credential,o=t,s=a;else throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");s||(s={});const{span:m,updatedOptions:l}=g("BatchSetTierRequest-addSubRequest",s);try{this.setBatchType("setAccessTier"),await this.addSubRequestInternal({url:n,credential:i},async()=>{await new le(n,this.batchRequest.createPipeline(i)).setAccessTier(o,l)})}catch(c){throw m.setStatus({code:u.ERROR,message:c.message}),c}finally{m.end()}}}class jf{constructor(){this.operationCount=0,this.body="";const e=$e();this.boundary=`batch_${e}`,this.subRequestPrefix=`--${this.boundary}${xe}${we.CONTENT_TYPE}: application/http${xe}${we.CONTENT_TRANSFER_ENCODING}: binary`,this.multipartContentType=`multipart/mixed; boundary=${this.boundary}`,this.batchRequestEnding=`--${this.boundary}--`,this.subRequests=new Map}createPipeline(e){const t=e instanceof D,a=3+(t?0:1),s=new Array(a);return s[0]=sa(),s[1]=new Gf,t||(s[2]=me(e)?Im(Xs(e,Em),e):e),s[a-1]=new $f(this),new Mm(s,{})}appendSubRequestToBody(e){this.body+=[this.subRequestPrefix,`${we.CONTENT_ID}: ${this.operationCount}`,"",`${e.method.toString()} ${Uy(e.url)} ${Tm}${xe}`].join(xe);for(const t of e.headers.headersArray())this.body+=`${t.name}: ${t.value}${xe}`;this.body+=xe}preAddSubRequest(e){if(this.operationCount>=ns)throw new RangeError(`Cannot exceed ${ns} sub requests in a single batch`);const t=Om(e.url);if(!t||t==="")throw new RangeError(`Invalid url for sub request: '${e.url}'`)}postAddSubRequest(e){this.subRequests.set(this.operationCount,e),this.operationCount++}getHttpRequestBody(){return`${this.body}${this.batchRequestEnding}${xe}`}getMultipartContentType(){return this.multipartContentType}getSubRequests(){return this.subRequests}}class Ff extends F{constructor(e,t,a){super(t,a),this.dummyResponse={request:new Ht,status:200,headers:new Ge},this.batchRequest=e}async sendRequest(e){return await this.batchRequest.appendSubRequestToBody(e),this.dummyResponse}}class $f{constructor(e){this.batchRequest=e}create(e,t){return new Ff(this.batchRequest,e,t)}}class Kf extends F{constructor(e,t){super(e,t)}async sendRequest(e){let t="";for(const a of e.headers.headersArray())Bm(a.name,we.X_MS_VERSION)&&(t=a.name);return t!==""&&e.headers.remove(t),this._nextPolicy.sendRequest(e)}}class Gf{create(e,t){return new Kf(e,t)}}class Gm{constructor(e,t,a){let s;Ve(t)?s=t:t?s=j(t,a):s=j(new D,a);const n=new Ma(e,s.toServiceClientOptions()),i=Om(e);i&&i!=="/"?this.serviceOrContainerContext=new Ut(n):this.serviceOrContainerContext=new Sm(n)}createBatch(){return new Ur}async deleteBlobs(e,t,a){const s=new Ur;for(const n of e)typeof n=="string"?await s.deleteBlob(n,t,a):await s.deleteBlob(n,t);return this.submitBatch(s)}async setBlobsAccessTier(e,t,a,s){const n=new Ur;for(const i of e)typeof i=="string"?await n.setBlobAccessTier(i,t,a,s):await n.setBlobAccessTier(i,t,a);return this.submitBatch(n)}async submitBatch(e,t={}){if(!e||e.getSubRequests().size===0)throw new RangeError("Batch request should contain one or more sub requests.");const{span:a,updatedOptions:s}=g("BlobBatchClient-submitBatch",t);try{const n=e.getHttpRequestBody(),i=await this.serviceOrContainerContext.submitBatch(kf(n),e.getMultiPartContentType(),n,Object.assign(Object.assign({},t),P(s))),m=await new Uf(i,e.getSubRequests()).parseBatchResponse();return{_response:i._response,contentType:i.contentType,errorCode:i.errorCode,requestId:i.requestId,clientRequestId:i.clientRequestId,version:i.version,subResponses:m.subResponses,subResponsesSucceededCount:m.subResponsesSucceededCount,subResponsesFailedCount:m.subResponsesFailedCount}}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}}class Xf extends _a{constructor(e,t,a){let s,n;if(a=a||{},Ve(t))n=e,s=t;else if(t instanceof D||me(t))n=e,s=j(t,a);else if(!t&&typeof t!="string")n=e,s=j(new D,a);else if(t&&typeof t=="string"){const i=t,o=vt(e);if(o.kind==="AccountConnString")throw new Error("Account connection string is only supported in Node.js environment");if(o.kind==="SASConnString")n=re(o.url,encodeURIComponent(i))+"?"+o.accountSas,s=j(new D,a);else throw new Error("Connection string must be either an Account connection string or a SAS connection string")}else throw new Error("Expecting non-empty strings for containerName parameter");super(n,s),this._containerName=this.getContainerNameFromUrl(),this.containerContext=new Ut(this.storageClientContext)}get containerName(){return this._containerName}async create(e={}){const{span:t,updatedOptions:a}=g("ContainerClient-create",e);try{return await this.containerContext.create(Object.assign(Object.assign({},e),P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async createIfNotExists(e={}){var t,a;const{span:s,updatedOptions:n}=g("ContainerClient-createIfNotExists",e);try{const i=await this.create(n);return Object.assign(Object.assign({succeeded:!0},i),{_response:i._response})}catch(i){if(((t=i.details)===null||t===void 0?void 0:t.errorCode)==="ContainerAlreadyExists")return s.setStatus({code:u.ERROR,message:"Expected exception when creating a container only if it does not already exist."}),Object.assign(Object.assign({succeeded:!1},(a=i.response)===null||a===void 0?void 0:a.parsedHeaders),{_response:i.response});throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async exists(e={}){const{span:t,updatedOptions:a}=g("ContainerClient-exists",e);try{return await this.getProperties({abortSignal:e.abortSignal,tracingOptions:a.tracingOptions}),!0}catch(s){if(s.statusCode===404)return t.setStatus({code:u.ERROR,message:"Expected exception when checking container existence"}),!1;throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}getBlobClient(e){return new le(re(this.url,er(e)),this.pipeline)}getAppendBlobClient(e){return new Sr(re(this.url,er(e)),this.pipeline)}getBlockBlobClient(e){return new zr(re(this.url,er(e)),this.pipeline)}getPageBlobClient(e){return new Er(re(this.url,er(e)),this.pipeline)}async getProperties(e={}){e.conditions||(e.conditions={});const{span:t,updatedOptions:a}=g("ContainerClient-getProperties",e);try{return await this.containerContext.getProperties(Object.assign(Object.assign({abortSignal:e.abortSignal},e.conditions),P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async delete(e={}){e.conditions||(e.conditions={});const{span:t,updatedOptions:a}=g("ContainerClient-delete",e);try{return await this.containerContext.delete(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:e.conditions},P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async deleteIfExists(e={}){var t,a;const{span:s,updatedOptions:n}=g("ContainerClient-deleteIfExists",e);try{const i=await this.delete(n);return Object.assign(Object.assign({succeeded:!0},i),{_response:i._response})}catch(i){if(((t=i.details)===null||t===void 0?void 0:t.errorCode)==="ContainerNotFound")return s.setStatus({code:u.ERROR,message:"Expected exception when deleting a container only if it exists."}),Object.assign(Object.assign({succeeded:!1},(a=i.response)===null||a===void 0?void 0:a.parsedHeaders),{_response:i.response});throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async setMetadata(e,t={}){if(t.conditions||(t.conditions={}),t.conditions.ifUnmodifiedSince)throw new RangeError("the IfUnmodifiedSince must have their default values because they are ignored by the blob service");const{span:a,updatedOptions:s}=g("ContainerClient-setMetadata",t);try{return await this.containerContext.setMetadata(Object.assign({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:t.conditions},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async getAccessPolicy(e={}){e.conditions||(e.conditions={});const{span:t,updatedOptions:a}=g("ContainerClient-getAccessPolicy",e);try{const s=await this.containerContext.getAccessPolicy(Object.assign({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions},P(a))),n={_response:s._response,blobPublicAccess:s.blobPublicAccess,date:s.date,etag:s.etag,errorCode:s.errorCode,lastModified:s.lastModified,requestId:s.requestId,clientRequestId:s.clientRequestId,signedIdentifiers:[],version:s.version};for(const i of s){let o;i.accessPolicy&&(o={permissions:i.accessPolicy.permissions},i.accessPolicy.expiresOn&&(o.expiresOn=new Date(i.accessPolicy.expiresOn)),i.accessPolicy.startsOn&&(o.startsOn=new Date(i.accessPolicy.startsOn))),n.signedIdentifiers.push({accessPolicy:o,id:i.id})}return n}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async setAccessPolicy(e,t,a={}){a.conditions=a.conditions||{};const{span:s,updatedOptions:n}=g("ContainerClient-setAccessPolicy",a);try{const i=[];for(const o of t||[])i.push({accessPolicy:{expiresOn:o.accessPolicy.expiresOn?I(o.accessPolicy.expiresOn):"",permissions:o.accessPolicy.permissions,startsOn:o.accessPolicy.startsOn?I(o.accessPolicy.startsOn):""},id:o.id});return await this.containerContext.setAccessPolicy(Object.assign({abortSignal:a.abortSignal,access:e,containerAcl:i,leaseAccessConditions:a.conditions,modifiedAccessConditions:a.conditions},P(n)))}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}getBlobLeaseClient(e){return new Hm(this,e)}async uploadBlockBlob(e,t,a,s={}){const{span:n,updatedOptions:i}=g("ContainerClient-uploadBlockBlob",s);try{const o=this.getBlockBlobClient(e),m=await o.upload(t,a,i);return{blockBlobClient:o,response:m}}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async deleteBlob(e,t={}){const{span:a,updatedOptions:s}=g("ContainerClient-deleteBlob",t);try{let n=this.getBlobClient(e);return t.versionId&&(n=n.withVersion(t.versionId)),await n.delete(s)}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async listBlobFlatSegment(e,t={}){const{span:a,updatedOptions:s}=g("ContainerClient-listBlobFlatSegment",t);try{const n=await this.containerContext.listBlobFlatSegment(Object.assign(Object.assign({marker:e},t),P(s)));return Object.assign(Object.assign({},n),{_response:Object.assign(Object.assign({},n._response),{parsedBody:Gy(n._response.parsedBody)}),segment:Object.assign(Object.assign({},n.segment),{blobItems:n.segment.blobItems.map(o=>Object.assign(Object.assign({},o),{name:nt(o.name),tags:It(o.blobTags),objectReplicationSourceProperties:dr(o.objectReplicationMetadata)}))})})}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async listBlobHierarchySegment(e,t,a={}){var s;const{span:n,updatedOptions:i}=g("ContainerClient-listBlobHierarchySegment",a);try{const o=await this.containerContext.listBlobHierarchySegment(e,Object.assign(Object.assign({marker:t},a),P(i)));return Object.assign(Object.assign({},o),{_response:Object.assign(Object.assign({},o._response),{parsedBody:Xy(o._response.parsedBody)}),segment:Object.assign(Object.assign({},o.segment),{blobItems:o.segment.blobItems.map(l=>Object.assign(Object.assign({},l),{name:nt(l.name),tags:It(l.blobTags),objectReplicationSourceProperties:dr(l.objectReplicationMetadata)})),blobPrefixes:(s=o.segment.blobPrefixes)===null||s===void 0?void 0:s.map(l=>Object.assign(Object.assign({},l),{name:nt(l.name)}))})})}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}listSegments(e,t={}){return te(this,arguments,function*(){let s;if(e||e===void 0)do s=yield E(this.listBlobFlatSegment(e,t)),e=s.continuationToken,yield yield E(yield E(s));while(e)})}listItems(e={}){return te(this,arguments,function*(){var a,s;let n;try{for(var i=ne(this.listSegments(n,e)),o;o=yield E(i.next()),!o.done;){const m=o.value;yield E(yield*ot(ne(m.segment.blobItems)))}}catch(m){a={error:m}}finally{try{o&&!o.done&&(s=i.return)&&(yield E(s.call(i)))}finally{if(a)throw a.error}}})}listBlobsFlat(e={}){const t=[];e.includeCopy&&t.push("copy"),e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSnapshots&&t.push("snapshots"),e.includeVersions&&t.push("versions"),e.includeUncommitedBlobs&&t.push("uncommittedblobs"),e.includeTags&&t.push("tags"),e.includeDeletedWithVersions&&t.push("deletedwithversions"),e.includeImmutabilityPolicy&&t.push("immutabilitypolicy"),e.includeLegalHold&&t.push("legalhold"),e.prefix===""&&(e.prefix=void 0);const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),s=this.listItems(a);return{next(){return s.next()},[Symbol.asyncIterator](){return this},byPage:(n={})=>this.listSegments(n.continuationToken,Object.assign({maxPageSize:n.maxPageSize},a))}}listHierarchySegments(e,t,a={}){return te(this,arguments,function*(){let n;if(t||t===void 0)do n=yield E(this.listBlobHierarchySegment(e,t,a)),t=n.continuationToken,yield yield E(yield E(n));while(t)})}listItemsByHierarchy(e,t={}){return te(this,arguments,function*(){var s,n;let i;try{for(var o=ne(this.listHierarchySegments(e,i,t)),m;m=yield E(o.next()),!m.done;){const c=m.value.segment;if(c.blobPrefixes)for(const p of c.blobPrefixes)yield yield E(Object.assign({kind:"prefix"},p));for(const p of c.blobItems)yield yield E(Object.assign({kind:"blob"},p))}}catch(l){s={error:l}}finally{try{m&&!m.done&&(n=o.return)&&(yield E(n.call(o)))}finally{if(s)throw s.error}}})}listBlobsByHierarchy(e,t={}){if(e==="")throw new RangeError("delimiter should contain one or more characters");const a=[];t.includeCopy&&a.push("copy"),t.includeDeleted&&a.push("deleted"),t.includeMetadata&&a.push("metadata"),t.includeSnapshots&&a.push("snapshots"),t.includeVersions&&a.push("versions"),t.includeUncommitedBlobs&&a.push("uncommittedblobs"),t.includeTags&&a.push("tags"),t.includeDeletedWithVersions&&a.push("deletedwithversions"),t.includeImmutabilityPolicy&&a.push("immutabilitypolicy"),t.includeLegalHold&&a.push("legalhold"),t.prefix===""&&(t.prefix=void 0);const s=Object.assign(Object.assign({},t),a.length>0?{include:a}:{}),n=this.listItemsByHierarchy(e,s);return{async next(){return n.next()},[Symbol.asyncIterator](){return this},byPage:(i={})=>this.listHierarchySegments(e,i.continuationToken,Object.assign({maxPageSize:i.maxPageSize},s))}}async findBlobsByTagsSegment(e,t,a={}){const{span:s,updatedOptions:n}=g("ContainerClient-findBlobsByTagsSegment",a);try{const i=await this.containerContext.filterBlobs(Object.assign({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize},P(n)));return Object.assign(Object.assign({},i),{_response:i._response,blobs:i.blobs.map(m=>{var l;let c="";return((l=m.tags)===null||l===void 0?void 0:l.blobTagSet.length)===1&&(c=m.tags.blobTagSet[0].value),Object.assign(Object.assign({},m),{tags:It(m.tags),tagValue:c})})})}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}findBlobsByTagsSegments(e,t,a={}){return te(this,arguments,function*(){let n;if(t||t===void 0)do n=yield E(this.findBlobsByTagsSegment(e,t,a)),n.blobs=n.blobs||[],t=n.continuationToken,yield yield E(n);while(t)})}findBlobsByTagsItems(e,t={}){return te(this,arguments,function*(){var s,n;let i;try{for(var o=ne(this.findBlobsByTagsSegments(e,i,t)),m;m=yield E(o.next()),!m.done;){const l=m.value;yield E(yield*ot(ne(l.blobs)))}}catch(l){s={error:l}}finally{try{m&&!m.done&&(n=o.return)&&(yield E(n.call(o)))}finally{if(s)throw s.error}}})}findBlobsByTags(e,t={}){const a=Object.assign({},t),s=this.findBlobsByTagsItems(e,a);return{next(){return s.next()},[Symbol.asyncIterator](){return this},byPage:(n={})=>this.findBlobsByTagsSegments(e,n.continuationToken,Object.assign({maxPageSize:n.maxPageSize},a))}}getContainerNameFromUrl(){let e;try{const t=G.parse(this.url);if(t.getHost().split(".")[1]==="blob"?e=t.getPath().split("/")[1]:Ia(t)?e=t.getPath().split("/")[2]:e=t.getPath().split("/")[1],e=decodeURIComponent(e),!e)throw new Error("Provided containerName is invalid.");return e}catch{throw new Error("Unable to extract containerName with provided information.")}}generateSasUrl(e){return new Promise(t=>{if(!(this.credential instanceof vr))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=_m(Object.assign({containerName:this._containerName},e),this.credential).toString();t(qa(this.url,a))})}getBlobBatchClient(){return new Gm(this.url,this.pipeline)}}class $t{constructor(){this.read=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.add=!1,this.create=!1,this.update=!1,this.process=!1,this.tag=!1,this.filter=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new $t;for(const a of e)switch(a){case"r":t.read=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"l":t.list=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"u":t.update=!0;break;case"p":t.process=!0;break;case"t":t.tag=!0;break;case"f":t.filter=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission character: ${a}`)}return t}static from(e){const t=new $t;return e.read&&(t.read=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.filter&&(t.filter=!0),e.tag&&(t.tag=!0),e.list&&(t.list=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.update&&(t.update=!0),e.process&&(t.process=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.filter&&e.push("f"),this.tag&&e.push("t"),this.list&&e.push("l"),this.add&&e.push("a"),this.create&&e.push("c"),this.update&&e.push("u"),this.process&&e.push("p"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class La{constructor(){this.service=!1,this.container=!1,this.object=!1}static parse(e){const t=new La;for(const a of e)switch(a){case"s":t.service=!0;break;case"c":t.container=!0;break;case"o":t.object=!0;break;default:throw new RangeError(`Invalid resource type: ${a}`)}return t}toString(){const e=[];return this.service&&e.push("s"),this.container&&e.push("c"),this.object&&e.push("o"),e.join("")}}class wr{constructor(){this.blob=!1,this.file=!1,this.queue=!1,this.table=!1}static parse(e){const t=new wr;for(const a of e)switch(a){case"b":t.blob=!0;break;case"f":t.file=!0;break;case"q":t.queue=!0;break;case"t":t.table=!0;break;default:throw new RangeError(`Invalid service character: ${a}`)}return t}toString(){const e=[];return this.blob&&e.push("b"),this.table&&e.push("t"),this.queue&&e.push("q"),this.file&&e.push("f"),e.join("")}}function Qf(r,e){const t=r.version?r.version:Ba;if(r.permissions&&r.permissions.setImmutabilityPolicy&&t<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(r.permissions&&r.permissions.deleteVersion&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'x' permission.");if(r.permissions&&r.permissions.permanentDelete&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'y' permission.");if(r.permissions&&r.permissions.tag&&t<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 't' permission.");if(r.permissions&&r.permissions.filter&&t<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 'f' permission.");if(r.encryptionScope&&t<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");const a=$t.parse(r.permissions.toString()),s=wr.parse(r.services).toString(),n=La.parse(r.resourceTypes).toString();let i;t>="2020-12-06"?i=[e.accountName,a,s,n,r.startsOn?I(r.startsOn,!1):"",I(r.expiresOn,!1),r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",t,r.encryptionScope?r.encryptionScope:"",""].join(`
`):i=[e.accountName,a,s,n,r.startsOn?I(r.startsOn,!1):"",I(r.expiresOn,!1),r.ipRange?ve(r.ipRange):"",r.protocol?r.protocol:"",t,""].join(`
`);const o=e.computeHMACSHA256(i);return new et(t,o,a.toString(),s,n,r.protocol,r.startsOn,r.expiresOn,r.ipRange,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,r.encryptionScope)}class Aa extends _a{constructor(e,t,a){let s;Ve(t)?s=t:t instanceof D||me(t)?s=j(t,a):s=j(new D,a),super(e,s),this.serviceContext=new Sm(this.storageClientContext)}static fromConnectionString(e,t){t=t||{};const a=vt(e);if(a.kind==="AccountConnString")throw new Error("Account connection string is only supported in Node.js environment");if(a.kind==="SASConnString"){const s=j(new D,t);return new Aa(a.url+"?"+a.accountSas,s)}else throw new Error("Connection string must be either an Account connection string or a SAS connection string")}getContainerClient(e){return new Xf(re(this.url,encodeURIComponent(e)),this.pipeline)}async createContainer(e,t={}){const{span:a,updatedOptions:s}=g("BlobServiceClient-createContainer",t);try{const n=this.getContainerClient(e),i=await n.create(s);return{containerClient:n,containerCreateResponse:i}}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async deleteContainer(e,t={}){const{span:a,updatedOptions:s}=g("BlobServiceClient-deleteContainer",t);try{return await this.getContainerClient(e).delete(s)}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async undeleteContainer(e,t,a={}){const{span:s,updatedOptions:n}=g("BlobServiceClient-undeleteContainer",a);try{const i=this.getContainerClient(a.destinationContainerName||e),m=await new Ut(i.storageClientContext).restore(Object.assign({deletedContainerName:e,deletedContainerVersion:t},n));return{containerClient:i,containerUndeleteResponse:m}}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}async renameContainer(e,t,a={}){var s;const{span:n,updatedOptions:i}=g("BlobServiceClient-renameContainer",a);try{const o=this.getContainerClient(t),l=await new Ut(o.storageClientContext).rename(e,Object.assign(Object.assign({},i),{sourceLeaseId:(s=a.sourceCondition)===null||s===void 0?void 0:s.leaseId}));return{containerClient:o,containerRenameResponse:l}}catch(o){throw n.setStatus({code:u.ERROR,message:o.message}),o}finally{n.end()}}async getProperties(e={}){const{span:t,updatedOptions:a}=g("BlobServiceClient-getProperties",e);try{return await this.serviceContext.getProperties(Object.assign({abortSignal:e.abortSignal},P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async setProperties(e,t={}){const{span:a,updatedOptions:s}=g("BlobServiceClient-setProperties",t);try{return await this.serviceContext.setProperties(e,Object.assign({abortSignal:t.abortSignal},P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async getStatistics(e={}){const{span:t,updatedOptions:a}=g("BlobServiceClient-getStatistics",e);try{return await this.serviceContext.getStatistics(Object.assign({abortSignal:e.abortSignal},P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async getAccountInfo(e={}){const{span:t,updatedOptions:a}=g("BlobServiceClient-getAccountInfo",e);try{return await this.serviceContext.getAccountInfo(Object.assign({abortSignal:e.abortSignal},P(a)))}catch(s){throw t.setStatus({code:u.ERROR,message:s.message}),s}finally{t.end()}}async listContainersSegment(e,t={}){const{span:a,updatedOptions:s}=g("BlobServiceClient-listContainersSegment",t);try{return await this.serviceContext.listContainersSegment(Object.assign(Object.assign(Object.assign({abortSignal:t.abortSignal,marker:e},t),{include:typeof t.include=="string"?[t.include]:t.include}),P(s)))}catch(n){throw a.setStatus({code:u.ERROR,message:n.message}),n}finally{a.end()}}async findBlobsByTagsSegment(e,t,a={}){const{span:s,updatedOptions:n}=g("BlobServiceClient-findBlobsByTagsSegment",a);try{const i=await this.serviceContext.filterBlobs(Object.assign({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize},P(n)));return Object.assign(Object.assign({},i),{_response:i._response,blobs:i.blobs.map(m=>{var l;let c="";return((l=m.tags)===null||l===void 0?void 0:l.blobTagSet.length)===1&&(c=m.tags.blobTagSet[0].value),Object.assign(Object.assign({},m),{tags:It(m.tags),tagValue:c})})})}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}findBlobsByTagsSegments(e,t,a={}){return te(this,arguments,function*(){let n;if(t||t===void 0)do n=yield E(this.findBlobsByTagsSegment(e,t,a)),n.blobs=n.blobs||[],t=n.continuationToken,yield yield E(n);while(t)})}findBlobsByTagsItems(e,t={}){return te(this,arguments,function*(){var s,n;let i;try{for(var o=ne(this.findBlobsByTagsSegments(e,i,t)),m;m=yield E(o.next()),!m.done;){const l=m.value;yield E(yield*ot(ne(l.blobs)))}}catch(l){s={error:l}}finally{try{m&&!m.done&&(n=o.return)&&(yield E(n.call(o)))}finally{if(s)throw s.error}}})}findBlobsByTags(e,t={}){const a=Object.assign({},t),s=this.findBlobsByTagsItems(e,a);return{next(){return s.next()},[Symbol.asyncIterator](){return this},byPage:(n={})=>this.findBlobsByTagsSegments(e,n.continuationToken,Object.assign({maxPageSize:n.maxPageSize},a))}}listSegments(e,t={}){return te(this,arguments,function*(){let s;if(e||e===void 0)do s=yield E(this.listContainersSegment(e,t)),s.containerItems=s.containerItems||[],e=s.continuationToken,yield yield E(yield E(s));while(e)})}listItems(e={}){return te(this,arguments,function*(){var a,s;let n;try{for(var i=ne(this.listSegments(n,e)),o;o=yield E(i.next()),!o.done;){const m=o.value;yield E(yield*ot(ne(m.containerItems)))}}catch(m){a={error:m}}finally{try{o&&!o.done&&(s=i.return)&&(yield E(s.call(i)))}finally{if(a)throw a.error}}})}listContainers(e={}){e.prefix===""&&(e.prefix=void 0);const t=[];e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSystem&&t.push("system");const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),s=this.listItems(a);return{next(){return s.next()},[Symbol.asyncIterator](){return this},byPage:(n={})=>this.listSegments(n.continuationToken,Object.assign({maxPageSize:n.maxPageSize},a))}}async getUserDelegationKey(e,t,a={}){const{span:s,updatedOptions:n}=g("BlobServiceClient-getUserDelegationKey",a);try{const i=await this.serviceContext.getUserDelegationKey({startsOn:I(e,!1),expiresOn:I(t,!1)},Object.assign({abortSignal:a.abortSignal},P(n))),o={signedObjectId:i.signedObjectId,signedTenantId:i.signedTenantId,signedStartsOn:new Date(i.signedStartsOn),signedExpiresOn:new Date(i.signedExpiresOn),signedService:i.signedService,signedVersion:i.signedVersion,value:i.value};return Object.assign({_response:i._response,requestId:i.requestId,clientRequestId:i.clientRequestId,version:i.version,date:i.date,errorCode:i.errorCode},o)}catch(i){throw s.setStatus({code:u.ERROR,message:i.message}),i}finally{s.end()}}getBlobBatchClient(){return new Gm(this.url,this.pipeline)}generateAccountSasUrl(e,t=$t.parse("r"),a="sco",s={}){if(!(this.credential instanceof vr))throw RangeError("Can only generate the account SAS when the client is initialized with a shared key credential");if(e===void 0){const i=new Date;e=new Date(i.getTime()+3600*1e3)}const n=Qf(Object.assign({permissions:t,expiresOn:e,resourceTypes:a,services:wr.parse("b").toString()},s),this.credential).toString();return qa(this.url,n)}}const Wf="upload",Yf="clubitsstoragepoc",Zf=async(r,e)=>{const t=`https://${Yf}.blob.core.windows.net/?${e}`,n=new Aa(t).getContainerClient(Wf).getBlockBlobClient(r.name),i={blobHTTPHeaders:{blobContentType:r.type}};return await n.uploadData(r,i),n.url};export{Zf as u};
